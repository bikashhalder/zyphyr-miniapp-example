{"version":3,"sources":["webpack://org-mini-app/node_modules/memoize-one/dist/memoize-one.cjs.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/NativeAnimatedAllowlist.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/NativeAnimatedModule.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/NativeAnimatedTurboModule.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/Keyboard/NativeKeyboardObserver.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/RefreshControl/AndroidSwipeRefreshLayoutNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/RefreshControl/PullToRefreshViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollContentViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/Sound/NativeSoundManager.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/View/ViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/EventEmitter/NativeEventEmitter.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/NativeImageLoaderAndroid.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/TextInlineImageNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Interaction/NativeFrameRateLogger.js","webpack://org-mini-app/node_modules/react-native/Libraries/ReactNative/requireNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Text/TextNativeComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/NativeAppearance.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/codegenNativeComponent.js","webpack://org-mini-app/node_modules/react-native/src/private/animated/NativeAnimatedHelper.js","webpack://org-mini-app/node_modules/react-native/src/private/animated/NativeAnimatedValidation.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/components/AndroidHorizontalScrollContentViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/components/AndroidSwipeRefreshLayoutNativeComponent.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/components/PullToRefreshViewNativeComponent.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeAnimatedModule.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeAnimatedTurboModule.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeAppearance.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeFrameRateLogger.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeImageLoaderAndroid.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeKeyboardObserver.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativeSoundManager.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/Animated.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/AnimatedEvent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/AnimatedImplementation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/AnimatedMock.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/Easing.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/SpringConfig.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/animations/Animation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/animations/DecayAnimation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/animations/SpringAnimation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/animations/TimingAnimation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/bezier.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedFlatList.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedImage.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedScrollView.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedSectionList.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedText.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/components/AnimatedView.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/createAnimatedComponent.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedAddition.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedColor.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedDiffClamp.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedDivision.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedInterpolation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedModulo.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedMultiplication.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedNode.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedObject.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedProps.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedStyle.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedSubtraction.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedTracking.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedTransform.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedValue.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedValueXY.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/nodes/AnimatedWithChildren.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/shouldUseTurboAnimatedModule.js","webpack://org-mini-app/node_modules/react-native/Libraries/Animated/useAnimatedProps.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/Keyboard/Keyboard.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/RefreshControl/RefreshControl.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollView.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewCommands.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewContext.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/ScrollView/processDecelerationRate.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/Sound/SoundManager.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/Touchable/TouchableOpacity.js","webpack://org-mini-app/node_modules/react-native/Libraries/Components/View/View.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/Image.android.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageAnalyticsTagContext.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageBackground.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageInjection.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageSourceUtils.js","webpack://org-mini-app/node_modules/react-native/Libraries/Image/ImageUtils.js","webpack://org-mini-app/node_modules/react-native/Libraries/Interaction/FrameRateLogger.js","webpack://org-mini-app/node_modules/react-native/Libraries/Interaction/InteractionManager.js","webpack://org-mini-app/node_modules/react-native/Libraries/Interaction/InteractionManagerStub.js","webpack://org-mini-app/node_modules/react-native/Libraries/Interaction/TaskQueue.js","webpack://org-mini-app/node_modules/react-native/Libraries/LayoutAnimation/LayoutAnimation.js","webpack://org-mini-app/node_modules/react-native/Libraries/Lists/FlatList.js","webpack://org-mini-app/node_modules/react-native/Libraries/Lists/SectionList.js","webpack://org-mini-app/node_modules/react-native/Libraries/Pressability/HoverState.js","webpack://org-mini-app/node_modules/react-native/Libraries/Pressability/Pressability.js","webpack://org-mini-app/node_modules/react-native/Libraries/Pressability/PressabilityDebug.js","webpack://org-mini-app/node_modules/react-native/Libraries/Pressability/PressabilityPerformanceEventEmitter.js","webpack://org-mini-app/node_modules/react-native/Libraries/Pressability/usePressability.js","webpack://org-mini-app/node_modules/react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils.js","webpack://org-mini-app/node_modules/react-native/Libraries/ReactNative/ReactNativeFeatureFlags.js","webpack://org-mini-app/node_modules/react-native/Libraries/Renderer/shims/createReactNativeComponentClass.js","webpack://org-mini-app/node_modules/react-native/Libraries/StyleSheet/Rect.js","webpack://org-mini-app/node_modules/react-native/Libraries/StyleSheet/StyleSheet.js","webpack://org-mini-app/node_modules/react-native/Libraries/StyleSheet/splitLayoutProps.js","webpack://org-mini-app/node_modules/react-native/Libraries/Text/Text.js","webpack://org-mini-app/node_modules/react-native/Libraries/Text/TextAncestor.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/Appearance.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/DebugEnvironment.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/dismissKeyboard.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/infoLog.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/useColorScheme.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/useMergeRefs.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/useRefEffect.js","webpack://org-mini-app/node_modules/react-native/src/private/animated/useAnimatedPropsMemo.js","webpack://org-mini-app/node_modules/react-native/src/private/components/HScrollViewNativeComponents.js","webpack://org-mini-app/node_modules/react-native/src/private/components/VScrollViewNativeComponents.js","webpack://org-mini-app/node_modules/react-native/src/private/styles/composeStyles.js"],"names":["Number","safeIsNaN","newInputs","lastInputs","i","isEqual","areInputsEqual","lastArgs","calledOnce","arguments","_i","lastThis","resultFn","lastResult","value","SUPPORTED_COLOR_STYLES","SUPPORTED_STYLES","_ReactNativeFeatureFlags","SUPPORTED_TRANSFORMS","SUPPORTED_INTERPOLATION_PARAMS","_default","allowInterpolationParam","allowStyleProp","allowTransformProp","isSupportedColorStyleProp","isSupportedInterpolationParam","isSupportedStyleProp","isSupportedTransformProp","_NativeAnimatedModule","_NativeAnimatedTurboModule","_NativeKeyboardObserver","_AndroidSwipeRefreshLayoutNativeComponent","_PullToRefreshViewNativeComponent","require","__INTERNAL_VIEW_CONFIG","_Platform","_ViewConfigIgnore","_NativeSoundManager","_codegenNativeCommands","Commands","NativeEventEmitter","addListener","emit","removeAllListeners","listenerCount","_invariant","nativeModule","console","_RCTDeviceEventEmitter","subscription","_this__nativeModule","_RCTDeviceEventEmitter1","eventType","_NativeImageLoaderAndroid","_NativeFrameRateLogger","createReactNativeComponentClass","getNativeComponentAttributes","uiViewClassName","textViewConfig","virtualTextViewConfig","_createReactNativeComponentClass","NativeText","global","_UIManager","NativeVirtualText","_ViewConfig","_NativeAppearance","options","Error","_requireNativeComponent","NativeAnimatedModule","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","Set","waitingForQueuedOperations","queueOperations","queue","singleOpQueue","isSingleOpBatching","flushQueueImmediate","eventListenerGetValueCallbacks","eventListenerAnimationFinishedCallbacks","globalEventEmitterGetValueListener","globalEventEmitterAnimationFinishedListener","createNativeOperations","NativeOperations","API","_warnedMissingNativeAnimated","methodNames","nativeOperations","ii1","ii","operationID","_singleOpQueue","methodName","_nullthrows","method","args","params","callback","Array","animation","config","parseFloat","Math","degrees","clearTimeout","clearImmediate","setImmediate","ensureGlobalEventEmitterListeners","q","nativeEventEmitter","_NativeEventEmitter","_NativeAnimatedAllowlist","validateInterpolation","validateStyles","validateTransform","dispatchCommand","ConditionallyIgnoredEventHandlers","_shouldUseTurboAnimatedModule","_AnimatedImplementation","_AnimatedMock","AnimatedEvent","eventMappings","traverse","argMapping","_RendererProxy","viewTag","mapping","_AnimatedValue","_AnimatedValueXY","platformConfig","_NativeAnimatedHelper","eventName","attachNativeEvent","__addListener","__removeListener","__attach","__detach","__getHandler","listener","recMapping","recEvt","_combineCallbacks","maybeVectorAnim","spring","timing","decay","sequence","parallel","delay","_AnimatedColor","_AnimatedInterpolation","_AnimatedNode","_createAnimatedComponent","_AnimatedEvent","event","_AnimatedAddition","_AnimatedSubtraction","_AnimatedDivision","_AnimatedMultiplication","_AnimatedModulo","_AnimatedDiffClamp","_config","_config_key1","anim","_config_key","start","configuration","_SpringAnimation","_AnimatedTracking","_TimingAnimation","_DecayAnimation","current","onComplete","animations","result","isLooping","doneCount","hasEnded","stopTogether","cb","idx","endResult","time","ref","iterations","resetBeforeIteration","isFinished","iterationsSoFar","restart","animatedEvent","inAnimationCallback","emptyAnimation","mockCompositeAnimation","mockAnimationStart","anyValue","Easing","n","ease","t","bounciness","p","s","_bezier","easing","oValue","stiffnessFromOrigamiValue","dampingFromOrigamiValue","normalize","projectNormal","speed","b3Friction3","b3Friction2","b3Friction1","linearInterpolation","endValue","end","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","startNativeAnimationNextId","_nativeID","_onEnd","_useNativeDriver","Animation","stop","__getNativeAnimationConfig","__findAnimatedPropsNodes","__startAnimationIfNative","__notifyAnimationEnd","__getDebugID","animatedValue","_AnimatedProps","node","_result","_Animation","DecayAnimation","onUpdate","Date","requestAnimationFrame","now","SpringAnimation","getInternalState","_SpringConfig","springConfig1","springConfig","previousAnimation","internalState","setTimeout","k","c","zeta","omega0","v0","x0","envelope1","omega1","envelope","position","TimingAnimation","_easeInOut","easeInOut","frame","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","B","C","aB","aA","calcBezier","getSlope","currentX","aGuessT","Float32Array","sampleValues","intervalStart","aX","currentSample","dist","mX1","mX2","binarySubdivide","newtonRaphsonIterate","mY1","mY2","getTForX","bezier","_FlatList","_Image","AnimatedScrollViewWithInvertedRefreshControl","_ScrollView","AnimatedScrollViewWithoutInvertedRefreshControl","props","_useMemo","_useAnimatedProps1","refreshControlAnimatedProps","_useAnimatedProps2","_useMergeRefs","scrollViewAnimatedProps","_StyleSheet","_splitLayoutProps1","_flattenStyle","_SectionList","_Text","_View","unstable_createAnimatedComponentWithAllowlist","_react","Component","allowlist","reducedProps","style","passthroughAnimatedPropExplicitValues","passthroughStyle","_composeStyles","createAnimatedComponent","_AnimatedWithChildren","AnimatedAddition","__makeNative","__getValue","interpolate","__getNativeConfig","NativeAnimatedAPI","defaultColor","AnimatedColor","isRgbaValue","_normalizeColor","normalizedColor","_PlatformColorValueTypes","setValue","setOffset","flattenOffset","extractOffset","stopAnimation","resetAnimation","_withSuspendedCallbacks","__callListeners","valueIn","isRgbaAnimatedValue","processColor","initColor","rgbaAnimatedValue","shouldUpdateNodeConfig","processedColor","rgbaValue","offset","AnimatedDiffClamp","AnimatedDivision","b","a","numericComponentRegex","AnimatedInterpolation","outputRange","inputRange","_Easing","extrapolateLeft","extrapolateRight","input","findRange","range","Infinity","inputMax","outputMax","match","components","mapStringToNumericComponents","isColor","output","numericComponents","interpolations","createNumericInterpolation","interpolation","values","_getInterpolation","createStringInterpolation","outputType","_processColor","AnimatedModulo","AnimatedMultiplication","_uniqueId","_assertNativeAnimatedModule","_listeners","AnimatedNode","__getAnimatedValue","__addChild","__removeChild","__getChildren","removeListener","hasListeners","__onAnimatedValueUpdateReceived","__getNativeTag","__getPlatformConfig","__setPlatformConfig","toJSON","Map","String","MAX_DEPTH","_nodes","AnimatedObject","Object","ref1","isPlainObject","keys","flatAnimatedNodes","depth","mapAnimatedNodes","element","fn","__getValueWithStaticObject","nodes","index","_animatedView","_callback","_nodeKeys","_props","AnimatedProps","_hasOwnProp","hasOwn","_AnimatedStyle","_AnimatedObject","__getValueWithStaticProps","update","setNativeView","__connectAnimatedView","__disconnectAnimatedView","__restoreDefaultValues","_createAnimatedProps","maybeNode","staticProps","_inputStyle","_style","AnimatedStyle","_AnimatedTransform","__getValueWithStaticStyle","flatStaticStyle","_createAnimatedStyle","AnimatedSubtraction","AnimatedTracking","AnimatedTransform","transforms","transform","mapFunction","propertyValue","__getValueWithStaticTransforms","mapTransforms","animatedNode","_attached","_updateSubscription","ensureUpdateSubscriptionExists","AnimatedValue","leaves","findAnimatedStyles","leaf","operation","nativeTag","data","flushValue","animate","stopTracking","track","_updateValue","_ensureUpdateSubscriptionExists","_executeAsAnimatedBatch","handle","_InteractionManager","AnimatedValueXY","getLayout","getTranslateTransform","number","_NativeAnimatedHelper_API","connectAnimatedNodes","disconnectAnimatedNodes","AnimatedWithChildren","children","child","_useAnimatedPropsMemo","useMemoOrAnimatedPropsMemo","_useReducer","count","scheduleUpdate","onUpdateRef","timerRef","allowlistIfEnabled","useNativePropsInFabric","useAnimatedPropsLifecycle_layoutEffects","useAnimatedPropsLifecycle_insertionEffects","useAnimatedPropsLifecycle","_useRefEffect","reduceAnimatedProps","getEventTarget","target","events","propValue","isFabricInstance","instance","propName","prevNodeRef","isUnmountingRef","drivenAnimationEndedListener","_ReactFabricPublicInstanceUtils","_instance_getScrollResponder","useAnimatedProps","Keyboard","dismiss","isVisible","metrics","scheduleLayoutAnimation","ev","_ev","_dismissKeyboard","_this__currentlyShowing","_LayoutAnimation","Platform","React","componentDidMount","RefreshControl","componentDidUpdate","render","prevProps","_this_props1","props1","_this_props","ScrollView","_ScrollViewContext","styles","_memoizeone","forwardedRef","state","nativeInstance","mutator","componentWillUnmount","_textInputFocusError","_getKeyForIndex","_updateAnimatedNodeAttachment","_setStickyHeaderRef","_onStickyHeaderLayout","createRefForwarder","_this_props_contentOffset","_this_props_contentInset","_ScrollViewCommands","x","y","animated","additionalOffset","rect","_Dimensions","keyboardScreenY","scrollTextInputIntoVisibleRect","top","height","e","_e_nativeEvent_layout","_FrameRateLogger","velocity","timeSinceLastMomentumScrollEnd","_TextInputState","keyboardShouldPersistTaps","currentlyFocusedInput","hasFocusedTextInput","nativeEvent","_Keyboard","newContentInsetTop","indexOfIndex","previousHeader","_HScrollViewNativeComponents","horizontal","_VScrollViewNativeComponents","stickyHeaderIndices","NativeScrollContentView","contentSizeChangeProps","otherProps","hasStickyHeaders","_processDecelerationRate","NativeScrollView","key","_ScrollViewStickyHeader","StickyHeaderComponent","HORIZONTAL","VERTICAL","inverted","scrollViewHeight","hiddenOnScroll","scrollAnimatedValue","_useState","measured","setMeasured","_useState1","layoutY","setLayoutY","_useState2","layoutHeight","setLayoutHeight","_useState3","translateY","setTranslateY","_useState4","nextHeaderLayoutY","setNextHeaderLayoutY","_useState5","isFabric","setIsFabric","_useState6","setAnimatedTranslateY","haveReceivedInitialZeroTranslateY","translateYDebounceTimer","animatedValueListener","_Animated","collisionPoint1","stickStartPoint","collisionPoint","newAnimatedTranslateY","animatedListenerId","TouchableOpacity","_createPressabilityConfig","_setOpacityTo","_opacityActive","_opacityInactive","_getChildStyleOpacityWithDefault","_Pressability","_this_props_accessibilityState","_flattenStyle1","opacity","_this_state_pressability_getEventHandlers","eventHandlersWithoutBlurAndFocus","_this_props_accessibilityState1","_this_props_accessibilityState2","_this_props_accessibilityState3","_this_props_accessibilityState4","_accessibilityState","_this_props_accessibilityValue","_this_props_accessibilityValue1","_this_props_accessibilityValue2","_this_props_accessibilityValue3","_flattenStyle2","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","id","importantForAccessibility","nativeID","tabIndex","_TextAncestor","_ViewNativeComponent","_requestId","_ImageInjection","imageComponentDecorator","_resolveAssetSource","sizes","failure","success","url","prefetch","generateRequestId","_queryCache","_ImageSourceUtils","source","sources","onLoadStart","_source_","defaultSource","loadingIndicatorSource","_props_accessibilityState","_props_accessibilityState1","_props_accessibilityState2","_props_accessibilityState3","_props_accessibilityState4","nativeProps","_ImageUtils","flattenedStyle","objectFit","resizeMode","actualRef","_ImageAnalyticsTagContext","analyticTag","nativePropsWithAnalytics","hasTextAncestor","_ImageViewNativeComponent","_TextInlineImageNativeComponent","setNativeProps","ImageBackground","imageAttachedCallbacks","injectedImageComponentDecorator","pendingCleanupCallbacks","imageAttachedCallbacksRef","imageAttachedCallback","unstable_getImageComponentDecorator","unstable_registerImageAttachedCallback","unstable_setImageComponentDecorator","unstable_unregisterImageAttachedCallback","useWrapRefWithImageAttachedCallbacks","getImageSourcesFromImageProps","imageProps","width","headers","sourceList","shouldUseSrcForDefaultScale","imageSrc","_imageSrc_split","tmp","parseInt","isNaN","scale","convertObjectFitToResizeMode","objectFitMap","invariant","BatchedBridge","infoLog","_EventEmitter","_emitter","DEBUG_DELAY","InteractionManager","_interactionSet","_addInteractionSet","_deleteInteractionSet","TaskQueue","_taskQueue","_nextUpdateHandle","_inc","_deadline","_processUpdate","_scheduleUpdate","tasks","Promise","promise","task","immediateID","reject","TypeError","resolve","enqueue","enqueueTasks","cancelTasks","hasTasksToProcess","processNext","_getCurrentQueue","_genPromise","tasksToCancel","JSON","stackIdx","stackItem","ex","UIManager","isLayoutAnimationEnabled","create","Presets","animationCompletionHasRun","raceWithAnimationId","_FabricUIManager","FabricUIManager","onAnimationComplete","onAnimationDidFail","_global_nativeFabricUIManager","onAnimationDidEnd","View","StyleSheet","deepDiffer","removeClippedSubviews","numColumns","scrollToEnd","FlatList","scrollToIndex","scrollToItem","scrollToOffset","recordInteraction","flashScrollIndicators","getScrollResponder","getNativeScrollRef","getScrollableNode","_checkProps","_pushMultiColumnViewable","_createOnViewableItemsChanged","pair","numColumnsOrDefault","kk","isArrayLike","_virtualizedlists","keyExtractor","cols","ListItemComponent","renderItem","info","columnWrapperStyle","onViewableItemsChanged","v","arr","changed","viewableItems","strictMode","restProps","removeClippedSubviewsOrDefault","renderer","SectionList","scrollToLocation","listRef","_stickySectionHeadersEnabled","items","isHoverEnabled","isEnabled","Boolean","window","HOVER_THRESHOLD_MS","lastTouchTimestamp","document","Transitions","isActiveSignal","isActivationSignal","isPressInSignal","isTerminalSignal","DEFAULT_PRESS_RECT_OFFSETS","longPressDeactivationDistance","Pressability","getTouchFromPressEvent","_input_nativeEvent","signal","configure","reset","getEventHandlers","_createEventHandlers","_receiveSignal","_performTransitionSideEffects","_activate","_deactivate","_measureResponderRegion","_isTouchWithinResponderRegion","_handleLongPress","_cancelHoverInDelayTimeout","_cancelHoverOutDelayTimeout","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","pageY","pageX","_this__config","onHoverIn","onHoverOut","onBlur","onFocus","normalizeDelay","DEFAULT_LONG_PRESS_DELAY_MS","delayLongPress","onPressMove","touch","cancelable","_event_nativeEvent","onPress","convertPointerEventToMouseEvent","_HoverState","_PressabilityPerformanceEventEmitter","_Transitions_prevState","nextState","prevState","onLongPress","onLongPress1","_SoundManager","_getTouchFromPressEvent","onPressIn","onPressOut","minPressDuration","_Rect","responderRegion","hitSlop","regionBottom","regionLeft","regionRight","regionTop","pressRectOffset","touches","changedTouches","PressabilityDebugView","setEnabled","PressabilityPerformanceEventEmitter","emitEvent","constructEvent","pressabilityRef","pressability","usePressability","isPublicInstance","maybeInstance","isLegacyFabricInstance","_ReactNativePrivateInterface","register","createSquare","normalizeRect","ReactNativeStyleAttributes","splitLayoutProps","NativePressableVirtualText","NativePressableText","userSelectToSelectableMap","verticalAlignToTextAlignVerticalMap","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","suppressHighlighting","isHighlighted","setHighlighted","_usePressability","eventHandlers","eventHandlersForText","accessible","allowFontScaling","ellipsizeMode","disabled","numberOfLines","selectable","selectionColor","_disabled","processedStyle","overrides","_TextNativeComponent","textProps","textPressabilityProps","_useTextPressability","lazyState","eventEmitter","newAppearance","toColorScheme","getState","NativeAppearance","colorScheme","addChangeListener","getColorScheme","setColorScheme","isAsyncDebugging","TextInputState","_console","subscribe","_Appearance","useColorScheme","appearanceSubscription","refs","cleanups","cleanup","useMergeRefs","cleanupRef","effect","useRefEffect","_ref","compositeKey","areCompositeKeysEqual","setState","createCompositeKeyForProps","createCompositeKeyForObject","createCompositeKeyForArray","flatStyle","array","next","areCompositeKeyComponentsEqual","prevComponent","prev","useAnimatedPropsMemo","_ScrollViewNativeComponent","_AndroidHorizontalScrollViewNativeComponent","HScrollViewNativeComponent","_ScrollContentViewNativeComponent","_AndroidHorizontalScrollContentViewNativeComponent","HScrollContentViewNativeComponent","VScrollViewNativeComponent","VScrollContentViewNativeComponent","composeStyles"],"mappings":"A,I,M,M,M,G,I,M,K,I,Q,I,E,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,K,O,I,K,E,E,K,I,K,MAEgBA,MAAAA,MAAAA,GACZ,KADAC,I,QAgDU,Q,EA5Cd,MACI,IAGIA,GAAAA,MAAAA,KAAJ,GAAwBA,IAAAA,KAAxB,KAGA,IAFI,IAHA,EAOR,MACQC,KAAqBC,KAAzB,IAGoBD,OAAJE,IACPC,KADT,GACSA,IAAiB,IAAe,IAAhCA,SAAL,KACI,EAF8BD,GAAlBF,KAApB,MAKA,IAPI,EAUR,QAAA,IAAA,MACI,IAAoCI,GAAAA,IAAVD,IAEX,IAAXE,MAEAC,IALR,KAoBI,EAdA,OACkB,IACQC,KAALC,IAAjB,GAC2B,IAAZ,IADyBA,GAAlBD,GAAtB,IAGID,GAAAA,IAAJ,GAAkBG,IAAlB,IAAuCN,IAAiBE,IAAjBF,MAAvC,GAGaO,IAAc,KAAA,MAA3BC,MACAL,IACAG,IACAJ,IACA,EANWM,IAAP,EApCR,GACW,OAAA,IAAA,GAA6BC,IAApC,E,Q,K,I,K,I,K,I,K,I,K,I,K,I,K,M,M,K,I,Q,O,ECuE+B,K,KAGT,K,KAGI,K,KAPP,K,IAUc,K,KAGI,K,KAGT,K,KAGI,K,Q,Q,S,G,M,K,E,I,I,I,O,U,W,W,K,W,K,KAzFpC,UAFEC,IAgBF,KAAA,KAAA,EAAA,MACCA,UADD,MAFEC,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","sourcesContent":["'use strict';\n\nvar safeIsNaN = Number.isNaN ||\n    function ponyfill(value) {\n        return typeof value === 'number' && value !== value;\n    };\nfunction isEqual(first, second) {\n    if (first === second) {\n        return true;\n    }\n    if (safeIsNaN(first) && safeIsNaN(second)) {\n        return true;\n    }\n    return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n    if (newInputs.length !== lastInputs.length) {\n        return false;\n    }\n    for (var i = 0; i < newInputs.length; i++) {\n        if (!isEqual(newInputs[i], lastInputs[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction memoizeOne(resultFn, isEqual) {\n    if (isEqual === void 0) { isEqual = areInputsEqual; }\n    var lastThis;\n    var lastArgs = [];\n    var lastResult;\n    var calledOnce = false;\n    function memoized() {\n        var newArgs = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            newArgs[_i] = arguments[_i];\n        }\n        if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n            return lastResult;\n        }\n        lastResult = resultFn.apply(this, newArgs);\n        calledOnce = true;\n        lastThis = this;\n        lastArgs = newArgs;\n        return lastResult;\n    }\n    return memoized;\n}\n\nmodule.exports = memoizeOne;\n","                                                                    \nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nconst SUPPORTED_COLOR_STYLES   \n                \n  = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true\n};\nconst SUPPORTED_STYLES   \n                \n  = {\n  ...SUPPORTED_COLOR_STYLES,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n};\nconst SUPPORTED_TRANSFORMS   \n                \n  = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true,\n  skewX: true,\n  skewY: true,\n  ...(ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform() ? {\n    matrix: true\n  } : {})\n};\nconst SUPPORTED_INTERPOLATION_PARAMS   \n                \n  = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\nexport default ({\n  style: SUPPORTED_STYLES\n}                        );\nexport function allowInterpolationParam(param        )       {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\nexport function allowStyleProp(prop        )       {\n  SUPPORTED_STYLES[prop] = true;\n}\nexport function allowTransformProp(prop        )       {\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\nexport function isSupportedColorStyleProp(prop        )          {\n  return SUPPORTED_COLOR_STYLES.hasOwnProperty(prop);\n}\nexport function isSupportedInterpolationParam(param        )          {\n  return SUPPORTED_INTERPOLATION_PARAMS.hasOwnProperty(param);\n}\nexport function isSupportedStyleProp(prop        )          {\n  return SUPPORTED_STYLES.hasOwnProperty(prop);\n}\nexport function isSupportedTransformProp(prop        )          {\n  return SUPPORTED_TRANSFORMS.hasOwnProperty(prop);\n}","export * from '../../src/private/specs/modules/NativeAnimatedModule';\nimport NativeAnimatedModule from '../../src/private/specs/modules/NativeAnimatedModule';\nexport default NativeAnimatedModule;","export * from '../../src/private/specs/modules/NativeAnimatedTurboModule';\nimport NativeAnimatedTurboModule from '../../src/private/specs/modules/NativeAnimatedTurboModule';\nexport default NativeAnimatedTurboModule;","export * from '../../../src/private/specs/modules/NativeKeyboardObserver';\nimport NativeKeyboardObserver from '../../../src/private/specs/modules/NativeKeyboardObserver';\nexport default NativeKeyboardObserver;","export * from '../../../src/private/specs/components/AndroidSwipeRefreshLayoutNativeComponent';\nimport AndroidSwipeRefreshLayoutNativeComponent from '../../../src/private/specs/components/AndroidSwipeRefreshLayoutNativeComponent';\nexport default AndroidSwipeRefreshLayoutNativeComponent;","export * from '../../../src/private/specs/components/PullToRefreshViewNativeComponent';\nimport PullToRefreshViewNativeComponent from '../../../src/private/specs/components/PullToRefreshViewNativeComponent';\nexport default PullToRefreshViewNativeComponent;","                                                                                              \n                                                                                      \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'AndroidHorizontalScrollView',\n  bubblingEventTypes: {},\n  directEventTypes: {},\n  validAttributes: {\n    decelerationRate: true,\n    disableIntervalMomentum: true,\n    maintainVisibleContentPosition: true,\n    endFillColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    fadingEdgeLength: true,\n    nestedScrollEnabled: true,\n    overScrollMode: true,\n    pagingEnabled: true,\n    persistentScrollbar: true,\n    horizontal: true,\n    scrollEnabled: true,\n    scrollEventThrottle: true,\n    scrollPerfTag: true,\n    sendMomentumEvents: true,\n    showsHorizontalScrollIndicator: true,\n    snapToAlignment: true,\n    snapToEnd: true,\n    snapToInterval: true,\n    snapToStart: true,\n    snapToOffsets: true,\n    contentOffset: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    borderRadius: true,\n    borderStyle: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderTopLeftRadius: true,\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    removeClippedSubviews: true,\n    borderTopRightRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    pointerEvents: true\n  }\n};\nconst AndroidHorizontalScrollViewNativeComponent                       = NativeComponentRegistry.get       ('AndroidHorizontalScrollView', () => __INTERNAL_VIEW_CONFIG);\nexport default AndroidHorizontalScrollViewNativeComponent;","                                                                                              \n                                                                \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'RCTScrollContentView',\n  bubblingEventTypes: {},\n  directEventTypes: {},\n  validAttributes: {}\n};\nconst ScrollContentViewNativeComponent                       = NativeComponentRegistry.get       ('RCTScrollContentView', () => __INTERNAL_VIEW_CONFIG);\nexport default ScrollContentViewNativeComponent;","                                                                                              \n                                                                                      \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport { ConditionallyIgnoredEventHandlers } from '../../NativeComponent/ViewConfigIgnore';\nimport Platform from '../../Utilities/Platform';\nexport const __INTERNAL_VIEW_CONFIG                    = Platform.OS === 'android' ? {\n  uiViewClassName: 'RCTScrollView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topMomentumScrollBegin: {\n      registrationName: 'onMomentumScrollBegin'\n    },\n    topMomentumScrollEnd: {\n      registrationName: 'onMomentumScrollEnd'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topScrollBeginDrag: {\n      registrationName: 'onScrollBeginDrag'\n    },\n    topScrollEndDrag: {\n      registrationName: 'onScrollEndDrag'\n    }\n  },\n  validAttributes: {\n    contentOffset: {\n      diff: require('../../Utilities/differ/pointsDiffer')\n    },\n    decelerationRate: true,\n    disableIntervalMomentum: true,\n    maintainVisibleContentPosition: true,\n    pagingEnabled: true,\n    scrollEnabled: true,\n    showsVerticalScrollIndicator: true,\n    snapToAlignment: true,\n    snapToEnd: true,\n    snapToInterval: true,\n    snapToOffsets: true,\n    snapToStart: true,\n    borderBottomLeftRadius: true,\n    borderBottomRightRadius: true,\n    sendMomentumEvents: true,\n    borderRadius: true,\n    nestedScrollEnabled: true,\n    scrollEventThrottle: true,\n    borderStyle: true,\n    borderRightColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    borderBottomColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    persistentScrollbar: true,\n    horizontal: true,\n    endFillColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    fadingEdgeLength: true,\n    overScrollMode: true,\n    borderTopLeftRadius: true,\n    scrollPerfTag: true,\n    borderTopColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    removeClippedSubviews: true,\n    borderTopRightRadius: true,\n    borderLeftColor: {\n      process: require('../../StyleSheet/processColor').default\n    },\n    pointerEvents: true,\n    isInvertedVirtualizedList: true\n  }\n} : {\n  uiViewClassName: 'RCTScrollView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topMomentumScrollBegin: {\n      registrationName: 'onMomentumScrollBegin'\n    },\n    topMomentumScrollEnd: {\n      registrationName: 'onMomentumScrollEnd'\n    },\n    topScroll: {\n      registrationName: 'onScroll'\n    },\n    topScrollBeginDrag: {\n      registrationName: 'onScrollBeginDrag'\n    },\n    topScrollEndDrag: {\n      registrationName: 'onScrollEndDrag'\n    },\n    topScrollToTop: {\n      registrationName: 'onScrollToTop'\n    }\n  },\n  validAttributes: {\n    alwaysBounceHorizontal: true,\n    alwaysBounceVertical: true,\n    automaticallyAdjustContentInsets: true,\n    automaticallyAdjustKeyboardInsets: true,\n    automaticallyAdjustsScrollIndicatorInsets: true,\n    bounces: true,\n    bouncesZoom: true,\n    canCancelContentTouches: true,\n    centerContent: true,\n    contentInset: {\n      diff: require('../../Utilities/differ/insetsDiffer')\n    },\n    contentOffset: {\n      diff: require('../../Utilities/differ/pointsDiffer')\n    },\n    contentInsetAdjustmentBehavior: true,\n    decelerationRate: true,\n    endDraggingSensitivityMultiplier: true,\n    directionalLockEnabled: true,\n    disableIntervalMomentum: true,\n    indicatorStyle: true,\n    inverted: true,\n    keyboardDismissMode: true,\n    maintainVisibleContentPosition: true,\n    maximumZoomScale: true,\n    minimumZoomScale: true,\n    pagingEnabled: true,\n    pinchGestureEnabled: true,\n    scrollEnabled: true,\n    scrollEventThrottle: true,\n    scrollIndicatorInsets: {\n      diff: require('../../Utilities/differ/insetsDiffer')\n    },\n    scrollToOverflowEnabled: true,\n    scrollsToTop: true,\n    showsHorizontalScrollIndicator: true,\n    showsVerticalScrollIndicator: true,\n    snapToAlignment: true,\n    snapToEnd: true,\n    snapToInterval: true,\n    snapToOffsets: true,\n    snapToStart: true,\n    verticalScrollIndicatorInsets: {\n      diff: require('../../Utilities/differ/insetsDiffer')\n    },\n    zoomScale: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onScrollBeginDrag: true,\n      onMomentumScrollEnd: true,\n      onScrollEndDrag: true,\n      onMomentumScrollBegin: true,\n      onScrollToTop: true,\n      onScroll: true\n    })\n  }\n};\nconst ScrollViewNativeComponent                       = NativeComponentRegistry.get       ('RCTScrollView', () => __INTERNAL_VIEW_CONFIG);\nexport default ScrollViewNativeComponent;","export * from '../../../src/private/specs/modules/NativeSoundManager';\nimport NativeSoundManager from '../../../src/private/specs/modules/NativeSoundManager';\nexport default NativeSoundManager;","                                                                                         \nimport * as NativeComponentRegistry from '../../NativeComponent/NativeComponentRegistry';\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport {                         } from './ViewPropTypes';\nconst ViewNativeComponent                       = NativeComponentRegistry.get       ('RCTView', () => ({\n  uiViewClassName: 'RCTView'\n}));\n                          \n                                                                        \n                                                                 \n \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['hotspotUpdate', 'setPressed']\n});\nexport default ViewNativeComponent;\n                                                           ","'use strict';\n\n                                                                                       \nimport Platform from '../Utilities/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'invariant';\n                        \n                                       \n                                       \n \n                                  \nexport default class NativeEventEmitter                                                                   {\n  _nativeModule               ;\n  constructor(nativeModule               ) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n    }\n    const hasAddListener = !!nativeModule && typeof nativeModule.addListener === 'function';\n    const hasRemoveListeners = !!nativeModule && typeof nativeModule.removeListeners === 'function';\n    if (nativeModule && hasAddListener && hasRemoveListeners) {\n      this._nativeModule = nativeModule;\n    } else if (nativeModule != null) {\n      if (!hasAddListener) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `addListener` method.');\n      }\n      if (!hasRemoveListeners) {\n        console.warn('`new NativeEventEmitter()` was called with a non-null argument without the required `removeListeners` method.');\n      }\n    }\n  }\n  addListener                                (eventType        , listener                                                           , context        )                    {\n    this._nativeModule?.addListener(eventType);\n    let subscription                     = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          this._nativeModule?.removeListeners(1);\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  emit                                (eventType        , ...args                                       )       {\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n  removeAllListeners                                (eventType          )       {\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    this._nativeModule?.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n  listenerCount                                (eventType        )         {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n}","                                                                  \n                                                                                                         \n                                                                                                      \n                                                                 \n                                               \n                                                 \nimport * as NativeComponentRegistry from '../NativeComponent/NativeComponentRegistry';\nimport { ConditionallyIgnoredEventHandlers } from '../NativeComponent/ViewConfigIgnore';\nimport codegenNativeCommands from '../Utilities/codegenNativeCommands';\nimport Platform from '../Utilities/Platform';\n                        \n                \n               \n                                                     \n                         \n                                   \n                                                           \n                  \n       \n      \n              \n                    \n    \n                                         \n                                \n   \n                          \n                                                                                               \n \nexport const Commands                 = codegenNativeCommands                ({\n  supportedCommands: ['setIsVisible_EXPERIMENTAL']\n});\nexport const __INTERNAL_VIEW_CONFIG                    = Platform.OS === 'android' ? {\n  uiViewClassName: 'RCTImageView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topLoadStart: {\n      registrationName: 'onLoadStart'\n    },\n    topProgress: {\n      registrationName: 'onProgress'\n    },\n    topError: {\n      registrationName: 'onError'\n    },\n    topLoad: {\n      registrationName: 'onLoad'\n    },\n    topLoadEnd: {\n      registrationName: 'onLoadEnd'\n    }\n  },\n  validAttributes: {\n    blurRadius: true,\n    defaultSource: true,\n    internal_analyticTag: true,\n    resizeMethod: true,\n    resizeMode: true,\n    resizeMultiplier: true,\n    tintColor: {\n      process: require('../StyleSheet/processColor').default\n    },\n    borderBottomLeftRadius: true,\n    borderTopLeftRadius: true,\n    src: true,\n    source: true,\n    borderRadius: true,\n    headers: true,\n    shouldNotifyLoadEvents: true,\n    overlayColor: {\n      process: require('../StyleSheet/processColor').default\n    },\n    borderColor: {\n      process: require('../StyleSheet/processColor').default\n    },\n    accessible: true,\n    progressiveRenderingEnabled: true,\n    fadeDuration: true,\n    borderBottomRightRadius: true,\n    borderTopRightRadius: true,\n    loadingIndicatorSrc: true\n  }\n} : {\n  uiViewClassName: 'RCTImageView',\n  bubblingEventTypes: {},\n  directEventTypes: {\n    topLoadStart: {\n      registrationName: 'onLoadStart'\n    },\n    topProgress: {\n      registrationName: 'onProgress'\n    },\n    topError: {\n      registrationName: 'onError'\n    },\n    topPartialLoad: {\n      registrationName: 'onPartialLoad'\n    },\n    topLoad: {\n      registrationName: 'onLoad'\n    },\n    topLoadEnd: {\n      registrationName: 'onLoadEnd'\n    }\n  },\n  validAttributes: {\n    blurRadius: true,\n    capInsets: {\n      diff: require('../Utilities/differ/insetsDiffer')\n    },\n    defaultSource: {\n      process: require('./resolveAssetSource')\n    },\n    internal_analyticTag: true,\n    resizeMode: true,\n    source: true,\n    tintColor: {\n      process: require('../StyleSheet/processColor').default\n    },\n    ...ConditionallyIgnoredEventHandlers({\n      onLoadStart: true,\n      onLoad: true,\n      onLoadEnd: true,\n      onProgress: true,\n      onError: true,\n      onPartialLoad: true\n    })\n  }\n};\nconst ImageViewNativeComponent                       = NativeComponentRegistry.get       ('RCTImageView', () => __INTERNAL_VIEW_CONFIG);\nexport default ImageViewNativeComponent;","export * from '../../src/private/specs/modules/NativeImageLoaderAndroid';\nimport NativeImageLoaderAndroid from '../../src/private/specs/modules/NativeImageLoaderAndroid';\nexport default NativeImageLoaderAndroid;","'use strict';\n\n                                                                  \n                                                                                           \n                                                           \n                                                         \nimport * as NativeComponentRegistry from '../NativeComponent/NativeComponentRegistry';\n                              \n               \n                                \n                                    \n                  \n       \n      \n                          \n              \n                    \n    \n   \nexport const __INTERNAL_VIEW_CONFIG                    = {\n  uiViewClassName: 'RCTTextInlineImage',\n  bubblingEventTypes: {},\n  directEventTypes: {},\n  validAttributes: {\n    resizeMode: true,\n    src: true,\n    tintColor: {\n      process: require('../StyleSheet/processColor').default\n    },\n    headers: true\n  }\n};\nconst TextInlineImage                             = NativeComponentRegistry.get             ('RCTTextInlineImage', () => __INTERNAL_VIEW_CONFIG);\nexport default TextInlineImage;","export * from '../../src/private/specs/modules/NativeFrameRateLogger';\nimport NativeFrameRateLogger from '../../src/private/specs/modules/NativeFrameRateLogger';\nexport default NativeFrameRateLogger;","'use strict';\n\n                                                                        \nconst createReactNativeComponentClass = require('../Renderer/shims/createReactNativeComponentClass').default;\nconst getNativeComponentAttributes = require('./getNativeComponentAttributes');\nconst requireNativeComponent =           (uiViewClassName        )                   => ((createReactNativeComponentClass(uiViewClassName, () => getNativeComponentAttributes(uiViewClassName))     )                  );\nexport default requireNativeComponent;","                                                                        \n                                                                      \n                                                          \n                                             \nimport { createViewConfig } from '../NativeComponent/ViewConfig';\nimport UIManager from '../ReactNative/UIManager';\nimport createReactNativeComponentClass from '../Renderer/shims/createReactNativeComponentClass';\n                                         \n               \n                           \n                                        \n                                          \n                         \n   \nconst textViewConfig = {\n  validAttributes: {\n    isHighlighted: true,\n    isPressable: true,\n    numberOfLines: true,\n    ellipsizeMode: true,\n    allowFontScaling: true,\n    dynamicTypeRamp: true,\n    maxFontSizeMultiplier: true,\n    disabled: true,\n    selectable: true,\n    selectionColor: true,\n    adjustsFontSizeToFit: true,\n    minimumFontScale: true,\n    textBreakStrategy: true,\n    onTextLayout: true,\n    onInlineViewLayout: true,\n    dataDetectorType: true,\n    android_hyphenationFrequency: true,\n    lineBreakStrategyIOS: true\n  },\n  directEventTypes: {\n    topTextLayout: {\n      registrationName: 'onTextLayout'\n    },\n    topInlineViewLayout: {\n      registrationName: 'onInlineViewLayout'\n    }\n  },\n  uiViewClassName: 'RCTText'\n};\nconst virtualTextViewConfig = {\n  validAttributes: {\n    isHighlighted: true,\n    isPressable: true,\n    maxFontSizeMultiplier: true\n  },\n  uiViewClassName: 'RCTVirtualText'\n};\nexport const NativeText                                 = (createReactNativeComponentClass('RCTText', () => createViewConfig(textViewConfig))     );\nexport const NativeVirtualText                                 = !global.RN$Bridgeless && !UIManager.hasViewManagerConfig('RCTVirtualText') ? NativeText : (createReactNativeComponentClass('RCTVirtualText', () => createViewConfig(virtualTextViewConfig))     );","                                                                      \nimport NativeAppearance from '../../src/private/specs/modules/NativeAppearance';\nexport default NativeAppearance;","                                                                                     \nimport requireNativeComponent from '../../Libraries/ReactNative/requireNativeComponent';\nimport UIManager from '../ReactNative/UIManager';\n                           \n                          \n                              \n                                        \n                                                        \n    \n                                                      \nfunction codegenNativeComponent              (componentName        , options          )                             {\n  if (global.RN$Bridgeless === true && __DEV__) {\n    console.warn(`Codegen didn't run for ${componentName}. This will be an error in the future. Make sure you are using @react-native/babel-preset when building your JavaScript code.`);\n  }\n  let componentNameInUse = options && options.paperComponentName != null ? options.paperComponentName : componentName;\n  if (options != null && options.paperComponentNameDeprecated != null) {\n    if (UIManager.hasViewManagerConfig(componentName)) {\n      componentNameInUse = componentName;\n    } else if (options.paperComponentNameDeprecated != null && UIManager.hasViewManagerConfig(options.paperComponentNameDeprecated)) {\n      componentNameInUse = options.paperComponentNameDeprecated;\n    } else {\n      throw new Error(`Failed to find native component for either ${componentName} or ${options.paperComponentNameDeprecated ?? '(unknown)'}`);\n    }\n  }\n  return (requireNativeComponent       (componentNameInUse)                      );\n}\nexport default codegenNativeComponent;","                                                                             \n                                                                                                     \n                                                                                                         \n                                                                                        \nimport NativeAnimatedNonTurboModule from '../../../Libraries/Animated/NativeAnimatedModule';\nimport NativeAnimatedTurboModule from '../../../Libraries/Animated/NativeAnimatedTurboModule';\nimport NativeEventEmitter from '../../../Libraries/EventEmitter/NativeEventEmitter';\nimport RCTDeviceEventEmitter from '../../../Libraries/EventEmitter/RCTDeviceEventEmitter';\nimport Platform from '../../../Libraries/Utilities/Platform';\nimport * as ReactNativeFeatureFlags from '../featureflags/ReactNativeFeatureFlags';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nconst NativeAnimatedModule                                   = NativeAnimatedNonTurboModule ?? NativeAnimatedTurboModule;\nlet __nativeAnimatedNodeTagCount = 1;\nlet __nativeAnimationIdCount = 1;\nlet nativeEventEmitter;\nlet waitingForQueuedOperations = new Set        ();\nlet queueOperations = false;\nlet queue                    = [];\nlet singleOpQueue               = [];\nconst isSingleOpBatching = Platform.OS === 'android' && NativeAnimatedModule?.queueAndExecuteBatchedOperations != null && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nlet flushQueueImmediate = null;\nconst eventListenerGetValueCallbacks   \n                                   \n  = {};\nconst eventListenerAnimationFinishedCallbacks   \n                       \n  = {};\nlet globalEventEmitterGetValueListener                     = null;\nlet globalEventEmitterAnimationFinishedListener                     = null;\nfunction createNativeOperations()                                             {\n  const methodNames = ['createAnimatedNode', 'updateAnimatedNodeConfig', 'getValue', 'startListeningToAnimatedNodeValue', 'stopListeningToAnimatedNodeValue', 'connectAnimatedNodes', 'disconnectAnimatedNodes', 'startAnimatingNode', 'stopAnimation', 'setAnimatedNodeValue', 'setAnimatedNodeOffset', 'flattenAnimatedNodeOffset', 'extractAnimatedNodeOffset', 'connectAnimatedNodeToView', 'disconnectAnimatedNodeFromView', 'restoreDefaultValues', 'dropAnimatedNode', 'addAnimatedEventToView', 'removeAnimatedEventFromView', 'addListener', 'removeListener'];\n  const nativeOperations   \n                                                                     \n    = {};\n  if (isSingleOpBatching) {\n    for (let ii = 0, length = methodNames.length; ii < length; ii++) {\n      const methodName = methodNames[ii];\n      const operationID = ii + 1;\n      nativeOperations[methodName] = (...args) => {\n        singleOpQueue.push(operationID, ...args);\n      };\n    }\n  } else {\n    for (let ii = 0, length = methodNames.length; ii < length; ii++) {\n      const methodName = methodNames[ii];\n      nativeOperations[methodName] = (...args) => {\n        const method = nullthrows(NativeAnimatedModule)[methodName];\n        if (queueOperations || queue.length !== 0) {\n          queue.push(() => method(...args));\n        } else {\n          method(...args);\n        }\n      };\n    }\n  }\n  return nativeOperations;\n}\nconst NativeOperations = createNativeOperations();\nconst API = {\n  getValue: (isSingleOpBatching ? (tag, saveValueCallback) => {\n    if (saveValueCallback) {\n      eventListenerGetValueCallbacks[tag] = saveValueCallback;\n    }\n    NativeOperations.getValue(tag);\n  } : (tag, saveValueCallback) => {\n    NativeOperations.getValue(tag, saveValueCallback);\n  }     ),\n  setWaitingForIdentifier(id        )       {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueImmediate) {\n      if (ReactNativeFeatureFlags.enableAnimatedClearImmediateFix()) {\n        clearImmediate(flushQueueImmediate);\n      } else {\n        clearTimeout(flushQueueImmediate);\n      }\n    }\n  },\n  unsetWaitingForIdentifier(id        )       {\n    waitingForQueuedOperations.delete(id);\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue()       {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      const prevImmediate = flushQueueImmediate;\n      clearImmediate(prevImmediate);\n      flushQueueImmediate = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: (isSingleOpBatching ? ()       => {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    flushQueueImmediate = null;\n    if (singleOpQueue.length === 0) {\n      return;\n    }\n    ensureGlobalEventEmitterListeners();\n    NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);\n    singleOpQueue.length = 0;\n  } : ()       => {\n    invariant(NativeAnimatedModule, 'Native animated module is not available');\n    flushQueueImmediate = null;\n    if (queue.length === 0) {\n      return;\n    }\n    if (Platform.OS === 'android') {\n      NativeAnimatedModule?.startOperationBatch?.();\n    }\n    for (let q = 0, l = queue.length; q < l; q++) {\n      queue[q]();\n    }\n    queue.length = 0;\n    if (Platform.OS === 'android') {\n      NativeAnimatedModule?.finishOperationBatch?.();\n    }\n  }            ),\n  createAnimatedNode(tag        , config                    )       {\n    NativeOperations.createAnimatedNode(tag, config);\n  },\n  updateAnimatedNodeConfig(tag        , config                    )       {\n    NativeOperations.updateAnimatedNodeConfig?.(tag, config);\n  },\n  startListeningToAnimatedNodeValue(tag        )       {\n    NativeOperations.startListeningToAnimatedNodeValue(tag);\n  },\n  stopListeningToAnimatedNodeValue(tag        )       {\n    NativeOperations.stopListeningToAnimatedNodeValue(tag);\n  },\n  connectAnimatedNodes(parentTag        , childTag        )       {\n    NativeOperations.connectAnimatedNodes(parentTag, childTag);\n  },\n  disconnectAnimatedNodes(parentTag        , childTag        )       {\n    NativeOperations.disconnectAnimatedNodes(parentTag, childTag);\n  },\n  startAnimatingNode: (isSingleOpBatching ? (animationId, nodeTag, config, endCallback) => {\n    if (endCallback) {\n      eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n    }\n    NativeOperations.startAnimatingNode(animationId, nodeTag, config);\n  } : (animationId, nodeTag, config, endCallback) => {\n    NativeOperations.startAnimatingNode(animationId, nodeTag, config, endCallback);\n  }     ),\n  stopAnimation(animationId        ) {\n    NativeOperations.stopAnimation(animationId);\n  },\n  setAnimatedNodeValue(nodeTag        , value        )       {\n    NativeOperations.setAnimatedNodeValue(nodeTag, value);\n  },\n  setAnimatedNodeOffset(nodeTag        , offset        )       {\n    NativeOperations.setAnimatedNodeOffset(nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset(nodeTag        )       {\n    NativeOperations.flattenAnimatedNodeOffset(nodeTag);\n  },\n  extractAnimatedNodeOffset(nodeTag        )       {\n    NativeOperations.extractAnimatedNodeOffset(nodeTag);\n  },\n  connectAnimatedNodeToView(nodeTag        , viewTag        )       {\n    NativeOperations.connectAnimatedNodeToView(nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView(nodeTag        , viewTag        )       {\n    NativeOperations.disconnectAnimatedNodeFromView(nodeTag, viewTag);\n  },\n  restoreDefaultValues(nodeTag        )       {\n    NativeOperations.restoreDefaultValues?.(nodeTag);\n  },\n  dropAnimatedNode(tag        )       {\n    NativeOperations.dropAnimatedNode(tag);\n  },\n  addAnimatedEventToView(viewTag        , eventName        , eventMapping              ) {\n    NativeOperations.addAnimatedEventToView(viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView(viewTag        , eventName        , animatedNodeTag        ) {\n    NativeOperations.removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag);\n  }\n};\nfunction ensureGlobalEventEmitterListeners() {\n  if (globalEventEmitterGetValueListener && globalEventEmitterAnimationFinishedListener) {\n    return;\n  }\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleGetValue', params => {\n    const {\n      tag\n    } = params;\n    const callback = eventListenerGetValueCallbacks[tag];\n    if (!callback) {\n      return;\n    }\n    callback(params.value);\n    delete eventListenerGetValueCallbacks[tag];\n  });\n  globalEventEmitterAnimationFinishedListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleAnimationFinished', params => {\n    const animations = Array.isArray(params) ? params : [params];\n    for (const animation of animations) {\n      const {\n        animationId\n      } = animation;\n      const callback = eventListenerAnimationFinishedCallbacks[animationId];\n      if (callback) {\n        callback(animation);\n        delete eventListenerAnimationFinishedCallbacks[animationId];\n      }\n    }\n  });\n}\nfunction generateNewNodeTag()         {\n  return __nativeAnimatedNodeTagCount++;\n}\nfunction generateNewAnimationId()         {\n  return __nativeAnimationIdCount++;\n}\nfunction assertNativeAnimatedModule()       {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\nlet _warnedMissingNativeAnimated = false;\nfunction shouldUseNativeDriver(config             \n                     \n     \n                )          {\n  if (config.useNativeDriver == null) {\n    console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n  }\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n  return config.useNativeDriver || false;\n}\nfunction transformDataType(value                 )                  {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  if (value.endsWith('deg')) {\n    const degrees = parseFloat(value) || 0;\n    return degrees * Math.PI / 180.0;\n  } else if (value.endsWith('rad')) {\n    return parseFloat(value) || 0;\n  } else {\n    return value;\n  }\n}\nexport default {\n  API,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  transformDataType,\n  get nativeEventEmitter()                     {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeAnimatedModule);\n    }\n    return nativeEventEmitter;\n  }\n};","                                                                                                       \nimport { isSupportedInterpolationParam, isSupportedStyleProp, isSupportedTransformProp } from '../../../Libraries/Animated/NativeAnimatedAllowlist';\nexport function validateInterpolation                          (config                                  )       {\n  for (const key in config) {\n    if (key !== 'debugID' && !isSupportedInterpolationParam(key)) {\n      console.error(`Interpolation property '${key}' is not supported by native animated module`);\n    }\n  }\n}\nexport function validateStyles(styles   \n                         \n     \n )       {\n  for (const key in styles) {\n    if (!isSupportedStyleProp(key)) {\n      console.error(`Style property '${key}' is not supported by native animated module`);\n    }\n  }\n}\nexport function validateTransform(configs         \n                   \n                   \n                   \n     \n     \n                 \n                   \n                         \n     \n  )       {\n  configs.forEach(config => {\n    if (!isSupportedTransformProp(config.property)) {\n      console.error(`Property '${config.property}' is not supported by native animated module`);\n    }\n  });\n}","                                                                                     \n                                                                                           \nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\n                               \n               \n                                   \n    \n                                             \nconst NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nlet nativeComponentName = 'AndroidHorizontalScrollContentView';\nexport const __INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: 'AndroidHorizontalScrollContentView',\n  validAttributes: {\n    removeClippedSubviews: true\n  }\n};\nexport default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);","                                                                                     \n                                                                                           \n                                                                              \n                                                                                                       \nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n                               \n               \n                                       \n                                       \n                                        \n                                                     \n                                             \n                                        \n                      \n    \n                                             \n                          \n                                                                                       \n \nconst NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nconst {\n  ConditionallyIgnoredEventHandlers\n} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');\nconst {\n  dispatchCommand\n} = require(\"react-native/Libraries/ReactNative/RendererProxy\");\nlet nativeComponentName = 'AndroidSwipeRefreshLayout';\nexport const __INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: 'AndroidSwipeRefreshLayout',\n  directEventTypes: {\n    topRefresh: {\n      registrationName: 'onRefresh'\n    }\n  },\n  validAttributes: {\n    enabled: true,\n    colors: {\n      process: require('react-native/Libraries/StyleSheet/processColorArray')\n    },\n    progressBackgroundColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    size: true,\n    progressViewOffset: true,\n    refreshing: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onRefresh: true\n    })\n  }\n};\nexport default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);\nexport const Commands = {\n  setNativeRefreshing(ref, value) {\n    dispatchCommand(ref, \"setNativeRefreshing\", [value]);\n  }\n};","                                                                                     \n                                                                                           \n                                                                              \n                                                                                                       \nimport codegenNativeCommands from '../../../../Libraries/Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../../../Libraries/Utilities/codegenNativeComponent';\nimport * as React from 'react';\n                               \n               \n                          \n                           \n                                    \n                                             \n                                        \n                      \n    \n                                                \n                          \n                                                                                               \n \nconst NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nconst {\n  ConditionallyIgnoredEventHandlers\n} = require('react-native/Libraries/NativeComponent/ViewConfigIgnore');\nconst {\n  dispatchCommand\n} = require(\"react-native/Libraries/ReactNative/RendererProxy\");\nlet nativeComponentName = 'RCTRefreshControl';\nexport const __INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: 'RCTRefreshControl',\n  directEventTypes: {\n    topRefresh: {\n      registrationName: 'onRefresh'\n    }\n  },\n  validAttributes: {\n    tintColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    titleColor: {\n      process: require('react-native/Libraries/StyleSheet/processColor').default\n    },\n    title: true,\n    progressViewOffset: true,\n    refreshing: true,\n    ...ConditionallyIgnoredEventHandlers({\n      onRefresh: true\n    })\n  }\n};\nexport default NativeComponentRegistry.get(nativeComponentName, () => __INTERNAL_VIEW_CONFIG);\nexport const Commands = {\n  setNativeRefreshing(ref, refreshing) {\n    dispatchCommand(ref, \"setNativeRefreshing\", [refreshing]);\n  }\n};","                                                                               \nimport shouldUseTurboAnimatedModule from '../../../../Libraries/Animated/shouldUseTurboAnimatedModule';\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                  \n                    \n                 \n     \n  \n                                               \n                                                 \n                             \n                                 \n                            \n   \n                                        \n                                         \n                                           \n                                   \n                                    \n                                                                         \n                                                                                \n                                                                         \n                                                            \n                                                           \n                                                                       \n                                                                          \n                                                                                                                             \n                                                \n                                                                  \n                                                                    \n                                                        \n                                                        \n                                                                         \n                                                                              \n                                                   \n                                           \n                                                                                                    \n                                                                                                      \n                                            \n                                            \n                                                                              \n \nconst NativeModule        = !shouldUseTurboAnimatedModule() ? TurboModuleRegistry.get      ('NativeAnimatedModule') : null;\nexport default NativeModule;","                                                                               \nimport shouldUseTurboAnimatedModule from '../../../../Libraries/Animated/shouldUseTurboAnimatedModule';\nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                  \n                    \n                 \n     \n  \n                                               \n                                                 \n                             \n                                 \n                            \n   \n                                        \n                                         \n                                           \n                                   \n                                    \n                                                                         \n                                                                                \n                                                                         \n                                                            \n                                                           \n                                                                       \n                                                                          \n                                                                                                                             \n                                                \n                                                                  \n                                                                    \n                                                        \n                                                        \n                                                                         \n                                                                              \n                                                   \n                                           \n                                                                                                    \n                                                                                                      \n                                            \n                                            \n                                                                              \n \nconst NativeModule        = shouldUseTurboAnimatedModule() ? TurboModuleRegistry.get      ('NativeAnimatedTurboModule') : null;\nexport default NativeModule;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                                               \n                                     \n                                \n  \n                                           \n                                          \n                                                          \n                                            \n                                            \n \nexport default (TurboModuleRegistry.get      ('Appearance')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                 \n                     \n              \n                                         \n                           \n                         \n \nexport default (TurboModuleRegistry.get      ('FrameRateLogger')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                         \n                \n                 \n     \n  \n                                           \n                                             \n                            \n                                                \n                                                                            \n                                                                       \n                                                        \n \nexport default (TurboModuleRegistry.getEnforcing      ('ImageLoader')      );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                                            \n                                            \n \nexport default (TurboModuleRegistry.get      ('KeyboardObserver')       );","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                           \n                             \n \nexport default (TurboModuleRegistry.get      ('SoundManager')       );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                                          \n\n                                                                    \n                                                              \n                                                                        \n                                                                          \n                                                            \n                                                            \n\nimport Platform from '../Utilities/Platform';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport AnimatedMock from './AnimatedMock';\n\nconst Animated                                = Platform.isDisableAnimations\n  ? AnimatedMock\n  : AnimatedImplementation;\n\nexport default {\n  get FlatList()                   {\n    return require('./components/AnimatedFlatList').default;\n  },\n  get Image()                {\n    return require('./components/AnimatedImage').default;\n  },\n  get ScrollView()                     {\n    return require('./components/AnimatedScrollView').default;\n  },\n  get SectionList()                      {\n    return require('./components/AnimatedSectionList').default;\n  },\n  get Text()               {\n    return require('./components/AnimatedText').default;\n  },\n  get View()               {\n    return require('./components/AnimatedView').default;\n  },\n  ...Animated,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                             \n\nimport NativeAnimatedHelper from '../../src/private/animated/NativeAnimatedHelper';\nimport {findNodeHandle} from '../ReactNative/RendererProxy';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\nimport invariant from 'invariant';\n\n                     \n                                 \n                 \n                    \n                           \n                       \n                           \n                                  \n  \n\nexport function attachNativeEvent(\n  viewRef     ,\n  eventName        ,\n  argMapping                          ,\n  platformConfig                 ,\n)                       {\n  // Find animated values in `argMapping` and create an array representing their\n  // key path inside the `nativeEvent` object. Ex.: ['contentOffset', 'x'].\n  const eventMappings = [];\n\n  const traverse = (value       , path               ) => {\n    if (value instanceof AnimatedValue) {\n      value.__makeNative(platformConfig);\n\n      eventMappings.push({\n        nativeEventPath: path,\n        animatedValueTag: value.__getNativeTag(),\n      });\n    } else if (value instanceof AnimatedValueXY) {\n      traverse(value.x, path.concat('x'));\n      traverse(value.y, path.concat('y'));\n    } else if (typeof value === 'object') {\n      for (const key in value) {\n        traverse(value[key], path.concat(key));\n      }\n    }\n  };\n\n  invariant(\n    argMapping[0] && argMapping[0].nativeEvent,\n    'Native driven events only support animated values contained inside `nativeEvent`.',\n  );\n\n  // Assume that the event containing `nativeEvent` is always the first argument.\n  traverse(argMapping[0].nativeEvent, []);\n\n  const viewTag = findNodeHandle(viewRef);\n  if (viewTag != null) {\n    eventMappings.forEach(mapping => {\n      NativeAnimatedHelper.API.addAnimatedEventToView(\n        viewTag,\n        eventName,\n        mapping,\n      );\n    });\n  }\n\n  return {\n    detach() {\n      if (viewTag != null) {\n        eventMappings.forEach(mapping => {\n          NativeAnimatedHelper.API.removeAnimatedEventFromView(\n            viewTag,\n            eventName,\n            // $FlowFixMe[incompatible-call]\n            mapping.animatedValueTag,\n          );\n        });\n      }\n    },\n  };\n}\n\nfunction validateMapping(argMapping                          , args     ) {\n  const validate = (recMapping          , recEvt     , key        ) => {\n    if (recMapping instanceof AnimatedValue) {\n      invariant(\n        typeof recEvt === 'number',\n        'Bad mapping of event key ' +\n          key +\n          ', should be number but got ' +\n          typeof recEvt,\n      );\n      return;\n    }\n    if (recMapping instanceof AnimatedValueXY) {\n      invariant(\n        typeof recEvt.x === 'number' && typeof recEvt.y === 'number',\n        'Bad mapping of event key ' + key + ', should be XY but got ' + recEvt,\n      );\n      return;\n    }\n    if (typeof recEvt === 'number') {\n      invariant(\n        recMapping instanceof AnimatedValue,\n        'Bad mapping of type ' +\n          typeof recMapping +\n          ' for key ' +\n          key +\n          ', event value must map to AnimatedValue',\n      );\n      return;\n    }\n    invariant(\n      typeof recMapping === 'object',\n      'Bad mapping of type ' + typeof recMapping + ' for key ' + key,\n    );\n    invariant(\n      typeof recEvt === 'object',\n      'Bad event of type ' + typeof recEvt + ' for key ' + key,\n    );\n    for (const mappingKey in recMapping) {\n      validate(recMapping[mappingKey], recEvt[mappingKey], mappingKey);\n    }\n  };\n\n  invariant(\n    args.length >= argMapping.length,\n    'Event has less arguments than mapping',\n  );\n  argMapping.forEach((mapping, idx) => {\n    validate(mapping, args[idx], 'arg' + idx);\n  });\n}\n\nexport class AnimatedEvent {\n  _argMapping                          ;\n  _listeners                  = [];\n  _attachedEvent                            ;\n  __isNative         ;\n  __platformConfig                 ;\n\n  constructor(argMapping                          , config             ) {\n    this._argMapping = argMapping;\n\n    if (config == null) {\n      console.warn('Animated.event now requires a second argument for options');\n      config = {useNativeDriver: false};\n    }\n\n    if (config.listener) {\n      this.__addListener(config.listener);\n    }\n    this._attachedEvent = null;\n    this.__isNative = NativeAnimatedHelper.shouldUseNativeDriver(config);\n    this.__platformConfig = config.platformConfig;\n  }\n\n  __addListener(callback          )       {\n    this._listeners.push(callback);\n  }\n\n  __removeListener(callback          )       {\n    this._listeners = this._listeners.filter(listener => listener !== callback);\n  }\n\n  __attach(viewRef     , eventName        )       {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be attached.',\n    );\n\n    this._attachedEvent = attachNativeEvent(\n      viewRef,\n      eventName,\n      this._argMapping,\n      this.__platformConfig,\n    );\n  }\n\n  __detach(viewTag     , eventName        )       {\n    invariant(\n      this.__isNative,\n      'Only native driven events need to be detached.',\n    );\n\n    this._attachedEvent && this._attachedEvent.detach();\n  }\n\n  __getHandler()                                 {\n    if (this.__isNative) {\n      if (__DEV__) {\n        let validatedMapping = false;\n        return (...args     ) => {\n          if (!validatedMapping) {\n            validateMapping(this._argMapping, args);\n            validatedMapping = true;\n          }\n          this._callListeners(...args);\n        };\n      } else {\n        return this._callListeners;\n      }\n    }\n\n    let validatedMapping = false;\n    return (...args     ) => {\n      if (__DEV__ && !validatedMapping) {\n        validateMapping(this._argMapping, args);\n        validatedMapping = true;\n      }\n\n      const traverse = (\n        recMapping                            ,\n        recEvt     ,\n      ) => {\n        if (recMapping instanceof AnimatedValue) {\n          if (typeof recEvt === 'number') {\n            recMapping.setValue(recEvt);\n          }\n        } else if (recMapping instanceof AnimatedValueXY) {\n          if (typeof recEvt === 'object') {\n            traverse(recMapping.x, recEvt.x);\n            traverse(recMapping.y, recEvt.y);\n          }\n        } else if (typeof recMapping === 'object') {\n          for (const mappingKey in recMapping) {\n            /* $FlowFixMe[prop-missing] (>=0.120.0) This comment suppresses an\n             * error found when Flow v0.120 was deployed. To see the error,\n             * delete this comment and run Flow. */\n            traverse(recMapping[mappingKey], recEvt[mappingKey]);\n          }\n        }\n      };\n      this._argMapping.forEach((mapping, idx) => {\n        traverse(mapping, args[idx]);\n      });\n\n      this._callListeners(...args);\n    };\n  }\n\n  _callListeners = (...args     ) => {\n    this._listeners.forEach(listener => listener(...args));\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                          \n             \n                  \n              \n            \n                                \n                                                                      \n                                                                        \n                                                                        \n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport DecayAnimation from './animations/DecayAnimation';\nimport SpringAnimation from './animations/SpringAnimation';\nimport TimingAnimation from './animations/TimingAnimation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedAddition from './nodes/AnimatedAddition';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedDiffClamp from './nodes/AnimatedDiffClamp';\nimport AnimatedDivision from './nodes/AnimatedDivision';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedModulo from './nodes/AnimatedModulo';\nimport AnimatedMultiplication from './nodes/AnimatedMultiplication';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedSubtraction from './nodes/AnimatedSubtraction';\nimport AnimatedTracking from './nodes/AnimatedTracking';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n                                  \n                                                                \n                   \n                    \n                                                  \n                                      \n     \n  \n\nconst add = function (\n  a                       ,\n  b                       ,\n)                   {\n  return new AnimatedAddition(a, b);\n};\n\nconst subtract = function (\n  a                       ,\n  b                       ,\n)                      {\n  return new AnimatedSubtraction(a, b);\n};\n\nconst divide = function (\n  a                       ,\n  b                       ,\n)                   {\n  return new AnimatedDivision(a, b);\n};\n\nconst multiply = function (\n  a                       ,\n  b                       ,\n)                         {\n  return new AnimatedMultiplication(a, b);\n};\n\nconst modulo = function (a              , modulus        )                 {\n  return new AnimatedModulo(a, modulus);\n};\n\nconst diffClamp = function (\n  a              ,\n  min        ,\n  max        ,\n)                    {\n  return new AnimatedDiffClamp(a, min, max);\n};\n\nconst _combineCallbacks = function (\n  callback              ,\n  config                                      ,\n) {\n  if (callback && config.onComplete) {\n    return (...args                  ) => {\n      config.onComplete && config.onComplete(...args);\n      callback && callback(...args);\n    };\n  } else {\n    return callback || config.onComplete;\n  }\n};\n\nconst maybeVectorAnim = function (\n  value                                                 ,\n  config        ,\n  anim                                                              ,\n)                      {\n  if (value instanceof AnimatedValueXY) {\n    const configX = {...config};\n    const configY = {...config};\n    for (const key in config) {\n      const {x, y} = config[key];\n      if (x !== undefined && y !== undefined) {\n        configX[key] = x;\n        configY[key] = y;\n      }\n    }\n    const aX = anim((value                 ).x, configX);\n    const aY = anim((value                 ).y, configY);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aX, aY], {stopTogether: false});\n  } else if (value instanceof AnimatedColor) {\n    const configR = {...config};\n    const configG = {...config};\n    const configB = {...config};\n    const configA = {...config};\n    for (const key in config) {\n      const {r, g, b, a} = config[key];\n      if (\n        r !== undefined &&\n        g !== undefined &&\n        b !== undefined &&\n        a !== undefined\n      ) {\n        configR[key] = r;\n        configG[key] = g;\n        configB[key] = b;\n        configA[key] = a;\n      }\n    }\n    const aR = anim((value               ).r, configR);\n    const aG = anim((value               ).g, configG);\n    const aB = anim((value               ).b, configB);\n    const aA = anim((value               ).a, configA);\n    // We use `stopTogether: false` here because otherwise tracking will break\n    // because the second animation will get stopped before it can update.\n    return parallel([aR, aG, aB, aA], {stopTogether: false});\n  }\n  return null;\n};\n\nconst spring = function (\n  value                                                 ,\n  config                       ,\n)                     {\n  const start = function (\n    animatedValue                                                 ,\n    configuration                       ,\n    callback               ,\n  )       {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue      = animatedValue;\n    const singleConfig      = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          SpringAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new SpringAnimation(singleConfig), callback);\n    }\n  };\n  return (\n    maybeVectorAnim(value, config, spring) || {\n      start: function (callback               )       {\n        start(value, config, callback);\n      },\n\n      stop: function ()       {\n        value.stopAnimation();\n      },\n\n      reset: function ()       {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations         )       {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function ()          {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst timing = function (\n  value                                                 ,\n  config                       ,\n)                     {\n  const start = function (\n    animatedValue                                                 ,\n    configuration                       ,\n    callback               ,\n  )       {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue      = animatedValue;\n    const singleConfig      = configuration;\n    singleValue.stopTracking();\n    if (configuration.toValue instanceof AnimatedNode) {\n      singleValue.track(\n        new AnimatedTracking(\n          singleValue,\n          configuration.toValue,\n          TimingAnimation,\n          singleConfig,\n          callback,\n        ),\n      );\n    } else {\n      singleValue.animate(new TimingAnimation(singleConfig), callback);\n    }\n  };\n\n  return (\n    maybeVectorAnim(value, config, timing) || {\n      start: function (callback               , isLooping          )       {\n        start(value, {...config, isLooping}, callback);\n      },\n\n      stop: function ()       {\n        value.stopAnimation();\n      },\n\n      reset: function ()       {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations         )       {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function ()          {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst decay = function (\n  value                                                 ,\n  config                      ,\n)                     {\n  const start = function (\n    animatedValue                                                 ,\n    configuration                      ,\n    callback               ,\n  )       {\n    callback = _combineCallbacks(callback, configuration);\n    const singleValue      = animatedValue;\n    const singleConfig      = configuration;\n    singleValue.stopTracking();\n    singleValue.animate(new DecayAnimation(singleConfig), callback);\n  };\n\n  return (\n    maybeVectorAnim(value, config, decay) || {\n      start: function (callback               )       {\n        start(value, config, callback);\n      },\n\n      stop: function ()       {\n        value.stopAnimation();\n      },\n\n      reset: function ()       {\n        value.resetAnimation();\n      },\n\n      _startNativeLoop: function (iterations         )       {\n        const singleConfig = {...config, iterations};\n        start(value, singleConfig);\n      },\n\n      _isUsingNativeDriver: function ()          {\n        return config.useNativeDriver || false;\n      },\n    }\n  );\n};\n\nconst sequence = function (\n  animations                           ,\n)                     {\n  let current = 0;\n  return {\n    start: function (callback               , isLooping          ) {\n      const onComplete = function (result           ) {\n        if (!result.finished) {\n          callback && callback(result);\n          return;\n        }\n\n        current++;\n\n        if (current === animations.length) {\n          // if the start is called, even without a reset, it should start from the beginning\n          current = 0;\n          callback && callback(result);\n          return;\n        }\n\n        animations[current].start(onComplete, isLooping);\n      };\n\n      if (animations.length === 0) {\n        callback && callback({finished: true});\n      } else {\n        animations[current].start(onComplete, isLooping);\n      }\n    },\n\n    stop: function () {\n      if (current < animations.length) {\n        animations[current].stop();\n      }\n    },\n\n    reset: function () {\n      animations.forEach((animation, idx) => {\n        if (idx <= current) {\n          animation.reset();\n        }\n      });\n      current = 0;\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.sequence animations',\n      );\n    },\n\n    _isUsingNativeDriver: function ()          {\n      return false;\n    },\n  };\n};\n\n                       \n                                                \n                         \n     \n  \nconst parallel = function (\n  animations                           ,\n  config                  ,\n)                     {\n  let doneCount = 0;\n  // Make sure we only call stop() at most once for each animation\n  const hasEnded                      = {};\n  const stopTogether = !(config && config.stopTogether === false);\n\n  const result = {\n    start: function (callback               , isLooping          ) {\n      if (doneCount === animations.length) {\n        callback && callback({finished: true});\n        return;\n      }\n\n      animations.forEach((animation, idx) => {\n        const cb = function (endResult           ) {\n          hasEnded[idx] = true;\n          doneCount++;\n          if (doneCount === animations.length) {\n            doneCount = 0;\n            callback && callback(endResult);\n            return;\n          }\n\n          if (!endResult.finished && stopTogether) {\n            result.stop();\n          }\n        };\n\n        if (!animation) {\n          cb({finished: true});\n        } else {\n          animation.start(cb, isLooping);\n        }\n      });\n    },\n\n    stop: function ()       {\n      animations.forEach((animation, idx) => {\n        !hasEnded[idx] && animation.stop();\n        hasEnded[idx] = true;\n      });\n    },\n\n    reset: function ()       {\n      animations.forEach((animation, idx) => {\n        animation.reset();\n        hasEnded[idx] = false;\n        doneCount = 0;\n      });\n    },\n\n    _startNativeLoop: function ()        {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.parallel animations',\n      );\n    },\n\n    _isUsingNativeDriver: function ()          {\n      return false;\n    },\n  };\n\n  return result;\n};\n\nconst delay = function (time        )                     {\n  // Would be nice to make a specialized implementation\n  return timing(new AnimatedValue(0), {\n    toValue: 0,\n    delay: time,\n    duration: 0,\n    useNativeDriver: false,\n  });\n};\n\nconst stagger = function (\n  time        ,\n  animations                           ,\n)                     {\n  return parallel(\n    animations.map((animation, i) => {\n      return sequence([delay(time * i), animation]);\n    }),\n  );\n};\n\n                            \n                     \n                                 \n     \n  \n\nconst loop = function (\n  animation                    ,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1, resetBeforeIteration = true}                      = {},\n)                     {\n  let isFinished = false;\n  let iterationsSoFar = 0;\n  return {\n    start: function (callback               ) {\n      const restart = function (result            = {finished: true})       {\n        if (\n          isFinished ||\n          iterationsSoFar === iterations ||\n          result.finished === false\n        ) {\n          callback && callback(result);\n        } else {\n          iterationsSoFar++;\n          resetBeforeIteration && animation.reset();\n          animation.start(restart, iterations === -1);\n        }\n      };\n      if (!animation || iterations === 0) {\n        callback && callback({finished: true});\n      } else {\n        if (animation._isUsingNativeDriver()) {\n          animation._startNativeLoop(iterations);\n        } else {\n          restart(); // Start looping recursively on the js thread\n        }\n      }\n    },\n\n    stop: function ()       {\n      isFinished = true;\n      animation.stop();\n    },\n\n    reset: function ()       {\n      iterationsSoFar = 0;\n      isFinished = false;\n      animation.reset();\n    },\n\n    _startNativeLoop: function () {\n      throw new Error(\n        'Loops run using the native driver cannot contain Animated.loop animations',\n      );\n    },\n\n    _isUsingNativeDriver: function ()          {\n      return animation._isUsingNativeDriver();\n    },\n  };\n};\n\nfunction forkEvent(\n  event                            ,\n  listener          ,\n)                           {\n  if (!event) {\n    return listener;\n  } else if (event instanceof AnimatedEvent) {\n    event.__addListener(listener);\n    return event;\n  } else {\n    return (...args) => {\n      typeof event === 'function' && event(...args);\n      listener(...args);\n    };\n  }\n}\n\nfunction unforkEvent(\n  event                            ,\n  listener          ,\n)       {\n  if (event && event instanceof AnimatedEvent) {\n    event.__removeListener(listener);\n  }\n}\n\nconst event = function (\n  argMapping                          ,\n  config             ,\n)      {\n  const animatedEvent = new AnimatedEvent(argMapping, config);\n  if (animatedEvent.__isNative) {\n    return animatedEvent;\n  } else {\n    return animatedEvent.__getHandler();\n  }\n};\n\n// All types of animated nodes that represent scalar numbers and can be interpolated (etc)\n                      \n                    \n                     \n                    \n                                 \n                  \n                          \n                       \n                  \n\n                                         \n\n/**\n * The `Animated` library is designed to make animations fluid, powerful, and\n * easy to build and maintain. `Animated` focuses on declarative relationships\n * between inputs and outputs, with configurable transforms in between, and\n * simple `start`/`stop` methods to control time-based animation execution.\n * If additional transforms are added, be sure to include them in\n * AnimatedMock.js as well.\n *\n * See https://reactnative.dev/docs/animated\n */\nexport default {\n  /**\n   * Standard value class for driving animations.  Typically initialized with\n   * `new Animated.Value(0);`\n   *\n   * See https://reactnative.dev/docs/animated#value\n   */\n  Value: AnimatedValue,\n  /**\n   * 2D value class for driving 2D animations, such as pan gestures.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy\n   */\n  ValueXY: AnimatedValueXY,\n  /**\n   * Value class for driving color animations.\n   */\n  Color: AnimatedColor,\n  /**\n   * Exported to use the Interpolation type in flow.\n   *\n   * See https://reactnative.dev/docs/animated#interpolation\n   */\n  Interpolation: AnimatedInterpolation,\n  /**\n   * Exported for ease of type checking. All animated values derive from this\n   * class.\n   *\n   * See https://reactnative.dev/docs/animated#node\n   */\n  Node: AnimatedNode,\n\n  /**\n   * Animates a value from an initial velocity to zero based on a decay\n   * coefficient.\n   *\n   * See https://reactnative.dev/docs/animated#decay\n   */\n  decay,\n  /**\n   * Animates a value along a timed easing curve. The Easing module has tons of\n   * predefined curves, or you can use your own function.\n   *\n   * See https://reactnative.dev/docs/animated#timing\n   */\n  timing,\n  /**\n   * Animates a value according to an analytical spring model based on\n   * damped harmonic oscillation.\n   *\n   * See https://reactnative.dev/docs/animated#spring\n   */\n  spring,\n\n  /**\n   * Creates a new Animated value composed from two Animated values added\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#add\n   */\n  add,\n\n  /**\n   * Creates a new Animated value composed by subtracting the second Animated\n   * value from the first Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#subtract\n   */\n  subtract,\n\n  /**\n   * Creates a new Animated value composed by dividing the first Animated value\n   * by the second Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#divide\n   */\n  divide,\n\n  /**\n   * Creates a new Animated value composed from two Animated values multiplied\n   * together.\n   *\n   * See https://reactnative.dev/docs/animated#multiply\n   */\n  multiply,\n\n  /**\n   * Creates a new Animated value that is the (non-negative) modulo of the\n   * provided Animated value.\n   *\n   * See https://reactnative.dev/docs/animated#modulo\n   */\n  modulo,\n\n  /**\n   * Create a new Animated value that is limited between 2 values. It uses the\n   * difference between the last value so even if the value is far from the\n   * bounds it will start changing when the value starts getting closer again.\n   *\n   * See https://reactnative.dev/docs/animated#diffclamp\n   */\n  diffClamp,\n\n  /**\n   * Starts an animation after the given delay.\n   *\n   * See https://reactnative.dev/docs/animated#delay\n   */\n  delay,\n  /**\n   * Starts an array of animations in order, waiting for each to complete\n   * before starting the next. If the current running animation is stopped, no\n   * following animations will be started.\n   *\n   * See https://reactnative.dev/docs/animated#sequence\n   */\n  sequence,\n  /**\n   * Starts an array of animations all at the same time. By default, if one\n   * of the animations is stopped, they will all be stopped. You can override\n   * this with the `stopTogether` flag.\n   *\n   * See https://reactnative.dev/docs/animated#parallel\n   */\n  parallel,\n  /**\n   * Array of animations may run in parallel (overlap), but are started in\n   * sequence with successive delays.  Nice for doing trailing effects.\n   *\n   * See https://reactnative.dev/docs/animated#stagger\n   */\n  stagger,\n  /**\n   * Loops a given animation continuously, so that each time it reaches the\n   * end, it resets and begins again from the start.\n   *\n   * See https://reactnative.dev/docs/animated#loop\n   */\n  loop,\n\n  /**\n   * Takes an array of mappings and extracts values from each arg accordingly,\n   * then calls `setValue` on the mapped outputs.\n   *\n   * See https://reactnative.dev/docs/animated#event\n   */\n  event,\n\n  /**\n   * Make any React component Animatable.  Used to create `Animated.View`, etc.\n   *\n   * See https://reactnative.dev/docs/animated#createanimatedcomponent\n   */\n  createAnimatedComponent,\n\n  /**\n   * Imperative API to attach an animated value to an event on a view. Prefer\n   * using `Animated.event` with `useNativeDrive: true` if possible.\n   *\n   * See https://reactnative.dev/docs/animated#attachnativeevent\n   */\n  attachNativeEvent,\n\n  /**\n   * Advanced imperative API for snooping on animated events that are passed in\n   * through props. Use values directly where possible.\n   *\n   * See https://reactnative.dev/docs/animated#forkevent\n   */\n  forkEvent,\n  unforkEvent,\n\n  /**\n   * Expose Event class, so it can be used as a type for type checkers.\n   */\n  Event: AnimatedEvent,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                                         \n                                                      \n                                                        \n                                                                      \n                                                                        \n                                                                        \n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start                                   ,\n)                                    {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args                  ) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\n                                  \n                                           \n                   \n                    \n                                                  \n                                      \n     \n  \n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations                           ,\n)                     => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback               )       => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value                                                 ,\n  config                       ,\n)                     {\n  const anyValue      = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback               )       => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value                                                 ,\n  config                       ,\n)                     {\n  const anyValue      = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback               )       => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value                                                 ,\n  config                      ,\n)                     {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations                           ,\n)                     {\n  return mockCompositeAnimation(animations);\n};\n\n                                                    \nconst parallel = function (\n  animations                           ,\n  config                  ,\n)                     {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time        )                     {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time        ,\n  animations                           ,\n)                     {\n  return mockCompositeAnimation(animations);\n};\n\n                            \n                     \n                                 \n     \n  \n\nconst loop = function (\n  animation                    ,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}                      = {},\n)                     {\n  return emptyAnimation;\n};\n\n                                         \n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nlet ease;\n\n/**\n * The `Easing` module implements common easing functions. This module is used\n * by [Animate.timing()](docs/animate.html#timing) to convey physically\n * believable motion in animations.\n *\n * You can find a visualization of some common easing functions at\n * http://easings.net/\n *\n * ### Predefined animations\n *\n * The `Easing` module provides several predefined animations through the\n * following methods:\n *\n * - [`back`](docs/easing.html#back) provides a simple animation where the\n *   object goes slightly back before moving forward\n * - [`bounce`](docs/easing.html#bounce) provides a bouncing animation\n * - [`ease`](docs/easing.html#ease) provides a simple inertial animation\n * - [`elastic`](docs/easing.html#elastic) provides a simple spring interaction\n *\n * ### Standard functions\n *\n * Three standard easing functions are provided:\n *\n * - [`linear`](docs/easing.html#linear)\n * - [`quad`](docs/easing.html#quad)\n * - [`cubic`](docs/easing.html#cubic)\n *\n * The [`poly`](docs/easing.html#poly) function can be used to implement\n * quartic, quintic, and other higher power functions.\n *\n * ### Additional functions\n *\n * Additional mathematical functions are provided by the following methods:\n *\n * - [`bezier`](docs/easing.html#bezier) provides a cubic bezier curve\n * - [`circle`](docs/easing.html#circle) provides a circular function\n * - [`sin`](docs/easing.html#sin) provides a sinusoidal function\n * - [`exp`](docs/easing.html#exp) provides an exponential function\n *\n * The following helpers are used to modify other easing functions.\n *\n * - [`in`](docs/easing.html#in) runs an easing function forwards\n * - [`inOut`](docs/easing.html#inout) makes any easing function symmetrical\n * - [`out`](docs/easing.html#out) runs an easing function backwards\n */\nconst Easing = {\n  /**\n   * A stepping function, returns 1 for any positive value of `n`.\n   */\n  step0(n        )         {\n    return n > 0 ? 1 : 0;\n  },\n\n  /**\n   * A stepping function, returns 1 if `n` is greater than or equal to 1.\n   */\n  step1(n        )         {\n    return n >= 1 ? 1 : 0;\n  },\n\n  /**\n   * A linear function, `f(t) = t`. Position correlates to elapsed time one to\n   * one.\n   *\n   * http://cubic-bezier.com/#0,0,1,1\n   */\n  linear(t        )         {\n    return t;\n  },\n\n  /**\n   * A simple inertial interaction, similar to an object slowly accelerating to\n   * speed.\n   *\n   * http://cubic-bezier.com/#.42,0,1,1\n   */\n  ease(t        )         {\n    if (!ease) {\n      ease = Easing.bezier(0.42, 0, 1, 1);\n    }\n    return ease(t);\n  },\n\n  /**\n   * A quadratic function, `f(t) = t * t`. Position equals the square of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInQuad\n   */\n  quad(t        )         {\n    return t * t;\n  },\n\n  /**\n   * A cubic function, `f(t) = t * t * t`. Position equals the cube of elapsed\n   * time.\n   *\n   * http://easings.net/#easeInCubic\n   */\n  cubic(t        )         {\n    return t * t * t;\n  },\n\n  /**\n   * A power function. Position is equal to the Nth power of elapsed time.\n   *\n   * n = 4: http://easings.net/#easeInQuart\n   * n = 5: http://easings.net/#easeInQuint\n   */\n  poly(n        )                        {\n    return (t        ) => Math.pow(t, n);\n  },\n\n  /**\n   * A sinusoidal function.\n   *\n   * http://easings.net/#easeInSine\n   */\n  sin(t        )         {\n    return 1 - Math.cos((t * Math.PI) / 2);\n  },\n\n  /**\n   * A circular function.\n   *\n   * http://easings.net/#easeInCirc\n   */\n  circle(t        )         {\n    return 1 - Math.sqrt(1 - t * t);\n  },\n\n  /**\n   * An exponential function.\n   *\n   * http://easings.net/#easeInExpo\n   */\n  exp(t        )         {\n    return Math.pow(2, 10 * (t - 1));\n  },\n\n  /**\n   * A simple elastic interaction, similar to a spring oscillating back and\n   * forth.\n   *\n   * Default bounciness is 1, which overshoots a little bit once. 0 bounciness\n   * doesn't overshoot at all, and bounciness of N > 1 will overshoot about N\n   * times.\n   *\n   * http://easings.net/#easeInElastic\n   */\n  elastic(bounciness         = 1)                        {\n    const p = bounciness * Math.PI;\n    return t => 1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\n  },\n\n  /**\n   * Use with `Animated.parallel()` to create a simple effect where the object\n   * animates back slightly as the animation starts.\n   *\n   * https://easings.net/#easeInBack\n   */\n  back(s         = 1.70158)                        {\n    return t => t * t * ((s + 1) * t - s);\n  },\n\n  /**\n   * Provides a simple bouncing effect.\n   *\n   * http://easings.net/#easeInBounce\n   */\n  bounce(t        )         {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n\n    if (t < 2 / 2.75) {\n      const t2 = t - 1.5 / 2.75;\n      return 7.5625 * t2 * t2 + 0.75;\n    }\n\n    if (t < 2.5 / 2.75) {\n      const t2 = t - 2.25 / 2.75;\n      return 7.5625 * t2 * t2 + 0.9375;\n    }\n\n    const t2 = t - 2.625 / 2.75;\n    return 7.5625 * t2 * t2 + 0.984375;\n  },\n\n  /**\n   * Provides a cubic bezier curve, equivalent to CSS Transitions'\n   * `transition-timing-function`.\n   *\n   * A useful tool to visualize cubic bezier curves can be found at\n   * http://cubic-bezier.com/\n   */\n  bezier(\n    x1        ,\n    y1        ,\n    x2        ,\n    y2        ,\n  )                        {\n    const _bezier = require('./bezier').default;\n    return _bezier(x1, y1, x2, y2);\n  },\n\n  /**\n   * Runs an easing function forwards.\n   */\n  in(easing                       )                        {\n    return easing;\n  },\n\n  /**\n   * Runs an easing function backwards.\n   */\n  out(easing                       )                        {\n    return t => 1 - easing(1 - t);\n  },\n\n  /**\n   * Makes any easing function symmetrical. The easing function will run\n   * forwards for half of the duration, then backwards for the rest of the\n   * duration.\n   */\n  inOut(easing                       )                        {\n    return t => {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  },\n};\n\nexport default Easing;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n                         \n                    \n                  \n     \n  \n\nfunction stiffnessFromOrigamiValue(oValue        ) {\n  return (oValue - 30) * 3.62 + 194;\n}\n\nfunction dampingFromOrigamiValue(oValue        ) {\n  return (oValue - 8) * 3 + 25;\n}\n\nexport function fromOrigamiTensionAndFriction(\n  tension        ,\n  friction        ,\n)                   {\n  return {\n    stiffness: stiffnessFromOrigamiValue(tension),\n    damping: dampingFromOrigamiValue(friction),\n  };\n}\n\nexport function fromBouncinessAndSpeed(\n  bounciness        ,\n  speed        ,\n)                   {\n  function normalize(value        , startValue        , endValue        ) {\n    return (value - startValue) / (endValue - startValue);\n  }\n\n  function projectNormal(n        , start        , end        ) {\n    return start + n * (end - start);\n  }\n\n  function linearInterpolation(t        , start        , end        ) {\n    return t * end + (1 - t) * start;\n  }\n\n  function quadraticOutInterpolation(t        , start        , end        ) {\n    return linearInterpolation(2 * t - t * t, start, end);\n  }\n\n  function b3Friction1(x        ) {\n    return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n  }\n\n  function b3Friction2(x        ) {\n    return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n  }\n\n  function b3Friction3(x        ) {\n    return (\n      0.00000045 * Math.pow(x, 3) -\n      0.000332 * Math.pow(x, 2) +\n      0.1078 * x +\n      5.84\n    );\n  }\n\n  function b3Nobounce(tension        ) {\n    if (tension <= 18) {\n      return b3Friction1(tension);\n    } else if (tension > 18 && tension <= 44) {\n      return b3Friction2(tension);\n    } else {\n      return b3Friction3(tension);\n    }\n  }\n\n  let b = normalize(bounciness / 1.7, 0, 20);\n  b = projectNormal(b, 0, 0.8);\n  const s = normalize(speed / 1.7, 0, 20);\n  const bouncyTension = projectNormal(s, 0.5, 200);\n  const bouncyFriction = quadraticOutInterpolation(\n    b,\n    b3Nobounce(bouncyTension),\n    0.01,\n  );\n\n  return {\n    stiffness: stiffnessFromOrigamiValue(bouncyTension),\n    damping: dampingFromOrigamiValue(bouncyFriction),\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                              \n                                                      \n                                                        \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\nimport AnimatedProps from '../nodes/AnimatedProps';\n\n                                                                 \n                                                      \n\n                                         \n                          \n                           \n                                  \n                            \n                      \n                      \n                    \n     \n   \n\nlet startNativeAnimationNextId = 1;\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nexport default class Animation {\n  #nativeID         ;\n  #onEnd              ;\n  #useNativeDriver         ;\n\n  __active         ;\n  __isInteraction         ;\n  __isLooping          ;\n  __iterations        ;\n  __debugID         ;\n\n  constructor(config                 ) {\n    this.#useNativeDriver = NativeAnimatedHelper.shouldUseNativeDriver(config);\n\n    this.__active = false;\n    this.__isInteraction = config.isInteraction ?? !this.#useNativeDriver;\n    this.__isLooping = config.isLooping;\n    this.__iterations = config.iterations ?? 1;\n    if (__DEV__) {\n      this.__debugID = config.debugID;\n    }\n  }\n\n  start(\n    fromValue        ,\n    onUpdate                         ,\n    onEnd              ,\n    previousAnimation            ,\n    animatedValue               ,\n  )       {\n    if (!this.#useNativeDriver && animatedValue.__isNative === true) {\n      throw new Error(\n        'Attempting to run JS driven animation on animated node ' +\n          'that has been moved to \"native\" earlier by starting an ' +\n          'animation with `useNativeDriver: true`',\n      );\n    }\n\n    this.#onEnd = onEnd;\n    this.__active = true;\n  }\n\n  stop()       {\n    if (this.#nativeID != null) {\n      const nativeID = this.#nativeID;\n      const identifier = `${nativeID}:stopAnimation`;\n      try {\n        // This is only required when singleOpBatching is used, as otherwise\n        // we flush calls immediately when there's no pending queue.\n        NativeAnimatedHelper.API.setWaitingForIdentifier(identifier);\n        NativeAnimatedHelper.API.stopAnimation(nativeID);\n      } finally {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(identifier);\n      }\n    }\n    this.__active = false;\n  }\n\n  __getNativeAnimationConfig()             \n                                    \n       \n     {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  }\n\n  __findAnimatedPropsNodes(node              )                       {\n    const result = [];\n\n    if (node instanceof AnimatedProps) {\n      result.push(node);\n      return result;\n    }\n\n    for (const child of node.__getChildren()) {\n      result.push(...this.__findAnimatedPropsNodes(child));\n    }\n\n    return result;\n  }\n\n  __startAnimationIfNative(animatedValue               )          {\n    if (!this.#useNativeDriver) {\n      return false;\n    }\n\n    const startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(\n      startNativeAnimationWaitId,\n    );\n    try {\n      const config = this.__getNativeAnimationConfig();\n      animatedValue.__makeNative(config.platformConfig);\n      this.#nativeID = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(\n        this.#nativeID,\n        animatedValue.__getNativeTag(),\n        config,\n        result => {\n          this.__notifyAnimationEnd(result);\n\n          // When using natively driven animations, once the animation completes,\n          // we need to ensure that the JS side nodes are synced with the updated\n          // values.\n          const {value} = result;\n          if (value != null) {\n            animatedValue.__onAnimatedValueUpdateReceived(value);\n\n            if (\n              ReactNativeFeatureFlags.shouldSkipStateUpdatesForLoopingAnimations() &&\n              this.__isLooping === true\n            ) {\n              return;\n            }\n\n            // Once the JS side node is synced with the updated values, trigger an\n            // update on the AnimatedProps nodes to call any registered callbacks.\n            this.__findAnimatedPropsNodes(animatedValue).forEach(node =>\n              node.update(),\n            );\n          }\n        },\n      );\n\n      return true;\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n        startNativeAnimationWaitId,\n      );\n    }\n  }\n\n  /**\n   * Notify the completion callback that the animation has ended. The completion\n   * callback will never be called more than once.\n   */\n  __notifyAnimationEnd(result           )       {\n    const callback = this.#onEnd;\n    if (callback != null) {\n      this.#onEnd = null;\n      callback(result);\n    }\n  }\n\n  __getDebugID()          {\n    if (__DEV__) {\n      return this.__debugID;\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                              \n                                                        \n                                                              \n\nimport Animation from './Animation';\n\n                                              \n                     \n           \n            \n                 \n                  \n                  \n           \n         \n                        \n     \n   \n\n                                                    \n                     \n                   \n                        \n     \n   \n\nexport default class DecayAnimation extends Animation {\n  _startTime        ;\n  _lastValue        ;\n  _fromValue        ;\n  _deceleration        ;\n  _velocity        ;\n  _onUpdate                         ;\n  _animationFrame                   ;\n  _platformConfig                 ;\n\n  constructor(config                            ) {\n    super(config);\n\n    this._deceleration = config.deceleration ?? 0.998;\n    this._velocity = config.velocity;\n    this._platformConfig = config.platformConfig;\n  }\n\n  __getNativeAnimationConfig()             \n                         \n                       \n                                    \n                  \n                     \n       \n     {\n    return {\n      type: 'decay',\n      deceleration: this._deceleration,\n      velocity: this._velocity,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n\n  start(\n    fromValue        ,\n    onUpdate                         ,\n    onEnd              ,\n    previousAnimation            ,\n    animatedValue               ,\n  )       {\n    super.start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue);\n\n    this._lastValue = fromValue;\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n    this._startTime = Date.now();\n\n    const useNativeDriver = this.__startAnimationIfNative(animatedValue);\n    if (!useNativeDriver) {\n      this._animationFrame = requestAnimationFrame(() => this.onUpdate());\n    }\n  }\n\n  onUpdate()       {\n    const now = Date.now();\n\n    const value =\n      this._fromValue +\n      (this._velocity / (1 - this._deceleration)) *\n        (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));\n\n    this._onUpdate(value);\n\n    if (Math.abs(this._lastValue - value) < 0.1) {\n      this.__notifyAnimationEnd({finished: true});\n      return;\n    }\n\n    this._lastValue = value;\n    if (this.__active) {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop()       {\n    super.stop();\n    if (this._animationFrame != null) {\n      global.cancelAnimationFrame(this._animationFrame);\n    }\n    this.__notifyAnimationEnd({finished: false});\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                              \n                                                                        \n                                                        \n                                                            \n                                                              \n\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport * as SpringConfig from '../SpringConfig';\nimport Animation from './Animation';\nimport invariant from 'invariant';\n\n                                               \n                     \n          \n            \n                   \n       \n                  \n                  \n           \n       \n                     \n       \n                  \n                  \n                  \n                  \n           \n       \n                   \n                                    \n                              \n                                     \n                              \n            \n            \n                 \n                  \n                  \n           \n         \n                      \n                 \n                   \n                    \n                     \n                   \n                \n                 \n     \n   \n\n                                                     \n                     \n                  \n                              \n                                     \n                              \n                    \n                      \n                 \n                   \n                    \n                     \n                   \n                \n                 \n     \n   \n\n                                                      \n                       \n                       \n                   \n   \n\nexport default class SpringAnimation extends Animation {\n  _overshootClamping         ;\n  _restDisplacementThreshold        ;\n  _restSpeedThreshold        ;\n  _lastVelocity        ;\n  _startPosition        ;\n  _lastPosition        ;\n  _fromValue        ;\n  _toValue        ;\n  _stiffness        ;\n  _damping        ;\n  _mass        ;\n  _initialVelocity        ;\n  _delay        ;\n  _timeout            ;\n  _startTime        ;\n  _lastTime        ;\n  _frameTime        ;\n  _onUpdate                         ;\n  _animationFrame                   ;\n  _platformConfig                 ;\n\n  constructor(config                             ) {\n    super(config);\n\n    this._overshootClamping = config.overshootClamping ?? false;\n    this._restDisplacementThreshold = config.restDisplacementThreshold ?? 0.001;\n    this._restSpeedThreshold = config.restSpeedThreshold ?? 0.001;\n    this._initialVelocity = config.velocity ?? 0;\n    this._lastVelocity = config.velocity ?? 0;\n    this._toValue = config.toValue;\n    this._delay = config.delay ?? 0;\n    this._platformConfig = config.platformConfig;\n\n    if (\n      config.stiffness !== undefined ||\n      config.damping !== undefined ||\n      config.mass !== undefined\n    ) {\n      invariant(\n        config.bounciness === undefined &&\n          config.speed === undefined &&\n          config.tension === undefined &&\n          config.friction === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      this._stiffness = config.stiffness ?? 100;\n      this._damping = config.damping ?? 10;\n      this._mass = config.mass ?? 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(\n        config.tension === undefined &&\n          config.friction === undefined &&\n          config.stiffness === undefined &&\n          config.damping === undefined &&\n          config.mass === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\n        config.bounciness ?? 8,\n        config.speed ?? 12,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        config.tension ?? 40,\n        config.friction ?? 7,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    }\n\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n\n  __getNativeAnimationConfig()             \n                    \n                            \n                       \n                 \n                                    \n                               \n                                      \n                               \n                      \n                    \n                   \n       \n     {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: this._initialVelocity ?? this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n\n  start(\n    fromValue        ,\n    onUpdate                         ,\n    onEnd              ,\n    previousAnimation            ,\n    animatedValue               ,\n  )       {\n    super.start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue);\n\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      const internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    const start = () => {\n      const useNativeDriver = this.__startAnimationIfNative(animatedValue);\n      if (!useNativeDriver) {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  getInternalState()                               {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime,\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate()       {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    const MAX_STEPS = 64;\n    let now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    const deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n\n    const c         = this._damping;\n    const m         = this._mass;\n    const k         = this._stiffness;\n    const v0         = -this._initialVelocity;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    let position = 0.0;\n    let velocity = 0.0;\n    const t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      position =\n        this._toValue -\n        envelope *\n          (((v0 + zeta * omega0 * x0) / omega1) * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          ((Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0)) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      position = this._toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    let isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    const isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    let isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement =\n        Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || (isVelocity && isDisplacement)) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n\n      this.__notifyAnimationEnd({finished: true});\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n\n  stop()       {\n    super.stop();\n    clearTimeout(this._timeout);\n    if (this._animationFrame != null) {\n      global.cancelAnimationFrame(this._animationFrame);\n    }\n    this.__notifyAnimationEnd({finished: false});\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                              \n                                                      \n                                                                        \n                                                        \n                                                            \n                                                              \n\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport Animation from './Animation';\n\n                                               \n                     \n          \n            \n                   \n                 \n                  \n                  \n           \n        \n                     \n               \n                   \n                                    \n                                     \n                    \n                 \n     \n   \n\n                                                     \n                     \n                  \n                                     \n                    \n                 \n     \n   \n\nlet _easeInOut;\nfunction easeInOut() {\n  if (!_easeInOut) {\n    const Easing = require('../Easing').default;\n    _easeInOut = Easing.inOut(Easing.ease);\n  }\n  return _easeInOut;\n}\n\nexport default class TimingAnimation extends Animation {\n  _startTime        ;\n  _fromValue        ;\n  _toValue        ;\n  _duration        ;\n  _delay        ;\n  _easing                           ;\n  _onUpdate                         ;\n  _animationFrame                   ;\n  _timeout            ;\n  _platformConfig                 ;\n\n  constructor(config                             ) {\n    super(config);\n\n    this._toValue = config.toValue;\n    this._easing = config.easing ?? easeInOut();\n    this._duration = config.duration ?? 500;\n    this._delay = config.delay ?? 0;\n    this._platformConfig = config.platformConfig;\n  }\n\n  __getNativeAnimationConfig()             \n                   \n                                   \n                    \n                       \n                                    \n       \n     {\n    const frameDuration = 1000.0 / 60.0;\n    const frames = [];\n    const numFrames = Math.round(this._duration / frameDuration);\n    for (let frame = 0; frame < numFrames; frame++) {\n      frames.push(this._easing(frame / numFrames));\n    }\n    frames.push(this._easing(1));\n    return {\n      type: 'frames',\n      frames,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n\n  start(\n    fromValue        ,\n    onUpdate                         ,\n    onEnd              ,\n    previousAnimation            ,\n    animatedValue               ,\n  )       {\n    super.start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue);\n\n    this._fromValue = fromValue;\n    this._onUpdate = onUpdate;\n\n    const start = () => {\n      this._startTime = Date.now();\n\n      const useNativeDriver = this.__startAnimationIfNative(animatedValue);\n      if (!useNativeDriver) {\n        // Animations that sometimes have 0 duration and sometimes do not\n        // still need to use the native driver when duration is 0 so as to\n        // not cause intermixed JS and native animations.\n        if (this._duration === 0) {\n          this._onUpdate(this._toValue);\n          this.__notifyAnimationEnd({finished: true});\n        } else {\n          this._animationFrame = requestAnimationFrame(() => this.onUpdate());\n        }\n      }\n    };\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  onUpdate()       {\n    const now = Date.now();\n    if (now >= this._startTime + this._duration) {\n      if (this._duration === 0) {\n        this._onUpdate(this._toValue);\n      } else {\n        this._onUpdate(\n          this._fromValue + this._easing(1) * (this._toValue - this._fromValue),\n        );\n      }\n      this.__notifyAnimationEnd({finished: true});\n      return;\n    }\n\n    this._onUpdate(\n      this._fromValue +\n        this._easing((now - this._startTime) / this._duration) *\n          (this._toValue - this._fromValue),\n    );\n    if (this.__active) {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n    }\n  }\n\n  stop()       {\n    super.stop();\n    clearTimeout(this._timeout);\n    if (this._animationFrame != null) {\n      global.cancelAnimationFrame(this._animationFrame);\n    }\n    this.__notifyAnimationEnd({finished: false});\n  }\n}\n","/**\n * Portions Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n/**\n * BezierEasing - use bezier curve for transition easing function\n * https://github.com/gre/bezier-easing\n * @copyright 2014-2015 Gaëtan Renaudeau. MIT License.\n */\n\n'use strict';\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nconst NEWTON_ITERATIONS = 4;\nconst NEWTON_MIN_SLOPE = 0.001;\nconst SUBDIVISION_PRECISION = 0.0000001;\nconst SUBDIVISION_MAX_ITERATIONS = 10;\n\nconst kSplineTableSize = 11;\nconst kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\nconst float32ArraySupported = typeof Float32Array === 'function';\n\nfunction A(aA1        , aA2        ) {\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1        , aA2        ) {\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1        ) {\n  return 3.0 * aA1;\n}\n\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT        , aA1        , aA2        ) {\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT        , aA1        , aA2        ) {\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\n\nfunction binarySubdivide(\n  aX        ,\n  _aA        ,\n  _aB        ,\n  mX1        ,\n  mX2        ,\n) {\n  let currentX,\n    currentT,\n    i = 0,\n    aA = _aA,\n    aB = _aB;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\n    ++i < SUBDIVISION_MAX_ITERATIONS\n  );\n  return currentT;\n}\n\nfunction newtonRaphsonIterate(\n  aX        ,\n  _aGuessT        ,\n  mX1        ,\n  mX2        ,\n) {\n  let aGuessT = _aGuessT;\n  for (let i = 0; i < NEWTON_ITERATIONS; ++i) {\n    const currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    const currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\n\nexport default function bezier(\n  mX1        ,\n  mY1        ,\n  mX2        ,\n  mY2        ,\n)                        {\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  // Precompute samples table\n  const sampleValues = float32ArraySupported\n    ? new Float32Array(kSplineTableSize)\n    : new Array        (kSplineTableSize);\n  if (mX1 !== mY1 || mX2 !== mY2) {\n    for (let i = 0; i < kSplineTableSize; ++i) {\n      sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n    }\n  }\n\n  function getTForX(aX        ) {\n    let intervalStart = 0.0;\n    let currentSample = 1;\n    const lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    const dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    const guessForT = intervalStart + dist * kSampleStepSize;\n\n    const initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2,\n      );\n    }\n  }\n\n  return function BezierEasing(x        )         {\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport FlatList from '../../Lists/FlatList';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport * as React from 'react';\n\nexport default (createAnimatedComponent(FlatList)                        \n                                       \n                  \n );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport Image from '../../Image/Image';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport * as React from 'react';\n\nexport default (createAnimatedComponent(\n  (Image            ),\n)                        \n                                    \n                                 \n );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                             \n                                                                      \n\nimport RefreshControl from '../../Components/RefreshControl/RefreshControl';\nimport ScrollView from '../../Components/ScrollView/ScrollView';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport splitLayoutProps from '../../StyleSheet/splitLayoutProps';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport useAnimatedProps from '../useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\n                                                    \n                                                    \n\n/**\n * @see https://github.com/facebook/react-native/commit/b8c8562\n */\nconst AnimatedScrollView                                         =\n  React.forwardRef(\n    function AnimatedScrollViewWithOrWithoutInvertedRefreshControl(\n      props,\n      forwardedRef,\n    ) {\n      // (Android only) When a ScrollView has a RefreshControl and\n      // any `style` property set with an Animated.Value, the CSS\n      // gets incorrectly applied twice. This is because ScrollView\n      // swaps the parent/child relationship of itself and the\n      // RefreshControl component (see ScrollView.js for more details).\n      if (\n        Platform.OS === 'android' &&\n        props.refreshControl != null &&\n        props.style != null\n      ) {\n        return (\n          // $FlowFixMe[prop-missing]\n          <AnimatedScrollViewWithInvertedRefreshControl\n            scrollEventThrottle={0.0001}\n            {...props}\n            ref={forwardedRef}\n            refreshControl={props.refreshControl}\n          />\n        );\n      } else {\n        return (\n          <AnimatedScrollViewWithoutInvertedRefreshControl\n            scrollEventThrottle={0.0001}\n            {...props}\n            ref={forwardedRef}\n          />\n        );\n      }\n    },\n  );\n\nconst AnimatedScrollViewWithInvertedRefreshControl = React.forwardRef(\n  // $FlowFixMe[incompatible-call]\n  function AnimatedScrollViewWithInvertedRefreshControl(\n    props   \n                                                \n                                                                                  \n                                                        \n     ,\n    forwardedRef \n                                       \n                                    ,\n  ) {\n    // Split `props` into the animate-able props for the parent (RefreshControl)\n    // and child (ScrollView).\n    const {intermediatePropsForRefreshControl, intermediatePropsForScrollView} =\n      useMemo(() => {\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        // $FlowFixMe[incompatible-call]\n        const {outer, inner} = splitLayoutProps(flattenStyle(props.style));\n        return {\n          intermediatePropsForRefreshControl: {style: outer},\n          intermediatePropsForScrollView: {...props, style: inner},\n        };\n      }, [props]);\n\n    // Handle animated props on `refreshControl`.\n    const [refreshControlAnimatedProps, refreshControlRef] = useAnimatedProps \n                                       \n                 \n     (intermediatePropsForRefreshControl);\n    // NOTE: Assumes that refreshControl.ref` and `refreshControl.style` can be\n    // safely clobbered.\n    const refreshControl                                                      =\n      React.cloneElement(props.refreshControl, {\n        ...refreshControlAnimatedProps,\n        ref: refreshControlRef,\n      });\n\n    // Handle animated props on `NativeDirectionalScrollView`.\n    const [scrollViewAnimatedProps, scrollViewRef] = useAnimatedProps \n            \n               \n     (intermediatePropsForScrollView);\n    const ref = useMergeRefs          (scrollViewRef, forwardedRef);\n\n    return (\n      // $FlowFixMe[incompatible-use] Investigate useAnimatedProps return value\n      <ScrollView\n        {...scrollViewAnimatedProps}\n        ref={ref}\n        refreshControl={refreshControl}\n        // Because `refreshControl` is a clone of `props.refreshControl` with\n        // `refreshControlAnimatedProps` added, we need to pass ScrollView.js\n        // the combined styles since it also splits the outer/inner styles for\n        // its parent/child, respectively. Without this, the refreshControl\n        // styles would be ignored.\n        style={StyleSheet.compose(\n          scrollViewAnimatedProps.style,\n          refreshControlAnimatedProps.style,\n        )}\n      />\n    );\n  },\n);\n\nconst AnimatedScrollViewWithoutInvertedRefreshControl =\n  createAnimatedComponent(ScrollView);\n\nexport default AnimatedScrollView;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                         \n                                                                      \n\nimport SectionList from '../../Lists/SectionList';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport * as React from 'react';\n\nexport default (createAnimatedComponent(SectionList)                        \n                                          \n                                     \n                                \n );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport Text from '../../Text/Text';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport * as React from 'react';\n\nexport default (createAnimatedComponent(\n  (Text            ),\n)                        \n                                   \n                                \n );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                      \n\nimport View from '../../Components/View/View';\nimport createAnimatedComponent from '../createAnimatedComponent';\nimport * as React from 'react';\n\nexport default (createAnimatedComponent(View)                        \n                                   \n                                \n );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                                  \n\nimport composeStyles from '../../src/private/styles/composeStyles';\nimport View from '../Components/View/View';\nimport useMergeRefs from '../Utilities/useMergeRefs';\nimport useAnimatedProps from './useAnimatedProps';\nimport * as React from 'react';\nimport {useMemo} from 'react';\n\n                                           \n                                            \n                        \n                 \n                                                                    \n                      \n          \n                \n  \n\n// We could use a mapped type here to introduce acceptable Animated variants\n// of properties, instead of doing so in the core StyleSheetTypes\n// Inexact Props are not supported, they'll be made exact here.\n                                                           \n                   \n                                                 \n   \n\n                                                                               \n                                 \n                         \n  \n\n                                        \n               \n                    \n                                                                             \n\nexport default function createAnimatedComponent                          (\n  Component                                                       ,\n)                                           {\n  return unstable_createAnimatedComponentWithAllowlist(Component, null);\n}\n\nexport function unstable_createAnimatedComponentWithAllowlist \n                \n            \n (\n  Component                                                       ,\n  allowlist                         ,\n)                                                 {\n  const AnimatedComponent = React.forwardRef \n                                \n              \n   ((props, forwardedRef) => {\n    const [reducedProps, callbackRef] = useAnimatedProps                   (\n      // $FlowFixMe[incompatible-call]\n      props,\n      allowlist,\n    );\n    const ref = useMergeRefs           (callbackRef, forwardedRef);\n\n    // Some components require explicit passthrough values for animation\n    // to work properly. For example, if an animated component is\n    // transformed and Pressable, onPress will not work after transform\n    // without these passthrough values.\n    // $FlowFixMe[prop-missing]\n    const {passthroughAnimatedPropExplicitValues, style} = reducedProps;\n    const passthroughStyle = passthroughAnimatedPropExplicitValues?.style;\n    const mergedStyle = useMemo(\n      () => composeStyles(style, passthroughStyle),\n      [passthroughStyle, style],\n    );\n\n    // NOTE: It is important that `passthroughAnimatedPropExplicitValues` is\n    // spread after `reducedProps` but before `style`.\n    return (\n      <Component\n        {...reducedProps}\n        {...passthroughAnimatedPropExplicitValues}\n        style={mergedStyle}\n        ref={ref}\n      />\n    );\n  });\n\n  AnimatedComponent.displayName = `Animated(${\n    Component.displayName || 'Anonymous'\n  })`;\n\n  return AnimatedComponent;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                               \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedAddition extends AnimatedWithChildren {\n  _a              ;\n  _b              ;\n\n  constructor(\n    a                       ,\n    b                       ,\n    config                      ,\n  ) {\n    super(config);\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    this._b.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    return this._a.__getValue() + this._b.__getValue();\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach()       {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'addition',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                                       \n                                                            \n                                                                       \n                                                              \n                                                       \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport {processColorObject} from '../../StyleSheet/PlatformColorValueTypes';\nimport AnimatedValue, {flushValue} from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\n                                             \n                        \n                           \n   \n\n                                                          \n\n                         \n             \n             \n             \n             \n     \n  \n\n                          \n                    \n                    \n                    \n                    \n     \n  \n\n                                                                       \n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\nconst defaultColor            = {r: 0, g: 0, b: 0, a: 1.0};\n\n/* eslint no-bitwise: 0 */\nfunction processColor(\n  color                            ,\n)                                  {\n  if (color === undefined || color === null) {\n    return null;\n  }\n\n  if (isRgbaValue(color)) {\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    return (color           );\n  }\n\n  let normalizedColor                       = normalizeColor(\n    // $FlowIgnore[incompatible-cast] - Type is verified above\n    (color            ),\n  );\n  if (normalizedColor === undefined || normalizedColor === null) {\n    return null;\n  }\n\n  if (typeof normalizedColor === 'object') {\n    const processedColorObj                    =\n      processColorObject(normalizedColor);\n    if (processedColorObj != null) {\n      return processedColorObj;\n    }\n  } else if (typeof normalizedColor === 'number') {\n    const r         = (normalizedColor & 0xff000000) >>> 24;\n    const g         = (normalizedColor & 0x00ff0000) >>> 16;\n    const b         = (normalizedColor & 0x0000ff00) >>> 8;\n    const a         = (normalizedColor & 0x000000ff) / 255;\n\n    return {r, g, b, a};\n  }\n\n  return null;\n}\n\nfunction isRgbaValue(value     )          {\n  return (\n    value &&\n    typeof value.r === 'number' &&\n    typeof value.g === 'number' &&\n    typeof value.b === 'number' &&\n    typeof value.a === 'number'\n  );\n}\n\nfunction isRgbaAnimatedValue(value     )          {\n  return (\n    value &&\n    value.r instanceof AnimatedValue &&\n    value.g instanceof AnimatedValue &&\n    value.b instanceof AnimatedValue &&\n    value.a instanceof AnimatedValue\n  );\n}\n\nexport default class AnimatedColor extends AnimatedWithChildren {\n  r               ;\n  g               ;\n  b               ;\n  a               ;\n  nativeColor                   ;\n\n  _suspendCallbacks         = 0;\n\n  constructor(valueIn             , config                       ) {\n    super(config);\n\n    let value                                             =\n      valueIn ?? defaultColor;\n    if (isRgbaAnimatedValue(value)) {\n      // $FlowIgnore[incompatible-cast] - Type is verified above\n      const rgbaAnimatedValue                    = (value                   );\n      this.r = rgbaAnimatedValue.r;\n      this.g = rgbaAnimatedValue.g;\n      this.b = rgbaAnimatedValue.b;\n      this.a = rgbaAnimatedValue.a;\n    } else {\n      const processedColor                               =\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        processColor((value                        )) ?? defaultColor;\n      let initColor            = defaultColor;\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        initColor = (processedColor           );\n      } else {\n        // $FlowIgnore[incompatible-cast] - Type is verified above\n        this.nativeColor = (processedColor                  );\n      }\n\n      this.r = new AnimatedValue(initColor.r);\n      this.g = new AnimatedValue(initColor.g);\n      this.b = new AnimatedValue(initColor.b);\n      this.a = new AnimatedValue(initColor.a);\n    }\n\n    if (config?.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   */\n  setValue(value                        )       {\n    let shouldUpdateNodeConfig = false;\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      NativeAnimatedAPI.setWaitingForIdentifier(nativeTag.toString());\n    }\n\n    const processedColor                               =\n      processColor(value) ?? defaultColor;\n    this._withSuspendedCallbacks(() => {\n      if (isRgbaValue(processedColor)) {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const rgbaValue            = processedColor;\n        this.r.setValue(rgbaValue.r);\n        this.g.setValue(rgbaValue.g);\n        this.b.setValue(rgbaValue.b);\n        this.a.setValue(rgbaValue.a);\n        if (this.nativeColor != null) {\n          this.nativeColor = null;\n          shouldUpdateNodeConfig = true;\n        }\n      } else {\n        // $FlowIgnore[incompatible-type] - Type is verified above\n        const nativeColor                   = processedColor;\n        if (this.nativeColor !== nativeColor) {\n          this.nativeColor = nativeColor;\n          shouldUpdateNodeConfig = true;\n        }\n      }\n    });\n\n    if (this.__isNative) {\n      const nativeTag = this.__getNativeTag();\n      if (shouldUpdateNodeConfig) {\n        NativeAnimatedAPI.updateAnimatedNodeConfig(\n          nativeTag,\n          this.__getNativeConfig(),\n        );\n      }\n      NativeAnimatedAPI.unsetWaitingForIdentifier(nativeTag.toString());\n    } else {\n      flushValue(this);\n    }\n\n    // $FlowFixMe[incompatible-call]\n    this.__callListeners(this.__getValue());\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   */\n  setOffset(offset           )       {\n    this.r.setOffset(offset.r);\n    this.g.setOffset(offset.g);\n    this.b.setOffset(offset.b);\n    this.a.setOffset(offset.a);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   */\n  flattenOffset()       {\n    this.r.flattenOffset();\n    this.g.flattenOffset();\n    this.b.flattenOffset();\n    this.a.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   */\n  extractOffset()       {\n    this.r.extractOffset();\n    this.g.extractOffset();\n    this.b.extractOffset();\n    this.a.extractOffset();\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   */\n  stopAnimation(callback                        )       {\n    this.r.stopAnimation();\n    this.g.stopAnimation();\n    this.b.stopAnimation();\n    this.a.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   */\n  resetAnimation(callback                        )       {\n    this.r.resetAnimation();\n    this.g.resetAnimation();\n    this.b.resetAnimation();\n    this.a.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  __getValue()             {\n    if (this.nativeColor != null) {\n      return this.nativeColor;\n    } else {\n      return `rgba(${this.r.__getValue()}, ${this.g.__getValue()}, ${this.b.__getValue()}, ${this.a.__getValue()})`;\n    }\n  }\n\n  __attach()       {\n    this.r.__addChild(this);\n    this.g.__addChild(this);\n    this.b.__addChild(this);\n    this.a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this.r.__removeChild(this);\n    this.g.__removeChild(this);\n    this.b.__removeChild(this);\n    this.a.__removeChild(this);\n    super.__detach();\n  }\n\n  _withSuspendedCallbacks(callback            ) {\n    this._suspendCallbacks++;\n    callback();\n    this._suspendCallbacks--;\n  }\n\n  __callListeners(value        )       {\n    if (this._suspendCallbacks === 0) {\n      super.__callListeners(value);\n    }\n  }\n\n  __makeNative(platformConfig                 ) {\n    this.r.__makeNative(platformConfig);\n    this.g.__makeNative(platformConfig);\n    this.b.__makeNative(platformConfig);\n    this.a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig()        {\n    return {\n      type: 'color',\n      r: this.r.__getNativeTag(),\n      g: this.g.__getNativeTag(),\n      b: this.b.__getNativeTag(),\n      a: this.a.__getNativeTag(),\n      nativeColor: this.nativeColor,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                               \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedDiffClamp extends AnimatedWithChildren {\n  _a              ;\n  _min        ;\n  _max        ;\n  _value        ;\n  _lastValue        ;\n\n  constructor(\n    a              ,\n    min        ,\n    max        ,\n    config                      ,\n  ) {\n    super(config);\n\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue()         {\n    const value = this._a.__getValue();\n    const diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach()       {\n    this._a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedDivision extends AnimatedWithChildren {\n  _a              ;\n  _b              ;\n  _warnedAboutDivideByZero          = false;\n\n  constructor(\n    a                       ,\n    b                       ,\n    config                      ,\n  ) {\n    super(config);\n    if (b === 0 || (b instanceof AnimatedNode && b.__getValue() === 0)) {\n      console.error('Detected potential division by zero in AnimatedDivision');\n    }\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    this._b.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    const a = this._a.__getValue();\n    const b = this._b.__getValue();\n    if (b === 0) {\n      // Prevent spamming the console/LogBox\n      if (!this._warnedAboutDivideByZero) {\n        console.error('Detected division by zero in AnimatedDivision');\n        this._warnedAboutDivideByZero = true;\n      }\n      // Passing infinity/NaN to Fabric will cause a native crash\n      return 0;\n    }\n    this._warnedAboutDivideByZero = false;\n    return a / b;\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach()       {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'division',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n/* eslint no-bitwise: 0 */\n\n'use strict';\n\n                                                              \n                                               \n                                                       \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport {validateInterpolation} from '../../../src/private/animated/NativeAnimatedValidation';\nimport normalizeColor from '../../StyleSheet/normalizeColor';\nimport processColor from '../../StyleSheet/processColor';\nimport Easing from '../Easing';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'invariant';\n\n                                                       \n\n                                                                           \n                        \n                                     \n                                       \n                                     \n                                \n                                    \n                                     \n   \n\n/**\n * Very handy helper to map input ranges to output ranges with an easing\n * function and custom behavior outside of the ranges.\n */\nfunction createNumericInterpolation(\n  config                                 ,\n)                            {\n  const outputRange                         = (config.outputRange     );\n  const inputRange = config.inputRange;\n\n  const easing = config.easing || Easing.linear;\n\n  let extrapolateLeft                  = 'extend';\n  if (config.extrapolateLeft !== undefined) {\n    extrapolateLeft = config.extrapolateLeft;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateLeft = config.extrapolate;\n  }\n\n  let extrapolateRight                  = 'extend';\n  if (config.extrapolateRight !== undefined) {\n    extrapolateRight = config.extrapolateRight;\n  } else if (config.extrapolate !== undefined) {\n    extrapolateRight = config.extrapolate;\n  }\n\n  return input => {\n    invariant(\n      typeof input === 'number',\n      'Cannot interpolation an input which is not a number',\n    );\n\n    const range = findRange(input, inputRange);\n    return (interpolate(\n      input,\n      inputRange[range],\n      inputRange[range + 1],\n      outputRange[range],\n      outputRange[range + 1],\n      easing,\n      extrapolateLeft,\n      extrapolateRight,\n    )     );\n  };\n}\n\nfunction interpolate(\n  input        ,\n  inputMin        ,\n  inputMax        ,\n  outputMin        ,\n  outputMax        ,\n  easing                           ,\n  extrapolateLeft                 ,\n  extrapolateRight                 ,\n) {\n  let result = input;\n\n  // Extrapolate\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else if (extrapolateLeft === 'extend') {\n      // noop\n    }\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else if (extrapolateRight === 'extend') {\n      // noop\n    }\n  }\n\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n\n  if (inputMin === inputMax) {\n    if (input <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n\n  // Input Range\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n\n  // Easing\n  result = easing(result);\n\n  // Output Range\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n\n  return result;\n}\n\nconst numericComponentRegex = /[+-]?(?:\\d+\\.?\\d*|\\.\\d+)(?:[eE][+-]?\\d+)?/g;\n\n// Maps string inputs an RGBA color or an array of numeric components\nfunction mapStringToNumericComponents(\n  input        ,\n) \n                                                                 \n                                                                  {\n  let normalizedColor = normalizeColor(input);\n  invariant(\n    normalizedColor == null || typeof normalizedColor !== 'object',\n    'PlatformColors are not supported',\n  );\n\n  if (typeof normalizedColor === 'number') {\n    normalizedColor = normalizedColor || 0;\n    const r = (normalizedColor & 0xff000000) >>> 24;\n    const g = (normalizedColor & 0x00ff0000) >>> 16;\n    const b = (normalizedColor & 0x0000ff00) >>> 8;\n    const a = (normalizedColor & 0x000000ff) / 255;\n    return {isColor: true, components: [r, g, b, a]};\n  } else {\n    const components                         = [];\n    let lastMatchEnd = 0;\n    let match                    ;\n    while ((match = (numericComponentRegex.exec(input)     )) != null) {\n      if (match.index > lastMatchEnd) {\n        components.push(input.substring(lastMatchEnd, match.index));\n      }\n      components.push(parseFloat(match[0]));\n      lastMatchEnd = match.index + match[0].length;\n    }\n    invariant(\n      components.length > 0,\n      'outputRange must contain color or value with numeric component',\n    );\n    if (lastMatchEnd < input.length) {\n      components.push(input.substring(lastMatchEnd, input.length));\n    }\n    return {isColor: false, components};\n  }\n}\n\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36) // colors\n *   -45deg                  // values with units\n */\nfunction createStringInterpolation(\n  config                                 ,\n)                            {\n  invariant(config.outputRange.length >= 2, 'Bad output range');\n  const outputRange = config.outputRange.map(mapStringToNumericComponents);\n\n  const isColor = outputRange[0].isColor;\n  if (__DEV__) {\n    invariant(\n      outputRange.every(output => output.isColor === isColor),\n      'All elements of output range should either be a color or a string with numeric components',\n    );\n    const firstOutput = outputRange[0].components;\n    invariant(\n      outputRange.every(\n        output => output.components.length === firstOutput.length,\n      ),\n      'All elements of output range should have the same number of components',\n    );\n    invariant(\n      outputRange.every(output =>\n        output.components.every(\n          (component, i) =>\n            // $FlowIgnoreMe[invalid-compare]\n            typeof component === 'number' || component === firstOutput[i],\n        ),\n      ),\n      'All elements of output range should have the same non-numeric components',\n    );\n  }\n\n  const numericComponents                                         =\n    outputRange.map(output =>\n      isColor\n        ? // $FlowIgnoreMe[incompatible-call]\n          output.components\n        : // $FlowIgnoreMe[incompatible-call]\n          output.components.filter(c => typeof c === 'number'),\n    );\n  const interpolations = numericComponents[0].map((_, i) =>\n    createNumericInterpolation({\n      ...config,\n      outputRange: numericComponents.map(components => components[i]),\n    }),\n  );\n  if (!isColor) {\n    return input => {\n      const values = interpolations.map(interpolation => interpolation(input));\n      let i = 0;\n      return outputRange[0].components\n        .map(c => (typeof c === 'number' ? values[i++] : c))\n        .join('');\n    };\n  } else {\n    return input => {\n      const result = interpolations.map((interpolation, i) => {\n        const value = interpolation(input);\n        // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n        // round the opacity (4th column).\n        return i < 3 ? Math.round(value) : Math.round(value * 1000) / 1000;\n      });\n      return `rgba(${result[0]}, ${result[1]}, ${result[2]}, ${result[3]})`;\n    };\n  }\n}\n\nfunction findRange(input        , inputRange                        ) {\n  let i;\n  for (i = 1; i < inputRange.length - 1; ++i) {\n    if (inputRange[i] >= input) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\nfunction checkValidRanges                          (\n  inputRange                        ,\n  outputRange                         ,\n) {\n  checkInfiniteRange('outputRange', outputRange);\n  checkInfiniteRange('inputRange', inputRange);\n  checkValidInputRange(inputRange);\n\n  invariant(\n    inputRange.length === outputRange.length,\n    'inputRange (' +\n      inputRange.length +\n      ') and outputRange (' +\n      outputRange.length +\n      ') must have the same length',\n  );\n}\n\nfunction checkValidInputRange(arr                        ) {\n  invariant(arr.length >= 2, 'inputRange must have at least 2 elements');\n  const message =\n    'inputRange must be monotonically non-decreasing ' + String(arr);\n  for (let i = 1; i < arr.length; ++i) {\n    invariant(arr[i] >= arr[i - 1], message);\n  }\n}\n\nfunction checkInfiniteRange                          (\n  name        ,\n  arr                         ,\n) {\n  invariant(arr.length >= 2, name + ' must have at least 2 elements');\n  invariant(\n    arr.length !== 2 || arr[0] !== -Infinity || arr[1] !== Infinity,\n    /* $FlowFixMe[incompatible-type] (>=0.13.0) - In the addition expression\n     * below this comment, one or both of the operands may be something that\n     * doesn't cleanly convert to a string, like undefined, null, and object,\n     * etc. If you really mean this implicit string conversion, you can do\n     * something like String(myThing) */\n    // $FlowFixMe[unsafe-addition]\n    name + 'cannot be ]-infinity;+infinity[ ' + arr,\n  );\n}\n\nexport default class AnimatedInterpolation \n                           \n  extends AnimatedWithChildren {\n  _parent              ;\n  _config                                  ;\n  _interpolation                             ;\n\n  constructor(parent              , config                                  ) {\n    super(config);\n    this._parent = parent;\n    this._config = config;\n\n    if (__DEV__) {\n      checkValidRanges(config.inputRange, config.outputRange);\n\n      // Create interpolation eagerly in dev, so we can signal errors faster\n      // even when using the native driver\n      this._getInterpolation();\n    }\n  }\n\n  _getInterpolation()                    {\n    if (!this._interpolation) {\n      const config = this._config;\n      if (config.outputRange && typeof config.outputRange[0] === 'string') {\n        this._interpolation = (createStringInterpolation((config     ))     );\n      } else {\n        this._interpolation = (createNumericInterpolation((config     ))     );\n      }\n    }\n    return this._interpolation;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._parent.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()          {\n    const parentValue         = this._parent.__getValue();\n    invariant(\n      typeof parentValue === 'number',\n      'Cannot interpolate an input which is not a number.',\n    );\n    return this._getInterpolation()(parentValue);\n  }\n\n  interpolate                             (\n    config                                     ,\n  )                                    {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach()       {\n    this._parent.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._parent.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    if (__DEV__) {\n      validateInterpolation(this._config);\n    }\n\n    // Only the `outputRange` can contain strings so we don't need to transform `inputRange` here\n    let outputRange = this._config.outputRange;\n    let outputType = null;\n    if (typeof outputRange[0] === 'string') {\n      // $FlowIgnoreMe[incompatible-cast]\n      outputRange = ((outputRange                        ).map(value => {\n        const processedColor = processColor(value);\n        if (typeof processedColor === 'number') {\n          outputType = 'color';\n          return processedColor;\n        } else {\n          return NativeAnimatedHelper.transformDataType(value);\n        }\n      })     );\n    }\n\n    return {\n      inputRange: this._config.inputRange,\n      outputRange,\n      outputType,\n      extrapolateLeft:\n        this._config.extrapolateLeft || this._config.extrapolate || 'extend',\n      extrapolateRight:\n        this._config.extrapolateRight || this._config.extrapolate || 'extend',\n      type: 'interpolation',\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                               \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedModulo extends AnimatedWithChildren {\n  _a              ;\n  _modulus        ;\n\n  constructor(a              , modulus        , config                      ) {\n    super(config);\n    this._a = a;\n    this._modulus = modulus;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    return (\n      ((this._a.__getValue() % this._modulus) + this._modulus) % this._modulus\n    );\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach()       {\n    this._a.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'modulus',\n      input: this._a.__getNativeTag(),\n      modulus: this._modulus,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                               \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedMultiplication extends AnimatedWithChildren {\n  _a              ;\n  _b              ;\n\n  constructor(\n    a                       ,\n    b                       ,\n    config                      ,\n  ) {\n    super(config);\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    this._b.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    return this._a.__getValue() * this._b.__getValue();\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n  __attach()       {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'multiplication',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                              \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport invariant from 'invariant';\n\n                                                                    \n\n                                            \n                   \n   \n\nlet _uniqueId = 1;\nlet _assertNativeAnimatedModule              = () => {\n  NativeAnimatedHelper.assertNativeAnimatedModule();\n  // We only have to assert that the module exists once. After we've asserted\n  // this, clear out the function so we know to skip it in the future.\n  _assertNativeAnimatedModule = null;\n};\n\nexport default class AnimatedNode {\n  #listeners                                     = new Map();\n\n  _platformConfig                  = undefined;\n\n  constructor(\n    config               \n                            \n         \n      ,\n  ) {\n    if (__DEV__) {\n      this.__debugID = config?.debugID;\n    }\n  }\n\n  __attach()       {}\n  __detach()       {\n    this.removeAllListeners();\n    if (this.__isNative && this.__nativeTag != null) {\n      NativeAnimatedHelper.API.dropAnimatedNode(this.__nativeTag);\n      this.__nativeTag = undefined;\n    }\n  }\n  __getValue()      {}\n  __getAnimatedValue()      {\n    return this.__getValue();\n  }\n  __addChild(child              ) {}\n  __removeChild(child              ) {}\n  __getChildren()                               {\n    return [];\n  }\n\n  /* Methods and props used by native Animated impl */\n  __isNative          = false;\n  __nativeTag          = undefined;\n\n  __makeNative(platformConfig                 )       {\n    // Subclasses are expected to set `__isNative` to true before this.\n    invariant(\n      this.__isNative,\n      'This node cannot be made a \"native\" animated node',\n    );\n\n    this._platformConfig = platformConfig;\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to\n   * synchronously read the value because it might be driven natively.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#addlistener\n   */\n  addListener(callback                       )         {\n    const id = String(_uniqueId++);\n    this.#listeners.set(id, callback);\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#removelistener\n   */\n  removeListener(id        )       {\n    this.#listeners.delete(id);\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#removealllisteners\n   */\n  removeAllListeners()       {\n    this.#listeners.clear();\n  }\n\n  hasListeners()          {\n    return this.#listeners.size > 0;\n  }\n\n  __onAnimatedValueUpdateReceived(value        )       {\n    this.__callListeners(value);\n  }\n\n  __callListeners(value        )       {\n    const event = {value};\n    this.#listeners.forEach(listener => {\n      listener(event);\n    });\n  }\n\n  __getNativeTag()         {\n    let nativeTag = this.__nativeTag;\n    if (nativeTag == null) {\n      _assertNativeAnimatedModule?.();\n\n      // `__isNative` is initialized as false and only ever set to true. So we\n      // only need to check it once here when initializing `__nativeTag`.\n      invariant(\n        this.__isNative,\n        'Attempt to get native tag from node not marked as \"native\"',\n      );\n\n      nativeTag = NativeAnimatedHelper.generateNewNodeTag();\n      this.__nativeTag = nativeTag;\n\n      const config = this.__getNativeConfig();\n      if (this._platformConfig) {\n        config.platformConfig = this._platformConfig;\n      }\n      NativeAnimatedHelper.API.createAnimatedNode(nativeTag, config);\n    }\n    return nativeTag;\n  }\n\n  __getNativeConfig()         {\n    throw new Error(\n      'This JS animated node type cannot be used as native animated node',\n    );\n  }\n\n  __getPlatformConfig()                  {\n    return this._platformConfig;\n  }\n\n  __setPlatformConfig(platformConfig                 ) {\n    this._platformConfig = platformConfig;\n  }\n\n  /**\n   * NOTE: This is intended to prevent `JSON.stringify` from throwing \"cyclic\n   * structure\" errors in React DevTools. Avoid depending on this!\n   */\n  toJSON()        {\n    return this.__getValue();\n  }\n\n  __debugID          = undefined;\n\n  __getDebugID()          {\n    if (__DEV__) {\n      return this.__debugID;\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n * @oncall react_native\n */\n\n'use strict';\n\n                                                              \n                                                       \n\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport * as React from 'react';\n\nconst MAX_DEPTH = 5;\n\nexport function isPlainObject(\n  value       ,\n  /* $FlowIssue[incompatible-type-guard] - Flow does not know that the prototype\n     and ReactElement checks preserve the type refinement of `value`. */\n)                                        {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    Object.getPrototypeOf(value).isPrototypeOf(Object) &&\n    !React.isValidElement(value)\n  );\n}\n\nfunction flatAnimatedNodes(\n  value       ,\n  nodes                      = [],\n  depth         = 0,\n)                      {\n  if (depth >= MAX_DEPTH) {\n    return nodes;\n  }\n  if (value instanceof AnimatedNode) {\n    nodes.push(value);\n  } else if (Array.isArray(value)) {\n    for (let ii = 0, length = value.length; ii < length; ii++) {\n      const element = value[ii];\n      flatAnimatedNodes(element, nodes, depth + 1);\n    }\n  } else if (isPlainObject(value)) {\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      flatAnimatedNodes(value[key], nodes, depth + 1);\n    }\n  }\n  return nodes;\n}\n\n// Returns a copy of value with a transformation fn applied to any AnimatedNodes\nfunction mapAnimatedNodes(value     , fn            , depth         = 0)      {\n  if (depth >= MAX_DEPTH) {\n    return value;\n  }\n\n  if (value instanceof AnimatedNode) {\n    return fn(value);\n  } else if (Array.isArray(value)) {\n    return value.map(element => mapAnimatedNodes(element, fn, depth + 1));\n  } else if (isPlainObject(value)) {\n    const result                  = {};\n    const keys = Object.keys(value);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      result[key] = mapAnimatedNodes(value[key], fn, depth + 1);\n    }\n    return result;\n  } else {\n    return value;\n  }\n}\n\nexport default class AnimatedObject extends AnimatedWithChildren {\n  #nodes                              ;\n  _value       ;\n\n  /**\n   * Creates an `AnimatedObject` if `value` contains `AnimatedNode` instances.\n   * Otherwise, returns `null`.\n   */\n  static from(value       )                  {\n    const nodes = flatAnimatedNodes(value);\n    if (nodes.length === 0) {\n      return null;\n    }\n    return new AnimatedObject(nodes, value);\n  }\n\n  /**\n   * Should only be called by `AnimatedObject.from`.\n   */\n  constructor(\n    nodes                              ,\n    value       ,\n    config                      ,\n  ) {\n    super(config);\n    this.#nodes = nodes;\n    this._value = value;\n  }\n\n  __getValue()      {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getValue();\n    });\n  }\n\n  __getValueWithStaticObject(staticObject       )      {\n    const nodes = this.#nodes;\n    let index = 0;\n    // NOTE: We can depend on `this._value` and `staticObject` sharing a\n    // structure because of `useAnimatedPropsMemo`.\n    return mapAnimatedNodes(staticObject, () => nodes[index++].__getValue());\n  }\n\n  __getAnimatedValue()      {\n    return mapAnimatedNodes(this._value, node => {\n      return node.__getAnimatedValue();\n    });\n  }\n\n  __attach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n    super.__attach();\n  }\n\n  __detach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __makeNative(platformConfig                 )       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'object',\n      value: mapAnimatedNodes(this._value, node => {\n        return {nodeTag: node.__getNativeTag()};\n      }),\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                              \n                                                       \n                                                            \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport {findNodeHandle} from '../../ReactNative/RendererProxy';\nimport {AnimatedEvent} from '../AnimatedEvent';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedObject from './AnimatedObject';\nimport AnimatedStyle from './AnimatedStyle';\nimport invariant from 'invariant';\n\n                                                \n                                  \n                 \n   \n\nfunction createAnimatedProps(\n  inputProps                   ,\n  allowlist                         ,\n)                                                                            {\n  const nodeKeys                = [];\n  const nodes                      = [];\n  const props                    = {};\n\n  const keys = Object.keys(inputProps);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n    const value = inputProps[key];\n\n    if (allowlist == null || hasOwn(allowlist, key)) {\n      let node;\n      if (key === 'style') {\n        node = AnimatedStyle.from(value, allowlist?.style);\n      } else if (value instanceof AnimatedNode) {\n        node = value;\n      } else {\n        node = AnimatedObject.from(value);\n      }\n      if (node == null) {\n        props[key] = value;\n      } else {\n        nodeKeys.push(key);\n        nodes.push(node);\n        props[key] = node;\n      }\n    } else {\n      if (__DEV__) {\n        // WARNING: This is a potentially expensive check that we should only\n        // do in development. Without this check in development, it might be\n        // difficult to identify which props need to be allowlisted.\n        if (AnimatedObject.from(inputProps[key]) != null) {\n          console.error(\n            `AnimatedProps: ${key} is not allowlisted for animation, but it ` +\n              'contains AnimatedNode values; props allowing animation: ',\n            allowlist,\n          );\n        }\n      }\n      props[key] = value;\n    }\n  }\n\n  return [nodeKeys, nodes, props];\n}\n\nexport default class AnimatedProps extends AnimatedNode {\n  #animatedView      = null;\n  #callback            ;\n  #nodeKeys                        ;\n  #nodes                              ;\n  #props                   ;\n\n  constructor(\n    inputProps                   ,\n    callback            ,\n    allowlist                          ,\n    config                      ,\n  ) {\n    super(config);\n    const [nodeKeys, nodes, props] = createAnimatedProps(inputProps, allowlist);\n    this.#nodeKeys = nodeKeys;\n    this.#nodes = nodes;\n    this.#props = props;\n    this.#callback = callback;\n  }\n\n  __getValue()         {\n    const props                    = {};\n\n    const keys = Object.keys(this.#props);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const value = this.#props[key];\n\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getValue();\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n\n    return props;\n  }\n\n  /**\n   * Creates a new `props` object that contains the same props as the supplied\n   * `staticProps` object, except with animated nodes for any props that were\n   * created by this `AnimatedProps` instance.\n   */\n  __getValueWithStaticProps(staticProps        )         {\n    const props                    = {...staticProps};\n\n    const keys = Object.keys(staticProps);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const maybeNode = this.#props[key];\n\n      if (key === 'style' && maybeNode instanceof AnimatedStyle) {\n        props[key] = maybeNode.__getValueWithStaticStyle(staticProps.style);\n      } else if (maybeNode instanceof AnimatedNode) {\n        props[key] = maybeNode.__getValue();\n      } else if (maybeNode instanceof AnimatedEvent) {\n        props[key] = maybeNode.__getHandler();\n      }\n    }\n\n    return props;\n  }\n\n  __getAnimatedValue()         {\n    const props                    = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      props[key] = node.__getAnimatedValue();\n    }\n\n    return props;\n  }\n\n  __attach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n    super.__attach();\n  }\n\n  __detach()       {\n    if (this.__isNative && this.#animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    this.#animatedView = null;\n\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n\n    super.__detach();\n  }\n\n  update()       {\n    this.#callback();\n  }\n\n  __makeNative(platformConfig                 )       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      // Since this does not call the super.__makeNative, we need to store the\n      // supplied platformConfig here, before calling __connectAnimatedView\n      // where it will be needed to traverse the graph of attached values.\n      super.__setPlatformConfig(platformConfig);\n\n      if (this.#animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView     )       {\n    if (this.#animatedView === animatedView) {\n      return;\n    }\n    this.#animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView()       {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    let nativeViewTag          = findNodeHandle(this.#animatedView);\n    if (nativeViewTag == null) {\n      if (process.env.NODE_ENV === 'test') {\n        nativeViewTag = -1;\n      } else {\n        throw new Error('Unable to locate attached view in the native tree');\n      }\n    }\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __disconnectAnimatedView()       {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    let nativeViewTag          = findNodeHandle(this.#animatedView);\n    if (nativeViewTag == null) {\n      if (process.env.NODE_ENV === 'test') {\n        nativeViewTag = -1;\n      } else {\n        throw new Error('Unable to locate attached view in the native tree');\n      }\n    }\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __restoreDefaultValues()       {\n    // When using the native driver, view properties need to be restored to\n    // their default values manually since react no longer tracks them. This\n    // is needed to handle cases where a prop driven by native animated is removed\n    // after having been changed natively by an animation.\n    if (this.__isNative) {\n      NativeAnimatedHelper.API.restoreDefaultValues(this.__getNativeTag());\n    }\n  }\n\n  __getNativeConfig()         {\n    const platformConfig = this.__getPlatformConfig();\n    const propsConfig                     = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n      propsConfig[key] = node.__getNativeTag();\n    }\n\n    return {\n      type: 'props',\n      props: propsConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n\n// Supported versions of JSC do not implement the newer Object.hasOwn. Remove\n// this shim when they do.\n// $FlowIgnore[method-unbinding]\nconst _hasOwnProp = Object.prototype.hasOwnProperty;\nconst hasOwn                                                   =\n  // $FlowIgnore[method-unbinding]\n  Object.hasOwn ?? ((obj, prop) => _hasOwnProp.call(obj, prop));\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                              \n                                                       \n\nimport {validateStyles} from '../../../src/private/animated/NativeAnimatedValidation';\nimport * as ReactNativeFeatureFlags from '../../../src/private/featureflags/ReactNativeFeatureFlags';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport Platform from '../../Utilities/Platform';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedObject from './AnimatedObject';\nimport AnimatedTransform from './AnimatedTransform';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\n                                                                 \n\nfunction createAnimatedStyle(\n  inputStyle                   ,\n  allowlist                         ,\n  keepUnanimatedValues         ,\n)                                                                            {\n  const nodeKeys                = [];\n  const nodes                      = [];\n  const style                    = {};\n\n  const keys = Object.keys(inputStyle);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n    const value = inputStyle[key];\n\n    if (allowlist == null || hasOwn(allowlist, key)) {\n      let node;\n      if (value != null && key === 'transform') {\n        node = ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform()\n          ? AnimatedObject.from(value)\n          : // $FlowFixMe[incompatible-call] - `value` is mixed.\n            AnimatedTransform.from(value);\n      } else if (value instanceof AnimatedNode) {\n        node = value;\n      } else {\n        node = AnimatedObject.from(value);\n      }\n      if (node == null) {\n        if (keepUnanimatedValues) {\n          style[key] = value;\n        }\n      } else {\n        nodeKeys.push(key);\n        nodes.push(node);\n        style[key] = node;\n      }\n    } else {\n      if (__DEV__) {\n        // WARNING: This is a potentially expensive check that we should only\n        // do in development. Without this check in development, it might be\n        // difficult to identify which styles need to be allowlisted.\n        if (AnimatedObject.from(inputStyle[key]) != null) {\n          console.error(\n            `AnimatedStyle: ${key} is not allowlisted for animation, but it ` +\n              'contains AnimatedNode values; styles allowing animation: ',\n            allowlist,\n          );\n        }\n      }\n      if (keepUnanimatedValues) {\n        style[key] = value;\n      }\n    }\n  }\n\n  return [nodeKeys, nodes, style];\n}\n\nexport default class AnimatedStyle extends AnimatedWithChildren {\n  #inputStyle     ;\n  #nodeKeys                        ;\n  #nodes                              ;\n  #style                   ;\n\n  /**\n   * Creates an `AnimatedStyle` if `value` contains `AnimatedNode` instances.\n   * Otherwise, returns `null`.\n   */\n  static from(\n    inputStyle     ,\n    allowlist                         ,\n  )                 {\n    const flatStyle = flattenStyle(inputStyle);\n    if (flatStyle == null) {\n      return null;\n    }\n    const [nodeKeys, nodes, style] = createAnimatedStyle(\n      flatStyle,\n      allowlist,\n      Platform.OS !== 'web',\n    );\n    if (nodes.length === 0) {\n      return null;\n    }\n    return new AnimatedStyle(nodeKeys, nodes, style, inputStyle);\n  }\n\n  constructor(\n    nodeKeys                        ,\n    nodes                              ,\n    style                   ,\n    inputStyle     ,\n    config                      ,\n  ) {\n    super(config);\n    this.#nodeKeys = nodeKeys;\n    this.#nodes = nodes;\n    this.#style = style;\n    this.#inputStyle = inputStyle;\n  }\n\n  __getValue()                         {\n    const style                    = {};\n\n    const keys = Object.keys(this.#style);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const value = this.#style[key];\n\n      if (value instanceof AnimatedNode) {\n        style[key] = value.__getValue();\n      } else {\n        style[key] = value;\n      }\n    }\n\n    /* $FlowFixMe[incompatible-type] Error found due to incomplete typing of\n     * Platform.flow.js */\n    return Platform.OS === 'web' ? [this.#inputStyle, style] : style;\n  }\n\n  /**\n   * Creates a new `style` object that contains the same style properties as\n   * the supplied `staticStyle` object, except with animated nodes for any\n   * style properties that were created by this `AnimatedStyle` instance.\n   */\n  __getValueWithStaticStyle(staticStyle        )                         {\n    const flatStaticStyle = flattenStyle(staticStyle);\n    const style                    =\n      flatStaticStyle == null\n        ? {}\n        : flatStaticStyle === staticStyle\n          ? // Copy the input style, since we'll mutate it below.\n            {...flatStaticStyle}\n          : // Reuse `flatStaticStyle` if it is a newly created object.\n            flatStaticStyle;\n\n    const keys = Object.keys(style);\n    for (let ii = 0, length = keys.length; ii < length; ii++) {\n      const key = keys[ii];\n      const maybeNode = this.#style[key];\n\n      if (key === 'transform' && maybeNode instanceof AnimatedTransform) {\n        style[key] = maybeNode.__getValueWithStaticTransforms(\n          // NOTE: This check should not be necessary, but the types are not\n          // enforced as of this writing.\n          Array.isArray(style[key]) ? style[key] : [],\n        );\n      } else if (maybeNode instanceof AnimatedObject) {\n        style[key] = maybeNode.__getValueWithStaticObject(style[key]);\n      } else if (maybeNode instanceof AnimatedNode) {\n        style[key] = maybeNode.__getValue();\n      }\n    }\n\n    /* $FlowFixMe[incompatible-type] Error found due to incomplete typing of\n     * Platform.flow.js */\n    return Platform.OS === 'web' ? [this.#inputStyle, style] : style;\n  }\n\n  __getAnimatedValue()         {\n    const style                    = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      style[key] = node.__getAnimatedValue();\n    }\n\n    return style;\n  }\n\n  __attach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n    super.__attach();\n  }\n\n  __detach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __makeNative(platformConfig                 ) {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig()         {\n    const platformConfig = this.__getPlatformConfig();\n    const styleConfig                      = {};\n\n    const nodeKeys = this.#nodeKeys;\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const key = nodeKeys[ii];\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n      styleConfig[key] = node.__getNativeTag();\n    }\n\n    if (__DEV__) {\n      validateStyles(styleConfig);\n    }\n    return {\n      type: 'style',\n      style: styleConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n\n// Supported versions of JSC do not implement the newer Object.hasOwn. Remove\n// this shim when they do.\n// $FlowIgnore[method-unbinding]\nconst _hasOwnProp = Object.prototype.hasOwnProperty;\nconst hasOwn                                                   =\n  // $FlowIgnore[method-unbinding]\n  Object.hasOwn ?? ((obj, prop) => _hasOwnProp.call(obj, prop));\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                                     \n                                               \n                                                       \n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedSubtraction extends AnimatedWithChildren {\n  _a              ;\n  _b              ;\n\n  constructor(\n    a                       ,\n    b                       ,\n    config                      ,\n  ) {\n    super(config);\n    this._a = typeof a === 'number' ? new AnimatedValue(a) : a;\n    this._b = typeof b === 'number' ? new AnimatedValue(b) : b;\n  }\n\n  __makeNative(platformConfig                 ) {\n    this._a.__makeNative(platformConfig);\n    this._b.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    return this._a.__getValue() - this._b.__getValue();\n  }\n\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __attach()       {\n    this._a.__addChild(this);\n    this._b.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this._a.__removeChild(this);\n    this._b.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    return {\n      type: 'subtraction',\n      input: [this._a.__getNativeTag(), this._b.__getNativeTag()],\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                         \n                                                       \n                                                 \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\n\nexport default class AnimatedTracking extends AnimatedNode {\n  _value               ;\n  _parent              ;\n  _callback              ;\n  _animationConfig        ;\n  _animationClass     ;\n  _useNativeDriver         ;\n\n  constructor(\n    value               ,\n    parent              ,\n    animationClass     ,\n    animationConfig        ,\n    callback               ,\n    config                      ,\n  ) {\n    super(config);\n    this._value = value;\n    this._parent = parent;\n    this._animationClass = animationClass;\n    this._animationConfig = animationConfig;\n    this._useNativeDriver =\n      NativeAnimatedHelper.shouldUseNativeDriver(animationConfig);\n    this._callback = callback;\n    this.__attach();\n  }\n\n  __makeNative(platformConfig                 ) {\n    this.__isNative = true;\n    this._parent.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n    this._value.__makeNative(platformConfig);\n  }\n\n  __getValue()         {\n    return this._parent.__getValue();\n  }\n\n  __attach()       {\n    this._parent.__addChild(this);\n    if (this._useNativeDriver) {\n      // when the tracking starts we need to convert this node to a \"native node\"\n      // so that the parent node will be made \"native\" too. This is necessary as\n      // if we don't do this `update` method will get called. At that point it\n      // may be too late as it would mean the JS driver has already started\n      // updating node values\n      let {platformConfig} = this._animationConfig;\n      this.__makeNative(platformConfig);\n    }\n    super.__attach();\n  }\n\n  __detach()       {\n    this._parent.__removeChild(this);\n    super.__detach();\n  }\n\n  update()       {\n    this._value.animate(\n      new this._animationClass({\n        ...this._animationConfig,\n        toValue: (this._animationConfig.toValue     ).__getValue(),\n      }),\n      this._callback,\n    );\n  }\n\n  __getNativeConfig()      {\n    const animation = new this._animationClass({\n      ...this._animationConfig,\n      // remove toValue from the config as it's a ref to Animated.Value\n      toValue: undefined,\n    });\n    const animationConfig = animation.__getNativeAnimationConfig();\n    return {\n      type: 'tracking',\n      animationId: NativeAnimatedHelper.generateNewAnimationId(),\n      animationConfig,\n      toValue: this._parent.__getNativeTag(),\n      value: this._value.__getNativeTag(),\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                       \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport {validateTransform} from '../../../src/private/animated/NativeAnimatedValidation';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\n                                    \n           \n            \n            \n       \n                                         \n                                      \n  \n\nfunction flatAnimatedNodes(\n  transforms                             ,\n)                      {\n  const nodes = [];\n  for (let ii = 0, length = transforms.length; ii < length; ii++) {\n    const transform = transforms[ii];\n    // There should be exactly one property in `transform`.\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        nodes.push(value);\n      }\n    }\n  }\n  return nodes;\n}\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  // NOTE: For potentially historical reasons, some operations only operate on\n  // the first level of AnimatedNode instances. This optimizes that bevavior.\n  #nodes                              ;\n\n  _transforms                             ;\n\n  /**\n   * Creates an `AnimatedTransform` if `transforms` contains `AnimatedNode`\n   * instances. Otherwise, returns `null`.\n   */\n  static from(transforms                             )                     {\n    const nodes = flatAnimatedNodes(\n      // NOTE: This check should not be necessary, but the types are not\n      // enforced as of this writing. This check should be hoisted to\n      // instantiation sites.\n      Array.isArray(transforms) ? transforms : [],\n    );\n    if (nodes.length === 0) {\n      return null;\n    }\n    return new AnimatedTransform(nodes, transforms);\n  }\n\n  constructor(\n    nodes                              ,\n    transforms                             ,\n    config                      ,\n  ) {\n    super(config);\n    this.#nodes = nodes;\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig                 ) {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__makeNative(platformConfig);\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue()                                 {\n    return mapTransforms(this._transforms, animatedNode =>\n      animatedNode.__getValue(),\n    );\n  }\n\n  __getValueWithStaticTransforms(\n    staticTransforms                        ,\n  )                         {\n    const values = [];\n    mapTransforms(this._transforms, node => {\n      values.push(node.__getValue());\n    });\n    // NOTE: We can depend on `this._transforms` and `staticTransforms` sharing\n    // a structure because of `useAnimatedPropsMemo`.\n    return mapTransforms(staticTransforms, () => values.shift());\n  }\n\n  __getAnimatedValue()                                 {\n    return mapTransforms(this._transforms, animatedNode =>\n      animatedNode.__getAnimatedValue(),\n    );\n  }\n\n  __attach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__addChild(this);\n    }\n    super.__attach();\n  }\n\n  __detach()       {\n    const nodes = this.#nodes;\n    for (let ii = 0, length = nodes.length; ii < length; ii++) {\n      const node = nodes[ii];\n      node.__removeChild(this);\n    }\n    super.__detach();\n  }\n\n  __getNativeConfig()      {\n    const transformsConfig             = [];\n\n    const transforms = this._transforms;\n    for (let ii = 0, length = transforms.length; ii < length; ii++) {\n      const transform = transforms[ii];\n      // There should be exactly one property in `transform`.\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transformsConfig.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transformsConfig.push({\n            type: 'static',\n            property: key,\n            /* $FlowFixMe[incompatible-call] - `value` can be an array or an\n               object. This is not currently handled by `transformDataType`.\n               Migrating to `TransformObject` might solve this. */\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    }\n\n    if (__DEV__) {\n      validateTransform(transformsConfig);\n    }\n    return {\n      type: 'transform',\n      transforms: transformsConfig,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n\nfunction mapTransforms   (\n  transforms                             ,\n  mapFunction                   ,\n)                               {\n  return transforms.map(transform => {\n    const result               = {};\n    // There should be exactly one property in `transform`.\n    for (const key in transform) {\n      const value = transform[key];\n      if (value instanceof AnimatedNode) {\n        result[key] = mapFunction(value);\n      } else if (Array.isArray(value)) {\n        result[key] = value.map(element =>\n          element instanceof AnimatedNode ? mapFunction(element) : element,\n        );\n      } else if (typeof value === 'object') {\n        const object                                  = {};\n        for (const propertyName in value) {\n          const propertyValue = value[propertyName];\n          object[propertyName] =\n            propertyValue instanceof AnimatedNode\n              ? mapFunction(propertyValue)\n              : propertyValue;\n        }\n        result[key] = object;\n      } else {\n        result[key] = value;\n      }\n    }\n    return result;\n  });\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                                         \n                                                              \n                                                                    \n                                                                     \n                                               \n                                                       \n                                                       \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport InteractionManager from '../../Interaction/InteractionManager';\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\n                                             \n                        \n                           \n   \n\nconst NativeAnimatedAPI = NativeAnimatedHelper.API;\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an Animated.Value is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nexport function flushValue(rootNode              )       {\n  // eslint-disable-next-line func-call-spacing\n  const leaves = new Set                           ();\n  function findAnimatedStyles(node              ) {\n    // $FlowFixMe[prop-missing]\n    if (typeof node.update === 'function') {\n      leaves.add((node     ));\n    } else {\n      node.__getChildren().forEach(findAnimatedStyles);\n    }\n  }\n  findAnimatedStyles(rootNode);\n  leaves.forEach(leaf => leaf.update());\n}\n\n/**\n * Some operations are executed only on batch end, which is _mostly_ scheduled when\n * Animated component props change. For some of the changes which require immediate execution\n * (e.g. setValue), we create a separate batch in case none is scheduled.\n */\nfunction _executeAsAnimatedBatch(id        , operation            ) {\n  NativeAnimatedAPI.setWaitingForIdentifier(id);\n  operation();\n  NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n}\n\n/**\n * Standard value for driving animations.  One `Animated.Value` can drive\n * multiple properties in a synchronized fashion, but can only be driven by one\n * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n * or calling `setValue`) will stop any previous ones.\n *\n * See https://reactnative.dev/docs/animatedvalue\n */\nexport default class AnimatedValue extends AnimatedWithChildren {\n  #attached          = false;\n  #updateSubscription                     = null;\n\n  _value        ;\n  _startingValue        ;\n  _offset        ;\n  _animation            ;\n  _tracking                   ;\n\n  constructor(value        , config                       ) {\n    super(config);\n    if (typeof value !== 'number') {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n    this._startingValue = this._value = value;\n    this._offset = 0;\n    this._animation = null;\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  __attach()       {\n    this.#attached = true;\n    this.#ensureUpdateSubscriptionExists();\n  }\n\n  __detach()       {\n    if (this.__isNative) {\n      this.#updateSubscription?.remove();\n      NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n        this._value = value - this._offset;\n      });\n    }\n    this.stopAnimation();\n    super.__detach();\n    this.#attached = false;\n  }\n\n  __getValue()         {\n    return this._value + this._offset;\n  }\n\n  __makeNative(platformConfig                 )       {\n    super.__makeNative(platformConfig);\n    this.#ensureUpdateSubscriptionExists();\n  }\n\n  /**\n   * NOTE: In theory, we should only need to call this when any listeners\n   * are added. However, there is a global `onUserDrivenAnimationEnded`\n   * listener that relies on `onAnimatedValueUpdate` having fired to update\n   * the values in JavaScript. If that listener is removed, this could be\n   * re-optimized.\n   */\n  #ensureUpdateSubscriptionExists()       {\n    if (this.#updateSubscription != null) {\n      return;\n    }\n    // The order in which `__attach` and `__makeNative` are called is not\n    // deterministic, and we only want to do this when both have occurred.\n    if (!this.#attached || !this.__isNative) {\n      return;\n    }\n    const nativeTag = this.__getNativeTag();\n    NativeAnimatedAPI.startListeningToAnimatedNodeValue(nativeTag);\n    const subscription                    =\n      NativeAnimatedHelper.nativeEventEmitter.addListener(\n        'onAnimatedValueUpdate',\n        data => {\n          if (data.tag === nativeTag) {\n            this.__onAnimatedValueUpdateReceived(data.value);\n          }\n        },\n      );\n\n    this.#updateSubscription = {\n      remove: () => {\n        // Only this function assigns to `this.#updateSubscription`.\n        if (this.#updateSubscription == null) {\n          return;\n        }\n        this.#updateSubscription = null;\n        subscription.remove();\n        NativeAnimatedAPI.stopListeningToAnimatedNodeValue(nativeTag);\n      },\n    };\n  }\n\n  /**\n   * Directly set the value.  This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setvalue\n   */\n  setValue(value        )       {\n    if (this._animation) {\n      this._animation.stop();\n      this._animation = null;\n    }\n    this._updateValue(\n      value,\n      !this.__isNative /* don't perform a flush for natively driven values */,\n    );\n    if (this.__isNative) {\n      _executeAsAnimatedBatch(this.__getNativeTag().toString(), () =>\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value),\n      );\n    }\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether via\n   * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#setoffset\n   */\n  setOffset(offset        )       {\n    this._offset = offset;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n    }\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n   */\n  flattenOffset()       {\n    this._value += this._offset;\n    this._offset = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#extractoffset\n   */\n  extractOffset()       {\n    this._offset += this._value;\n    this._value = 0;\n    if (this.__isNative) {\n      NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n    }\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#stopanimation\n   */\n  stopAnimation(callback                           )       {\n    this.stopTracking();\n    this._animation && this._animation.stop();\n    this._animation = null;\n    if (callback) {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n      } else {\n        callback(this.__getValue());\n      }\n    }\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#resetanimation\n   */\n  resetAnimation(callback                           )       {\n    this.stopAnimation(callback);\n    this._value = this._startingValue;\n    if (this.__isNative) {\n      NativeAnimatedAPI.setAnimatedNodeValue(\n        this.__getNativeTag(),\n        this._startingValue,\n      );\n    }\n  }\n\n  __onAnimatedValueUpdateReceived(value        )       {\n    this._updateValue(value, false /*flush*/);\n  }\n\n  /**\n   * Interpolates the value before updating the property, e.g. mapping 0-1 to\n   * 0-10.\n   */\n  interpolate                          (\n    config                                  ,\n  )                                 {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  /**\n   * Typically only used internally, but could be used by a custom Animation\n   * class.\n   *\n   * See https://reactnative.dev/docs/animatedvalue#animate\n   */\n  animate(animation           , callback              )       {\n    let handle = null;\n    if (animation.__isInteraction) {\n      handle = InteractionManager.createInteractionHandle();\n    }\n    const previousAnimation = this._animation;\n    this._animation && this._animation.stop();\n    this._animation = animation;\n    animation.start(\n      this._value,\n      value => {\n        // Natively driven animations will never call into that callback, therefore we can always\n        // pass flush = true to allow the updated value to propagate to native with setNativeProps\n        this._updateValue(value, true /* flush */);\n      },\n      result => {\n        this._animation = null;\n        if (handle !== null) {\n          InteractionManager.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      },\n      previousAnimation,\n      this,\n    );\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  stopTracking()       {\n    this._tracking && this._tracking.__detach();\n    this._tracking = null;\n  }\n\n  /**\n   * Typically only used internally.\n   */\n  track(tracking                  )       {\n    this.stopTracking();\n    this._tracking = tracking;\n    // Make sure that the tracking animation starts executing\n    this._tracking && this._tracking.update();\n  }\n\n  _updateValue(value        , flush         )       {\n    if (value === undefined) {\n      throw new Error('AnimatedValue: Attempting to set value to undefined');\n    }\n\n    this._value = value;\n    if (flush) {\n      flushValue(this);\n    }\n    this.__callListeners(this.__getValue());\n  }\n\n  __getNativeConfig()         {\n    return {\n      type: 'value',\n      value: this._value,\n      offset: this._offset,\n      debugID: this.__getDebugID(),\n    };\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                              \n                                                       \n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'invariant';\n\n                                               \n                        \n                           \n   \n                                                                             \n\nlet _uniqueId = 1;\n\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy\n */\nexport default class AnimatedValueXY extends AnimatedWithChildren {\n  x               ;\n  y               ;\n  _listeners   \n                    \n                \n                \n         \n      \n       \n   ;\n\n  constructor(\n    valueIn     \n                                 \n                                 \n         \n     ,\n    config                         ,\n  ) {\n    super(config);\n    const value      = valueIn || {x: 0, y: 0}; // @flowfixme: shouldn't need `: any`\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(\n        value.x instanceof AnimatedValue && value.y instanceof AnimatedValue,\n        'AnimatedValueXY must be initialized with an object of numbers or ' +\n          'AnimatedValues.',\n      );\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setvalue\n   */\n  setValue(value                             ) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setoffset\n   */\n  setOffset(offset                             ) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#flattenoffset\n   */\n  flattenOffset()       {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#extractoffset\n   */\n  extractOffset()       {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue()   \n              \n              \n       \n    {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue(),\n    };\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#resetanimation\n   */\n  resetAnimation(\n    callback                                               ,\n  )       {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#stopanimation\n   */\n  stopAnimation(callback                                               )       {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#addlistener\n   */\n  addListener(callback                         )         {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}     ) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removelistener\n   */\n  removeListener(id        )       {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removealllisteners\n   */\n  removeAllListeners()       {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#getlayout\n   */\n  getLayout()                                      {\n    return {\n      left: this.x,\n      top: this.y,\n    };\n  }\n\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#gettranslatetransform\n   */\n  getTranslateTransform()                                             {\n    return [{translateX: this.x}, {translateY: this.y}];\n  }\n\n  __attach()       {\n    this.x.__addChild(this);\n    this.y.__addChild(this);\n    super.__attach();\n  }\n\n  __detach()       {\n    this.x.__removeChild(this);\n    this.y.__removeChild(this);\n    super.__detach();\n  }\n\n  __makeNative(platformConfig                 ) {\n    this.x.__makeNative(platformConfig);\n    this.y.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                              \n\nimport NativeAnimatedHelper from '../../../src/private/animated/NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\n\nconst {connectAnimatedNodes, disconnectAnimatedNodes} =\n  NativeAnimatedHelper.API;\n\nexport default class AnimatedWithChildren extends AnimatedNode {\n  _children                      = [];\n\n  __makeNative(platformConfig                 ) {\n    if (!this.__isNative) {\n      this.__isNative = true;\n\n      const children = this._children;\n      let length = children.length;\n      if (length > 0) {\n        for (let ii = 0; ii < length; ii++) {\n          const child = children[ii];\n          child.__makeNative(platformConfig);\n          connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n        }\n      }\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __addChild(child              )       {\n    if (this._children.length === 0) {\n      this.__attach();\n    }\n    this._children.push(child);\n    if (this.__isNative) {\n      // Only accept \"native\" animated nodes as children\n      child.__makeNative(this.__getPlatformConfig());\n      connectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n    }\n  }\n\n  __removeChild(child              )       {\n    const index = this._children.indexOf(child);\n    if (index === -1) {\n      console.warn(\"Trying to remove a child that doesn't exist\");\n      return;\n    }\n    if (this.__isNative && child.__isNative) {\n      disconnectAnimatedNodes(this.__getNativeTag(), child.__getNativeTag());\n    }\n    this._children.splice(index, 1);\n    if (this._children.length === 0) {\n      this.__detach();\n    }\n  }\n\n  __getChildren()                               {\n    return this._children;\n  }\n\n  __callListeners(value        )       {\n    super.__callListeners(value);\n    if (!this.__isNative) {\n      const children = this._children;\n      for (let ii = 0, length = children.length; ii < length; ii++) {\n        const child = children[ii];\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        if (child.__getValue) {\n          child.__callListeners(child.__getValue());\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nfunction shouldUseTurboAnimatedModule()          {\n  return Platform.OS === 'ios' && global.RN$Bridgeless === true;\n}\n\nexport default shouldUseTurboAnimatedModule;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                          \n                                                                  \n\nimport NativeAnimatedHelper from '../../src/private/animated/NativeAnimatedHelper';\nimport {useAnimatedPropsMemo} from '../../src/private/animated/useAnimatedPropsMemo';\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {isPublicInstance as isFabricPublicInstance} from '../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils';\nimport useRefEffect from '../Utilities/useRefEffect';\nimport {AnimatedEvent} from './AnimatedEvent';\nimport AnimatedProps from './nodes/AnimatedProps';\nimport {\n  useCallback,\n  useEffect,\n  useInsertionEffect,\n  useLayoutEffect,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react';\n\n                             \n            \n                       \n     \n  \n                                 \n\n                                 \n\nconst useMemoOrAnimatedPropsMemo =\n  ReactNativeFeatureFlags.enableAnimatedPropsMemo()\n    ? useAnimatedPropsMemo\n    : useMemo;\n\nexport default function useAnimatedProps                          (\n  props        ,\n  allowlist                          ,\n)                                                        {\n  const [, scheduleUpdate] = useReducer              (count => count + 1, 0);\n  const onUpdateRef = useRef                       (null);\n  const timerRef = useRef                  (null);\n\n  const allowlistIfEnabled = ReactNativeFeatureFlags.enableAnimatedAllowlist()\n    ? allowlist\n    : null;\n\n  const node = useMemoOrAnimatedPropsMemo(\n    () =>\n      new AnimatedProps(\n        props,\n        () => onUpdateRef.current?.(),\n        allowlistIfEnabled,\n      ),\n    [allowlistIfEnabled, props],\n  );\n\n  const useNativePropsInFabric =\n    ReactNativeFeatureFlags.shouldUseSetNativePropsInFabric();\n\n  const useAnimatedPropsLifecycle =\n    ReactNativeFeatureFlags.useInsertionEffectsForAnimations()\n      ? useAnimatedPropsLifecycle_insertionEffects\n      : useAnimatedPropsLifecycle_layoutEffects;\n\n  useAnimatedPropsLifecycle(node);\n\n  // TODO: This \"effect\" does three things:\n  //\n  //   1) Call `setNativeView`.\n  //   2) Update `onUpdateRef`.\n  //   3) Update listeners for `AnimatedEvent` props.\n  //\n  // Ideally, each of these would be separate \"effects\" so that they are not\n  // unnecessarily re-run when irrelevant dependencies change. For example, we\n  // should be able to hoist all `AnimatedEvent` props and only do #3 if either\n  // the `AnimatedEvent` props change or `instance` changes.\n  //\n  // But there is no way to transparently compose three separate callback refs,\n  // so we just combine them all into one for now.\n  const refEffect = useCallback(\n    (instance           ) => {\n      // NOTE: This may be called more often than necessary (e.g. when `props`\n      // changes), but `setNativeView` already optimizes for that.\n      node.setNativeView(instance);\n\n      // NOTE: When using the JS animation driver, this callback is called on\n      // every animation frame. When using the native driver, this callback is\n      // called when the animation completes.\n      onUpdateRef.current = () => {\n        if (process.env.NODE_ENV === 'test') {\n          // Check 1: this is a test.\n          // call `scheduleUpdate` to bypass use of setNativeProps.\n          return scheduleUpdate();\n        }\n\n        const isFabricNode = isFabricInstance(instance);\n        if (node.__isNative) {\n          // Check 2: this is an animation driven by native.\n          // In native driven animations, this callback is only called once the animation completes.\n          if (isFabricNode) {\n            // Call `scheduleUpdate` to synchronise Fiber and Shadow tree.\n            // Must not be called in Paper.\n            scheduleUpdate();\n          }\n          return;\n        }\n\n        if (\n          typeof instance !== 'object' ||\n          typeof instance?.setNativeProps !== 'function'\n        ) {\n          // Check 3: the instance does not support setNativeProps. Call `scheduleUpdate`.\n          return scheduleUpdate();\n        }\n\n        if (!isFabricNode) {\n          // Check 4: this is a paper instance, call setNativeProps.\n          // $FlowIgnore[not-a-function] - Assume it's still a function.\n          // $FlowFixMe[incompatible-use]\n          return instance.setNativeProps(node.__getAnimatedValue());\n        }\n\n        if (!useNativePropsInFabric) {\n          // Check 5: setNativeProps are disabled.\n          return scheduleUpdate();\n        }\n\n        // This is a Fabric instance and setNativeProps is supported.\n\n        // $FlowIgnore[not-a-function] - Assume it's still a function.\n        // $FlowFixMe[incompatible-use]\n        instance.setNativeProps(node.__getAnimatedValue());\n\n        // Keeping state of Fiber tree and Shadow tree in sync.\n        //\n        // This is done by calling `scheduleUpdate` which will trigger a commit.\n        // However, React commit is not fast enough to drive animations.\n        // This is where setNativeProps comes in handy but the state between\n        // Fiber tree and Shadow tree needs to be kept in sync.\n        // The goal is to call `scheduleUpdate` as little as possible to maintain\n        // performance but frequently enough to keep state in sync.\n        // Debounce is set to 48ms, which is 3 * the duration of a frame.\n        // 3 frames was the highest value where flickering state was not observed.\n        if (timerRef.current != null) {\n          clearTimeout(timerRef.current);\n        }\n        timerRef.current = setTimeout(() => {\n          timerRef.current = null;\n          scheduleUpdate();\n        }, 48);\n      };\n\n      const target = getEventTarget(instance);\n      const events = [];\n\n      for (const propName in props) {\n        // $FlowFixMe[invalid-computed-prop]\n        const propValue = props[propName];\n        if (propValue instanceof AnimatedEvent && propValue.__isNative) {\n          propValue.__attach(target, propName);\n          events.push([propName, propValue]);\n        }\n      }\n\n      return () => {\n        onUpdateRef.current = null;\n\n        for (const [propName, propValue] of events) {\n          propValue.__detach(target, propName);\n        }\n      };\n    },\n    [node, useNativePropsInFabric, props],\n  );\n  const callbackRef = useRefEffect           (refEffect);\n\n  return [reduceAnimatedProps        (node, props), callbackRef];\n}\n\nfunction reduceAnimatedProps        (\n  node               ,\n  props        ,\n)                       {\n  // Force `collapsable` to be false so that the native view is not flattened.\n  // Flattened views cannot be accurately referenced by the native driver.\n  return {\n    ...(ReactNativeFeatureFlags.enableAnimatedPropsMemo()\n      ? node.__getValueWithStaticProps(props)\n      : node.__getValue()),\n    collapsable: false,\n  };\n}\n\n/**\n * Manages the lifecycle of the supplied `AnimatedProps` by invoking `__attach`\n * and `__detach`. However, this is more complicated because `AnimatedProps`\n * uses reference counting to determine when to recursively detach its children\n * nodes. So in order to optimize this, we avoid detaching until the next attach\n * unless we are unmounting.\n */\nfunction useAnimatedPropsLifecycle_layoutEffects(node               )       {\n  const prevNodeRef = useRef                (null);\n  const isUnmountingRef = useRef         (false);\n\n  useEffect(() => {\n    // It is ok for multiple components to call `flushQueue` because it noops\n    // if the queue is empty. When multiple animated components are mounted at\n    // the same time. Only first component flushes the queue and the others will noop.\n    NativeAnimatedHelper.API.flushQueue();\n    let drivenAnimationEndedListener                     = null;\n    if (node.__isNative) {\n      drivenAnimationEndedListener =\n        NativeAnimatedHelper.nativeEventEmitter.addListener(\n          'onUserDrivenAnimationEnded',\n          data => {\n            node.update();\n          },\n        );\n    }\n\n    return () => {\n      drivenAnimationEndedListener?.remove();\n    };\n  });\n\n  useLayoutEffect(() => {\n    isUnmountingRef.current = false;\n    return () => {\n      isUnmountingRef.current = true;\n    };\n  }, []);\n\n  useLayoutEffect(() => {\n    node.__attach();\n    if (prevNodeRef.current != null) {\n      const prevNode = prevNodeRef.current;\n      // TODO: Stop restoring default values (unless `reset` is called).\n      prevNode.__restoreDefaultValues();\n      prevNode.__detach();\n      prevNodeRef.current = null;\n    }\n    return () => {\n      if (isUnmountingRef.current) {\n        // NOTE: Do not restore default values on unmount, see D18197735.\n        node.__detach();\n      } else {\n        prevNodeRef.current = node;\n      }\n    };\n  }, [node]);\n}\n\n/**\n * Manages the lifecycle of the supplied `AnimatedProps` by invoking `__attach`\n * and `__detach`. However, this is more complicated because `AnimatedProps`\n * uses reference counting to determine when to recursively detach its children\n * nodes. So in order to optimize this, we avoid detaching until the next attach\n * unless we are unmounting.\n */\nfunction useAnimatedPropsLifecycle_insertionEffects(node               )       {\n  const prevNodeRef = useRef                (null);\n  const isUnmountingRef = useRef         (false);\n\n  useEffect(() => {\n    // It is ok for multiple components to call `flushQueue` because it noops\n    // if the queue is empty. When multiple animated components are mounted at\n    // the same time. Only first component flushes the queue and the others will noop.\n    NativeAnimatedHelper.API.flushQueue();\n    let drivenAnimationEndedListener                     = null;\n    if (node.__isNative) {\n      drivenAnimationEndedListener =\n        NativeAnimatedHelper.nativeEventEmitter.addListener(\n          'onUserDrivenAnimationEnded',\n          data => {\n            node.update();\n          },\n        );\n    }\n\n    return () => {\n      drivenAnimationEndedListener?.remove();\n    };\n  });\n\n  useInsertionEffect(() => {\n    isUnmountingRef.current = false;\n    return () => {\n      isUnmountingRef.current = true;\n    };\n  }, []);\n\n  useInsertionEffect(() => {\n    node.__attach();\n    if (prevNodeRef.current != null) {\n      const prevNode = prevNodeRef.current;\n      // TODO: Stop restoring default values (unless `reset` is called).\n      prevNode.__restoreDefaultValues();\n      prevNode.__detach();\n      prevNodeRef.current = null;\n    }\n    return () => {\n      if (isUnmountingRef.current) {\n        // NOTE: Do not restore default values on unmount, see D18197735.\n        node.__detach();\n      } else {\n        prevNodeRef.current = node;\n      }\n    };\n  }, [node]);\n}\n\nfunction getEventTarget           (instance           )            {\n  return typeof instance === 'object' &&\n    typeof instance?.getScrollableNode === 'function'\n    ? // $FlowFixMe[incompatible-use] - Legacy instance assumptions.\n      instance.getScrollableNode()\n    : instance;\n}\n\n// $FlowFixMe[unclear-type] - Legacy instance assumptions.\nfunction isFabricInstance(instance     )          {\n  return (\n    isFabricPublicInstance(instance) ||\n    // Some components have a setNativeProps function but aren't a host component\n    // such as lists like FlatList and SectionList. These should also use\n    // forceUpdate in Fabric since setNativeProps doesn't exist on the underlying\n    // host component. This crazy hack is essentially special casing those lists and\n    // ScrollView itself to use forceUpdate in Fabric.\n    // If these components end up using forwardRef then these hacks can go away\n    // as instance would actually be the underlying host component and the above check\n    // would be sufficient.\n    isFabricPublicInstance(instance?.getNativeScrollRef?.()) ||\n    isFabricPublicInstance(\n      instance?.getScrollResponder?.()?.getNativeScrollRef?.(),\n    )\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                         \n\nimport NativeEventEmitter from '../../EventEmitter/NativeEventEmitter';\nimport LayoutAnimation from '../../LayoutAnimation/LayoutAnimation';\nimport dismissKeyboard from '../../Utilities/dismissKeyboard';\nimport Platform from '../../Utilities/Platform';\nimport NativeKeyboardObserver from './NativeKeyboardObserver';\n\n                                                                \n\n                                 \n            \n                   \n             \n            \n               \n\n                                          \n                  \n                  \n                \n                 \n    \n\n                                                                    \n\n                           \n                   \n                              \n                                  \n   \n\n                                               \n                       \n              \n                     \n    \n\n                                           \n                       \n                                    \n                              \n    \n\n                                 \n                                    \n                                   \n                                    \n                                   \n                                           \n                                          \n  \n\n/**\n * `Keyboard` module to control keyboard events.\n *\n * ### Usage\n *\n * The Keyboard module allows you to listen for native events and react to them, as\n * well as make changes to the keyboard, like dismissing it.\n *\n *```\n * import React, { Component } from 'react';\n * import { Keyboard, TextInput } from 'react-native';\n *\n * class Example extends Component {\n *   componentWillMount () {\n *     this.keyboardDidShowListener = Keyboard.addListener('keyboardDidShow', this._keyboardDidShow);\n *     this.keyboardDidHideListener = Keyboard.addListener('keyboardDidHide', this._keyboardDidHide);\n *   }\n *\n *   componentWillUnmount () {\n *     this.keyboardDidShowListener.remove();\n *     this.keyboardDidHideListener.remove();\n *   }\n *\n *   _keyboardDidShow () {\n *     alert('Keyboard Shown');\n *   }\n *\n *   _keyboardDidHide () {\n *     alert('Keyboard Hidden');\n *   }\n *\n *   render() {\n *     return (\n *       <TextInput\n *         onSubmitEditing={Keyboard.dismiss}\n *       />\n *     );\n *   }\n * }\n *```\n */\n\nclass Keyboard {\n  _currentlyShowing                ;\n\n  _emitter                                               =\n    new NativeEventEmitter(\n      // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n      // If you want to use the native module on other platforms, please remove this condition and test its behavior\n      Platform.OS !== 'ios' ? null : NativeKeyboardObserver,\n    );\n\n  constructor() {\n    this.addListener('keyboardDidShow', ev => {\n      this._currentlyShowing = ev;\n    });\n    this.addListener('keyboardDidHide', _ev => {\n      this._currentlyShowing = null;\n    });\n  }\n\n  /**\n   * The `addListener` function connects a JavaScript function to an identified native\n   * keyboard notification event.\n   *\n   * This function then returns the reference to the listener.\n   *\n   * @param {string} eventName The `nativeEvent` is the string that identifies the event you're listening for.  This\n   *can be any of the following:\n   *\n   * - `keyboardWillShow`\n   * - `keyboardDidShow`\n   * - `keyboardWillHide`\n   * - `keyboardDidHide`\n   * - `keyboardWillChangeFrame`\n   * - `keyboardDidChangeFrame`\n   *\n   * Android versions prior to API 30 rely on observing layout changes when\n   * `android:windowSoftInputMode` is set to `adjustResize` or `adjustPan`.\n   *\n   * `keyboardWillShow` as well as `keyboardWillHide` are not available on Android since there is\n   * no native corresponding event.\n   *\n   * @param {function} callback function to be called when the event fires.\n   */\n  addListener                                    (\n    eventType   ,\n    listener                                                         ,\n    context        ,\n  )                    {\n    return this._emitter.addListener(eventType, listener);\n  }\n\n  /**\n   * Removes all listeners for a specific event type.\n   *\n   * @param {string} eventType The native event string listeners are watching which will be removed.\n   */\n  removeAllListeners                                    (eventType    )       {\n    this._emitter.removeAllListeners(eventType);\n  }\n\n  /**\n   * Dismisses the active keyboard and removes focus.\n   */\n  dismiss()       {\n    dismissKeyboard();\n  }\n\n  /**\n   * Whether the keyboard is last known to be visible.\n   */\n  isVisible()          {\n    return !!this._currentlyShowing;\n  }\n\n  /**\n   * Return the metrics of the soft-keyboard if visible.\n   */\n  metrics()                   {\n    return this._currentlyShowing?.endCoordinates;\n  }\n\n  /**\n   * Useful for syncing TextInput (or other keyboard accessory view) size of\n   * position changes with keyboard movements.\n   */\n  scheduleLayoutAnimation(event               )       {\n    const {duration, easing} = event;\n    if (duration != null && duration !== 0) {\n      LayoutAnimation.configureNext({\n        duration: duration,\n        update: {\n          duration: duration,\n          type: (easing != null && LayoutAnimation.Types[easing]) || 'keyboard',\n        },\n      });\n    }\n  }\n}\n\nmodule.exports = (new Keyboard()          );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                            \n                                                     \n\nimport AndroidSwipeRefreshLayoutNativeComponent, {\n  Commands as AndroidSwipeRefreshLayoutCommands,\n} from './AndroidSwipeRefreshLayoutNativeComponent';\nimport PullToRefreshViewNativeComponent, {\n  Commands as PullToRefreshCommands,\n} from './PullToRefreshViewNativeComponent';\n\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\n\n                            \n     \n                                        \n     \n                          \n     \n                 \n     \n                           \n     \n                                                     \n     \n                  \n    \n\n                                \n     \n                                                          \n     \n                     \n     \n                                                                               \n     \n                                       \n     \n                                                   \n     \n                                        \n     \n                                   \n     \n                                \n    \n\n                                              \n               \n              \n                  \n\n     \n                                            \n     \n                                          \n\n     \n                                                             \n     \n                      \n\n     \n                             \n     \n                               \n    \n\n/**\n * This component is used inside a ScrollView or ListView to add pull to refresh\n * functionality. When the ScrollView is at `scrollY: 0`, swiping down\n * triggers an `onRefresh` event.\n *\n * ### Usage example\n *\n * ``` js\n * class RefreshableList extends Component {\n *   constructor(props) {\n *     super(props);\n *     this.state = {\n *       refreshing: false,\n *     };\n *   }\n *\n *   _onRefresh() {\n *     this.setState({refreshing: true});\n *     fetchData().then(() => {\n *       this.setState({refreshing: false});\n *     });\n *   }\n *\n *   render() {\n *     return (\n *       <ListView\n *         refreshControl={\n *           <RefreshControl\n *             refreshing={this.state.refreshing}\n *             onRefresh={this._onRefresh.bind(this)}\n *           />\n *         }\n *         ...\n *       >\n *       ...\n *       </ListView>\n *     );\n *   }\n *   ...\n * }\n * ```\n *\n * __Note:__ `refreshing` is a controlled prop, this is why it needs to be set to true\n * in the `onRefresh` function otherwise the refresh indicator will stop immediately.\n */\nclass RefreshControl extends React.Component                      {\n  _nativeRef                    \n                                             \n                                                      \n   ;\n  _lastNativeRefreshing = false;\n\n  componentDidMount() {\n    this._lastNativeRefreshing = this.props.refreshing;\n  }\n\n  componentDidUpdate(prevProps                     ) {\n    // RefreshControl is a controlled component so if the native refreshing\n    // value doesn't match the current js refreshing prop update it to\n    // the js value.\n    if (this.props.refreshing !== prevProps.refreshing) {\n      this._lastNativeRefreshing = this.props.refreshing;\n    } else if (\n      this.props.refreshing !== this._lastNativeRefreshing &&\n      this._nativeRef\n    ) {\n      if (Platform.OS === 'android') {\n        AndroidSwipeRefreshLayoutCommands.setNativeRefreshing(\n          this._nativeRef,\n          this.props.refreshing,\n        );\n      } else {\n        PullToRefreshCommands.setNativeRefreshing(\n          this._nativeRef,\n          this.props.refreshing,\n        );\n      }\n      this._lastNativeRefreshing = this.props.refreshing;\n    }\n  }\n\n  render()             {\n    if (Platform.OS === 'ios') {\n      const {enabled, colors, progressBackgroundColor, size, ...props} =\n        this.props;\n      return (\n        <PullToRefreshViewNativeComponent\n          {...props}\n          ref={this._setNativeRef}\n          onRefresh={this._onRefresh}\n        />\n      );\n    } else {\n      const {tintColor, titleColor, title, ...props} = this.props;\n      return (\n        <AndroidSwipeRefreshLayoutNativeComponent\n          {...props}\n          ref={this._setNativeRef}\n          onRefresh={this._onRefresh}\n        />\n      );\n    }\n  }\n\n  _onRefresh = () => {\n    this._lastNativeRefreshing = true;\n\n    // $FlowFixMe[unused-promise]\n    this.props.onRefresh && this.props.onRefresh();\n\n    // The native component will start refreshing so force an update to\n    // make sure it stays in sync with the js component.\n    this.forceUpdate();\n  };\n\n  _setNativeRef = (\n    ref                    \n                                               \n                                                        \n     ,\n  ) => {\n    this._nativeRef = ref;\n  };\n}\n\nmodule.exports = RefreshControl;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                        \n                                                                        \n                                                              \n                                                               \n                                                            \n             \n              \n             \n              \n                                    \n                                                                         \n                                                                         \n                                       \n                                                     \n                                                                                   \n\nimport {\n  HScrollContentViewNativeComponent,\n  HScrollViewNativeComponent,\n} from '../../../src/private/components/HScrollViewNativeComponents';\nimport {\n  VScrollContentViewNativeComponent,\n  VScrollViewNativeComponent,\n} from '../../../src/private/components/VScrollViewNativeComponents';\nimport AnimatedImplementation from '../../Animated/AnimatedImplementation';\nimport FrameRateLogger from '../../Interaction/FrameRateLogger';\nimport {findNodeHandle} from '../../ReactNative/RendererProxy';\nimport UIManager from '../../ReactNative/UIManager';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport splitLayoutProps from '../../StyleSheet/splitLayoutProps';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Dimensions from '../../Utilities/Dimensions';\nimport dismissKeyboard from '../../Utilities/dismissKeyboard';\nimport Platform from '../../Utilities/Platform';\nimport Keyboard from '../Keyboard/Keyboard';\nimport TextInputState from '../TextInput/TextInputState';\nimport processDecelerationRate from './processDecelerationRate';\nimport Commands from './ScrollViewCommands';\nimport ScrollViewContext, {HORIZONTAL, VERTICAL} from './ScrollViewContext';\nimport ScrollViewStickyHeader from './ScrollViewStickyHeader';\nimport invariant from 'invariant';\nimport memoize from 'memoize-one';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\n\n/*\n * iOS scroll event timing nuances:\n * ===============================\n *\n *\n * Scrolling without bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... physical touch starts ...\n * 2. `onTouchStartCapture`   (when you press down to stop the scroll)\n * 3. `onTouchStart`          (same, but bubble phase)\n * 4. `onResponderRelease`    (when lifting up - you could pause forever before * lifting)\n * 5. `onMomentumScrollEnd`\n *\n *\n * Scrolling with bouncing, if you touch down:\n * -------------------------------\n *\n * 1. `onMomentumScrollBegin` (when animation begins after letting up)\n *    ... bounce begins ...\n *    ... some time elapses ...\n *    ... physical touch during bounce ...\n * 2. `onMomentumScrollEnd`   (Makes no sense why this occurs first during bounce)\n * 3. `onTouchStartCapture`   (immediately after `onMomentumScrollEnd`)\n * 4. `onTouchStart`          (same, but bubble phase)\n * 5. `onTouchEnd`            (You could hold the touch start for a long time)\n * 6. `onMomentumScrollBegin` (When releasing the view starts bouncing back)\n *\n * So when we receive an `onTouchStart`, how can we tell if we are touching\n * *during* an animation (which then causes the animation to stop)? The only way\n * to tell is if the `touchStart` occurred immediately after the\n * `onMomentumScrollEnd`.\n *\n * This is abstracted out for you, so you can just call this.scrollResponderIsAnimating() if\n * necessary\n *\n * `ScrollView` also includes logic for blurring a currently focused input\n * if one is focused while scrolling. This is a natural place\n * to put this logic since it can support not dismissing the keyboard while\n * scrolling, unless a recognized \"tap\"-like gesture has occurred.\n *\n * The public lifecycle API includes events for keyboard interaction, responder\n * interaction, and scrolling (among others). The keyboard callbacks\n * `onKeyboardWill/Did/*` are *global* events, but are invoked on scroll\n * responder's props so that you can guarantee that the scroll responder's\n * internal state has been updated accordingly (and deterministically) by\n * the time the props callbacks are invoke. Otherwise, you would always wonder\n * if the scroll responder is currently in a state where it recognizes new\n * keyboard positions etc. If coordinating scrolling with keyboard movement,\n * *always* use these hooks instead of listening to your own global keyboard\n * events.\n *\n * Public keyboard lifecycle API: (props callbacks)\n *\n * Standard Keyboard Appearance Sequence:\n *\n *   this.props.onKeyboardWillShow\n *   this.props.onKeyboardDidShow\n *\n * `onScrollResponderKeyboardDismissed` will be invoked if an appropriate\n * tap inside the scroll responder's scrollable region was responsible\n * for the dismissal of the keyboard. There are other reasons why the\n * keyboard could be dismissed.\n *\n *   this.props.onScrollResponderKeyboardDismissed\n *\n * Standard Keyboard Hide Sequence:\n *\n *   this.props.onKeyboardWillHide\n *   this.props.onKeyboardDidHide\n */\n\n// Public methods for ScrollView\n                                                      \n                                                                      \n                                                                    \n                                                                  \n                                                                \n                                                                      \n                                                  \n                                                        \n                                                                            \n                                                                            \n                                                             \n               \n                                                  \n    \n    \n\n                                                              \n                                                              \n\n                                            \n                  \n                                 \n    \n\n                                                \n\n                            \n     \n                                                                       \n                                                                \n                                                 \n                  \n     \n                                              \n     \n                                                                                   \n                                                                                           \n                  \n     \n                                               \n     \n                                                                          \n                                                                      \n                  \n     \n                                                       \n     \n                                                                        \n                                                                              \n                  \n     \n                                 \n     \n                                                                      \n                                                                            \n                                                                       \n                                                                   \n                  \n     \n                     \n     \n                                                                                  \n                                                                                      \n                                                                                               \n                                                                                                   \n     \n                                           \n     \n                                                                              \n                                                                            \n                \n                  \n     \n                         \n     \n                                                                            \n                                                                            \n                                                                \n                  \n     \n                                    \n     \n                                                                          \n                                                                            \n                                                                \n                  \n     \n                                  \n     \n                                                                          \n                                                                        \n                                                                          \n                    \n                  \n     \n                           \n     \n                                        \n    \n                                                    \n                                                                                             \n                                                                                            \n    \n                  \n     \n                                                    \n     \n                                                                              \n                                                           \n                  \n     \n                                    \n     \n                                                                            \n                               \n                  \n     \n                                     \n     \n                                                              \n                  \n     \n                             \n     \n                                                              \n                  \n     \n                             \n     \n                                                                           \n                               \n                  \n     \n                                 \n     \n                                                                            \n                                                                         \n                                                    \n                  \n     \n                                          \n     \n                                                                           \n                                              \n                  \n     \n                                     \n     \n                                                                             \n                               \n                  \n     \n                          \n     \n                                                                                   \n                  \n     \n                                               \n     \n                                                    \n                               \n     \n                                            \n     \n                                                                            \n                  \n     \n                      \n     \n                                                                            \n                                                                           \n                                            \n                  \n     \n                                     \n                 \n                      \n             \n              \n    \n    \n\n                                \n     \n                                                        \n                                                    \n                      \n     \n                                 \n     \n                                                                                    \n                                                                                           \n                                                                                     \n                                            \n                      \n     \n                             \n     \n                                                                       \n                                                                              \n                                                                      \n                                     \n                      \n     \n                          \n     \n                                                       \n    \n                     \n    \n                                                             \n                                                                             \n                                                                  \n                                                                \n    \n                      \n     \n                                                  \n     \n                                                                            \n                                \n    \n                      \n     \n                                 \n     \n                                               \n    \n                                                                             \n                                                  \n                                                 \n    \n                            \n    \n                      \n     \n                             \n    \n\n                                           \n                                                                               \n                                \n  \n\n                                \n               \n              \n                  \n\n     \n                                                                            \n                                           \n    \n        \n             \n                                                                   \n                    \n       \n        \n                                       \n                          \n                            \n        \n        \n        \n     \n                                         \n     \n                                                     \n                                         \n     \n                             \n     \n                                                                              \n                                                                            \n                                                                    \n                                                                                                \n     \n                                     \n     \n                                                                        \n                                                                           \n                                                                              \n                                                 \n                                                     \n    \n                                                                 \n                                              \n     \n                                           \n\n     \n                                                                                          \n    \n                                                                        \n                                                               \n                                                            \n    \n                \n    \n                            \n     \n                                                          \n\n     \n                                                                             \n                                                                   \n     \n                        \n     \n                                                                           \n                                                                \n     \n                                 \n     \n                                                                          \n    \n                     \n    \n                                                                   \n                                                                   \n    \n               \n    \n                                                                                            \n                                                                          \n                                                                                       \n     \n                                   \n                   \n                                                   \n     \n                                                                  \n    \n                                                                                             \n                                                                                         \n                                                                                              \n                                                                    \n                                                                                             \n                                                  \n                                                 \n                                                 \n     \n                                                                               \n     \n                                                                                              \n                                                                                               \n                                                                                              \n                                                                                                 \n                                                                                                \n                                       \n    \n                                                                                                 \n                                                                                                  \n                                                                                                  \n                                                                                               \n                                  \n    \n                                                                                          \n                                                                                             \n                                                                                  \n    \n                                                                                            \n                                                                                              \n                                         \n    \n     \n                                                \n                               \n                                       \n      \n     \n                                                                                                     \n     \n                                                        \n     \n                                                                                                   \n     \n                                                      \n\n     \n                                                   \n     \n                                           \n     \n                                                         \n     \n                                                    \n     \n                                                                            \n                        \n     \n                                                  \n     \n                                                                   \n    \n                                                                                   \n                                    \n    \n                                                                              \n                                   \n     \n                                                                              \n                                                     \n                                                     \n                                                      \n                                                      \n     \n                                                                            \n                                                                            \n                    \n     \n                           \n     \n                                                                   \n                               \n    \n                                                                     \n     \n                           \n     \n                                                                               \n                                                                               \n                                                                      \n                                                  \n     \n                                \n     \n                                                  \n                               \n     \n                                          \n     \n                                                                                \n                      \n     \n                                        \n     \n                                                                           \n                                                           \n                                                                              \n                                                                          \n                              \n     \n                                                \n     \n                                                                  \n                                                                                                                \n                                                                                             \n                                                                            \n     \n                                                    \n     \n                                                                                 \n                                        \n    \n                                                                                               \n                                                     \n                                                                                   \n     \n                                                  \n     \n                                                                          \n                                                                       \n                                                                      \n                                                                      \n    \n                                                      \n     \n                           \n     \n                                                                     \n                                                                     \n                                                                      \n                                                \n    \n                                                                            \n     \n                                          \n     \n                                                                       \n                                                                               \n                                                                            \n                                      \n                               \n     \n                         \n     \n                                                                 \n                                                                             \n                                                                          \n                                     \n                               \n     \n                       \n     \n                                                                              \n                                                                              \n                                                                               \n          \n     \n                                   \n     \n                                                                \n                                                                          \n                                         \n    \n                                                    \n     \n                                                                              \n                 \n                                                      \n                        \n     \n                                                                           \n                                          \n     \n                                                    \n     \n                                                                           \n                                                                           \n                                 \n     \n                                                            \n    \n\n               \n                        \n   \n\nconst IS_ANIMATING_TOUCH_START_THRESHOLD_MS = 16;\n\n                                                     \n                                    \n    \n\n/**\n * Component that wraps platform ScrollView while providing\n * integration with touch locking \"responder\" system.\n *\n * Keep in mind that ScrollViews must have a bounded height in order to work,\n * since they contain unbounded-height children into a bounded container (via\n * a scroll interaction). In order to bound the height of a ScrollView, either\n * set the height of the view directly (discouraged) or make sure all parent\n * views have bounded height. Forgetting to transfer `{flex: 1}` down the\n * view stack can lead to errors here, which the element inspector makes\n * easy to debug.\n *\n * Doesn't yet support other contained responders from blocking this scroll\n * view from becoming the responder.\n *\n *\n * `<ScrollView>` vs [`<FlatList>`](https://reactnative.dev/docs/flatlist) - which one to use?\n *\n * `ScrollView` simply renders all its react child components at once. That\n * makes it very easy to understand and use.\n *\n * On the other hand, this has a performance downside. Imagine you have a very\n * long list of items you want to display, maybe several screens worth of\n * content. Creating JS components and native views for everything all at once,\n * much of which may not even be shown, will contribute to slow rendering and\n * increased memory usage.\n *\n * This is where `FlatList` comes into play. `FlatList` renders items lazily,\n * just when they are about to appear, and removes items that scroll way off\n * screen to save memory and processing time.\n *\n * `FlatList` is also handy if you want to render separators between your items,\n * multiple columns, infinite scroll loading, or any number of other features it\n * supports out of the box.\n */\nclass ScrollView extends React.Component               {\n  static Context                           = ScrollViewContext;\n\n  constructor(props       ) {\n    super(props);\n\n    this._scrollAnimatedValue = new AnimatedImplementation.Value(\n      this.props.contentOffset?.y ?? 0,\n    );\n    this._scrollAnimatedValue.setOffset(this.props.contentInset?.top ?? 0);\n  }\n\n  _scrollAnimatedValue                              ;\n  _scrollAnimatedValueAttachment                             = null;\n  _stickyHeaderRefs                                                           =\n    new Map();\n  _headerLayoutYs                      = new Map();\n\n  _keyboardMetrics                   = null;\n  _additionalScrollOffset         = 0;\n  _isTouching          = false;\n  _lastMomentumScrollBeginTime         = 0;\n  _lastMomentumScrollEndTime         = 0;\n\n  // Reset to false every time becomes responder. This is used to:\n  // - Determine if the scroll view has been scrolled and therefore should\n  // refuse to give up its responder lock.\n  // - Determine if releasing should dismiss the keyboard when we are in\n  // tap-to-dismiss mode (this.props.keyboardShouldPersistTaps !== 'always').\n  _observedScrollSinceBecomingResponder          = false;\n  _becameResponderWhileAnimating          = false;\n  _preventNegativeScrollOffset           = null;\n\n  _animated           = null;\n\n  _subscriptionKeyboardWillShow                     = null;\n  _subscriptionKeyboardWillHide                     = null;\n  _subscriptionKeyboardDidShow                     = null;\n  _subscriptionKeyboardDidHide                     = null;\n\n  state        = {\n    layoutHeight: null,\n  };\n\n  componentDidMount() {\n    if (typeof this.props.keyboardShouldPersistTaps === 'boolean') {\n      console.warn(\n        `'keyboardShouldPersistTaps={${\n          this.props.keyboardShouldPersistTaps === true ? 'true' : 'false'\n        }}' is deprecated. ` +\n          `Use 'keyboardShouldPersistTaps=\"${\n            this.props.keyboardShouldPersistTaps ? 'always' : 'never'\n          }\"' instead`,\n      );\n    }\n\n    this._keyboardMetrics = Keyboard.metrics();\n    this._additionalScrollOffset = 0;\n\n    this._subscriptionKeyboardWillShow = Keyboard.addListener(\n      'keyboardWillShow',\n      this.scrollResponderKeyboardWillShow,\n    );\n    this._subscriptionKeyboardWillHide = Keyboard.addListener(\n      'keyboardWillHide',\n      this.scrollResponderKeyboardWillHide,\n    );\n    this._subscriptionKeyboardDidShow = Keyboard.addListener(\n      'keyboardDidShow',\n      this.scrollResponderKeyboardDidShow,\n    );\n    this._subscriptionKeyboardDidHide = Keyboard.addListener(\n      'keyboardDidHide',\n      this.scrollResponderKeyboardDidHide,\n    );\n\n    this._updateAnimatedNodeAttachment();\n  }\n\n  componentDidUpdate(prevProps       ) {\n    const prevContentInsetTop = prevProps.contentInset\n      ? prevProps.contentInset.top\n      : 0;\n    const newContentInsetTop = this.props.contentInset\n      ? this.props.contentInset.top\n      : 0;\n    if (prevContentInsetTop !== newContentInsetTop) {\n      this._scrollAnimatedValue.setOffset(newContentInsetTop || 0);\n    }\n\n    this._updateAnimatedNodeAttachment();\n  }\n\n  componentWillUnmount() {\n    if (this._subscriptionKeyboardWillShow != null) {\n      this._subscriptionKeyboardWillShow.remove();\n    }\n    if (this._subscriptionKeyboardWillHide != null) {\n      this._subscriptionKeyboardWillHide.remove();\n    }\n    if (this._subscriptionKeyboardDidShow != null) {\n      this._subscriptionKeyboardDidShow.remove();\n    }\n    if (this._subscriptionKeyboardDidHide != null) {\n      this._subscriptionKeyboardDidHide.remove();\n    }\n\n    if (this._scrollAnimatedValueAttachment) {\n      this._scrollAnimatedValueAttachment.detach();\n    }\n  }\n\n  /**\n   * Returns a reference to the underlying scroll responder, which supports\n   * operations like `scrollTo`. All ScrollView-like components should\n   * implement this method so that they can be composed while providing access\n   * to the underlying scroll responder's methods.\n   */\n  getScrollResponder                            = () => {\n    // $FlowFixMe[unclear-type]\n    return ((this     )                     );\n  };\n\n  getScrollableNode                = () => {\n    return findNodeHandle(this.getNativeScrollRef());\n  };\n\n  getInnerViewNode                = () => {\n    return findNodeHandle(this._innerView.nativeInstance);\n  };\n\n  getInnerViewRef                                 = () => {\n    return this._innerView.nativeInstance;\n  };\n\n  getNativeScrollRef                            = () => {\n    return this._scrollView.nativeInstance;\n  };\n\n  /**\n   * Scrolls to a given x, y offset, either immediately or with a smooth animation.\n   *\n   * Example:\n   *\n   * `scrollTo({x: 0, y: 0, animated: true})`\n   *\n   * Note: The weird function signature is due to the fact that, for historical reasons,\n   * the function also accepts separate arguments as an alternative to the options object.\n   * This is deprecated due to ambiguity (y before x), and SHOULD NOT BE USED.\n   */\n  scrollTo   \n             \n         \n                     \n                     \n                             \n             \n         \n               \n                         \n                                 \n            = (\n    options  \n         \n                     \n                     \n                             \n             \n         \n              ,\n    deprecatedX         ,\n    deprecatedAnimated          ,\n  ) => {\n    let x, y, animated;\n    if (typeof options === 'number') {\n      console.warn(\n        '`scrollTo(y, x, animated)` is deprecated. Use `scrollTo({x: 5, y: 5, ' +\n          'animated: true})` instead.',\n      );\n      y = options;\n      x = deprecatedX;\n      animated = deprecatedAnimated;\n    } else if (options) {\n      y = options.y;\n      x = options.x;\n      animated = options.animated;\n    }\n    const component = this.getNativeScrollRef();\n    if (component == null) {\n      return;\n    }\n    Commands.scrollTo(component, x || 0, y || 0, animated !== false);\n  };\n\n  /**\n   * If this is a vertical ScrollView scrolls to the bottom.\n   * If this is a horizontal ScrollView scrolls to the right.\n   *\n   * Use `scrollToEnd({animated: true})` for smooth animated scrolling,\n   * `scrollToEnd({animated: false})` for immediate scrolling.\n   * If no options are passed, `animated` defaults to true.\n   */\n  scrollToEnd                                                 = (\n    options                             ,\n  ) => {\n    // Default to true\n    const animated = (options && options.animated) !== false;\n    const component = this.getNativeScrollRef();\n    if (component == null) {\n      return;\n    }\n    Commands.scrollToEnd(component, animated);\n  };\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators             = () => {\n    const component = this.getNativeScrollRef();\n    if (component == null) {\n      return;\n    }\n    Commands.flashScrollIndicators(component);\n  };\n\n  /**\n   * This method should be used as the callback to onFocus in a TextInputs'\n   * parent view. Note that any module using this mixin needs to return\n   * the parent view's ref in getScrollViewRef() in order to use this method.\n   * @param {number} nodeHandle The TextInput node handle\n   * @param {number} additionalOffset The scroll view's bottom \"contentInset\".\n   *        Default is 0.\n   * @param {bool} preventNegativeScrolling Whether to allow pulling the content\n   *        down to make it meet the keyboard's top. Default is false.\n   */\n  scrollResponderScrollNativeHandleToKeyboard   \n                                      \n                              \n                                          \n            = (\n    nodeHandle                       ,\n    additionalOffset         ,\n    preventNegativeScrollOffset          ,\n  ) => {\n    this._additionalScrollOffset = additionalOffset || 0;\n    this._preventNegativeScrollOffset = !!preventNegativeScrollOffset;\n\n    if (this._innerView.nativeInstance == null) {\n      return;\n    }\n\n    if (typeof nodeHandle === 'number') {\n      UIManager.measureLayout(\n        nodeHandle,\n        nullthrows(findNodeHandle(this)),\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        this._textInputFocusError,\n        this._inputMeasureAndScrollToKeyboard,\n      );\n    } else {\n      nodeHandle.measureLayout(\n        this._innerView.nativeInstance,\n        this._inputMeasureAndScrollToKeyboard,\n        // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n        this._textInputFocusError,\n      );\n    }\n  };\n\n  /**\n   * A helper function to zoom to a specific rect in the scrollview. The argument has the shape\n   * {x: number; y: number; width: number; height: number; animated: boolean = true}\n   *\n   * @platform ios\n   */\n  scrollResponderZoomTo   \n            \n                \n                \n                    \n                     \n                         \n       \n                                                                                \n            = (\n    rect    \n                \n                \n                    \n                     \n                         \n      ,\n    animated          , // deprecated, put this inside the rect argument instead\n  ) => {\n    invariant(Platform.OS === 'ios', 'zoomToRect is not implemented');\n    if ('animated' in rect) {\n      this._animated = rect.animated;\n      delete rect.animated;\n    } else if (typeof animated !== 'undefined') {\n      console.warn(\n        '`scrollResponderZoomTo` `animated` argument is deprecated. Use `options.animated` instead',\n      );\n    }\n\n    const component = this.getNativeScrollRef();\n    if (component == null) {\n      return;\n    }\n    Commands.zoomToRect(component, rect, animated !== false);\n  };\n\n  _textInputFocusError() {\n    console.warn('Error measuring text field.');\n  }\n\n  /**\n   * The calculations performed here assume the scroll view takes up the entire\n   * screen - even if has some content inset. We then measure the offsets of the\n   * keyboard, and compensate both for the scroll view's \"contentInset\".\n   *\n   * @param {number} left Position of input w.r.t. table view.\n   * @param {number} top Position of input w.r.t. table view.\n   * @param {number} width Width of the text input.\n   * @param {number} height Height of the text input.\n   */\n  _inputMeasureAndScrollToKeyboard   \n                 \n                \n                  \n                   \n            = (left        , top        , width        , height        ) => {\n    let keyboardScreenY = Dimensions.get('window').height;\n\n    const scrollTextInputIntoVisibleRect = () => {\n      if (this._keyboardMetrics != null) {\n        keyboardScreenY = this._keyboardMetrics.screenY;\n      }\n      let scrollOffsetY =\n        top - keyboardScreenY + height + this._additionalScrollOffset;\n\n      // By default, this can scroll with negative offset, pulling the content\n      // down so that the target component's bottom meets the keyboard's top.\n      // If requested otherwise, cap the offset at 0 minimum to avoid content\n      // shifting down.\n      if (this._preventNegativeScrollOffset === true) {\n        scrollOffsetY = Math.max(0, scrollOffsetY);\n      }\n      this.scrollTo({x: 0, y: scrollOffsetY, animated: true});\n\n      this._additionalScrollOffset = 0;\n      this._preventNegativeScrollOffset = false;\n    };\n\n    if (this._keyboardMetrics == null) {\n      // `_keyboardMetrics` is set inside `scrollResponderKeyboardWillShow` which\n      // is not guaranteed to be called before `_inputMeasureAndScrollToKeyboard` but native has already scheduled it.\n      // In case it was not called before `_inputMeasureAndScrollToKeyboard`, we postpone scrolling to\n      // text input.\n      setTimeout(() => {\n        scrollTextInputIntoVisibleRect();\n      }, 0);\n    } else {\n      scrollTextInputIntoVisibleRect();\n    }\n  };\n\n  _getKeyForIndex(index            , childArray            )             {\n    const child = childArray[index];\n    return child && child.key;\n  }\n\n  _updateAnimatedNodeAttachment() {\n    if (this._scrollAnimatedValueAttachment) {\n      this._scrollAnimatedValueAttachment.detach();\n    }\n    if (\n      this.props.stickyHeaderIndices &&\n      this.props.stickyHeaderIndices.length > 0\n    ) {\n      this._scrollAnimatedValueAttachment =\n        AnimatedImplementation.attachNativeEvent(\n          this.getNativeScrollRef(),\n          'onScroll',\n          [{nativeEvent: {contentOffset: {y: this._scrollAnimatedValue}}}],\n        );\n    }\n  }\n\n  _setStickyHeaderRef(\n    key        ,\n    ref                                              ,\n  ) {\n    if (ref) {\n      this._stickyHeaderRefs.set(key, ref);\n    } else {\n      this._stickyHeaderRefs.delete(key);\n    }\n  }\n\n  _onStickyHeaderLayout(index            , event            , key            ) {\n    const {stickyHeaderIndices} = this.props;\n    if (!stickyHeaderIndices) {\n      return;\n    }\n    const childArray = React.Children.toArray            (this.props.children);\n    if (key !== this._getKeyForIndex(index, childArray)) {\n      // ignore stale layout update\n      return;\n    }\n\n    const layoutY = event.nativeEvent.layout.y;\n    this._headerLayoutYs.set(key, layoutY);\n\n    const indexOfIndex = stickyHeaderIndices.indexOf(index);\n    const previousHeaderIndex = stickyHeaderIndices[indexOfIndex - 1];\n    if (previousHeaderIndex != null) {\n      const previousHeader = this._stickyHeaderRefs.get(\n        this._getKeyForIndex(previousHeaderIndex, childArray),\n      );\n      previousHeader &&\n        previousHeader.setNextHeaderY &&\n        previousHeader.setNextHeaderY(layoutY);\n    }\n  }\n\n  _handleScroll = (e             ) => {\n    this._observedScrollSinceBecomingResponder = true;\n    this.props.onScroll && this.props.onScroll(e);\n  };\n\n  _handleLayout = (e             ) => {\n    if (this.props.invertStickyHeaders === true) {\n      this.setState({layoutHeight: e.nativeEvent.layout.height});\n    }\n    if (this.props.onLayout) {\n      this.props.onLayout(e);\n    }\n  };\n\n  _handleContentOnLayout = (e             ) => {\n    const {width, height} = e.nativeEvent.layout;\n    this.props.onContentSizeChange &&\n      this.props.onContentSizeChange(width, height);\n  };\n\n  _innerView                                                     =\n    createRefForwarder(\n      (instance                   )                    => instance,\n    );\n\n  _scrollView                                                              =\n    createRefForwarder(nativeInstance => {\n      // This is a hack. Ideally we would forwardRef  to the underlying\n      // host component. However, since ScrollView has it's own methods that can be\n      // called as well, if we used the standard forwardRef then these\n      // methods wouldn't be accessible and thus be a breaking change.\n      //\n      // Therefore we edit ref to include ScrollView's public methods so that\n      // they are callable from the ref.\n\n      // $FlowFixMe[prop-missing] - Known issue with appending custom methods.\n      const publicInstance                           = Object.assign(\n        nativeInstance,\n        {\n          getScrollResponder: this.getScrollResponder,\n          getScrollableNode: this.getScrollableNode,\n          getInnerViewNode: this.getInnerViewNode,\n          getInnerViewRef: this.getInnerViewRef,\n          getNativeScrollRef: this.getNativeScrollRef,\n          scrollTo: this.scrollTo,\n          scrollToEnd: this.scrollToEnd,\n          flashScrollIndicators: this.flashScrollIndicators,\n          scrollResponderZoomTo: this.scrollResponderZoomTo,\n          scrollResponderScrollNativeHandleToKeyboard:\n            this.scrollResponderScrollNativeHandleToKeyboard,\n        },\n      );\n\n      return publicInstance;\n    });\n\n  /**\n   * Warning, this may be called several times for a single keyboard opening.\n   * It's best to store the information in this method and then take any action\n   * at a later point (either in `keyboardDidShow` or other).\n   *\n   * Here's the order that events occur in:\n   * - focus\n   * - willShow {startCoordinates, endCoordinates} several times\n   * - didShow several times\n   * - blur\n   * - willHide {startCoordinates, endCoordinates} several times\n   * - didHide several times\n   *\n   * The `ScrollResponder` module callbacks for each of these events.\n   * Even though any user could have easily listened to keyboard events\n   * themselves, using these `props` callbacks ensures that ordering of events\n   * is consistent - and not dependent on the order that the keyboard events are\n   * subscribed to. This matters when telling the scroll view to scroll to where\n   * the keyboard is headed - the scroll responder better have been notified of\n   * the keyboard destination before being instructed to scroll to where the\n   * keyboard will be. Stick to the `ScrollResponder` callbacks, and everything\n   * will work.\n   *\n   * WARNING: These callbacks will fire even if a keyboard is displayed in a\n   * different navigation pane. Filter out the events to determine if they are\n   * relevant to you. (For example, only if you receive these callbacks after\n   * you had explicitly focused a node etc).\n   */\n\n  scrollResponderKeyboardWillShow                             = (\n    e               ,\n  ) => {\n    this._keyboardMetrics = e.endCoordinates;\n    this.props.onKeyboardWillShow && this.props.onKeyboardWillShow(e);\n  };\n\n  scrollResponderKeyboardWillHide                             = (\n    e               ,\n  ) => {\n    this._keyboardMetrics = null;\n    this.props.onKeyboardWillHide && this.props.onKeyboardWillHide(e);\n  };\n\n  scrollResponderKeyboardDidShow                             = (\n    e               ,\n  ) => {\n    this._keyboardMetrics = e.endCoordinates;\n    this.props.onKeyboardDidShow && this.props.onKeyboardDidShow(e);\n  };\n\n  scrollResponderKeyboardDidHide                             = (\n    e               ,\n  ) => {\n    this._keyboardMetrics = null;\n    this.props.onKeyboardDidHide && this.props.onKeyboardDidHide(e);\n  };\n\n  /**\n   * Invoke this from an `onMomentumScrollBegin` event.\n   */\n  _handleMomentumScrollBegin                           = (e             ) => {\n    this._lastMomentumScrollBeginTime = global.performance.now();\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  /**\n   * Invoke this from an `onMomentumScrollEnd` event.\n   */\n  _handleMomentumScrollEnd                           = (e             ) => {\n    FrameRateLogger.endScroll();\n    this._lastMomentumScrollEndTime = global.performance.now();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  /**\n   * Unfortunately, `onScrollBeginDrag` also fires when *stopping* the scroll\n   * animation, and there's not an easy way to distinguish a drag vs. stopping\n   * momentum.\n   *\n   * Invoke this from an `onScrollBeginDrag` event.\n   */\n  _handleScrollBeginDrag                           = (e             ) => {\n    FrameRateLogger.beginScroll(); // TODO: track all scrolls after implementing onScrollEndAnimation\n\n    if (\n      Platform.OS === 'android' &&\n      this.props.keyboardDismissMode === 'on-drag'\n    ) {\n      dismissKeyboard();\n    }\n\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  /**\n   * Invoke this from an `onScrollEndDrag` event.\n   */\n  _handleScrollEndDrag                           = (e             ) => {\n    const {velocity} = e.nativeEvent;\n    // - If we are animating, then this is a \"drag\" that is stopping the scrollview and momentum end\n    //   will fire.\n    // - If velocity is non-zero, then the interaction will stop when momentum scroll ends or\n    //   another drag starts and ends.\n    // - If we don't get velocity, better to stop the interaction twice than not stop it.\n    if (\n      !this._isAnimating() &&\n      (!velocity || (velocity.x === 0 && velocity.y === 0))\n    ) {\n      FrameRateLogger.endScroll();\n    }\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  /**\n   * A helper function for this class that lets us quickly determine if the\n   * view is currently animating. This is particularly useful to know when\n   * a touch has just started or ended.\n   */\n  _isAnimating                = () => {\n    const now = global.performance.now();\n    const timeSinceLastMomentumScrollEnd =\n      now - this._lastMomentumScrollEndTime;\n    const isAnimating =\n      timeSinceLastMomentumScrollEnd < IS_ANIMATING_TOUCH_START_THRESHOLD_MS ||\n      this._lastMomentumScrollEndTime < this._lastMomentumScrollBeginTime;\n    return isAnimating;\n  };\n\n  /**\n   * Invoke this from an `onResponderGrant` event.\n   */\n  _handleResponderGrant                          = (e            ) => {\n    this._observedScrollSinceBecomingResponder = false;\n    this.props.onResponderGrant && this.props.onResponderGrant(e);\n    this._becameResponderWhileAnimating = this._isAnimating();\n  };\n\n  /**\n   * Invoke this from an `onResponderReject` event.\n   *\n   * Some other element is not yielding its role as responder. Normally, we'd\n   * just disable the `UIScrollView`, but a touch has already began on it, the\n   * `UIScrollView` will not accept being disabled after that. The easiest\n   * solution for now is to accept the limitation of disallowing this\n   * altogether. To improve this, find a way to disable the `UIScrollView` after\n   * a touch has already started.\n   */\n  _handleResponderReject             = () => {};\n\n  /**\n   * Invoke this from an `onResponderRelease` event.\n   */\n  _handleResponderRelease                          = (e            ) => {\n    this._isTouching = e.nativeEvent.touches.length !== 0;\n    this.props.onResponderRelease && this.props.onResponderRelease(e);\n\n    if (typeof e.target === 'number') {\n      if (__DEV__) {\n        console.error(\n          'Did not expect event target to be a number. Should have been a native component',\n        );\n      }\n\n      return;\n    }\n\n    // By default scroll views will unfocus a textField\n    // if another touch occurs outside of it\n    const currentlyFocusedTextInput = TextInputState.currentlyFocusedInput();\n    if (\n      currentlyFocusedTextInput != null &&\n      this.props.keyboardShouldPersistTaps !== true &&\n      this.props.keyboardShouldPersistTaps !== 'always' &&\n      this._keyboardIsDismissible() &&\n      e.target !== currentlyFocusedTextInput &&\n      !this._observedScrollSinceBecomingResponder &&\n      !this._becameResponderWhileAnimating\n    ) {\n      TextInputState.blurTextInput(currentlyFocusedTextInput);\n    }\n  };\n\n  /**\n   * We will allow the scroll view to give up its lock iff it acquired the lock\n   * during an animation. This is a very useful default that happens to satisfy\n   * many common user experiences.\n   *\n   * - Stop a scroll on the left edge, then turn that into an outer view's\n   *   backswipe.\n   * - Stop a scroll mid-bounce at the top, continue pulling to have the outer\n   *   view dismiss.\n   * - However, without catching the scroll view mid-bounce (while it is\n   *   motionless), if you drag far enough for the scroll view to become\n   *   responder (and therefore drag the scroll view a bit), any backswipe\n   *   navigation of a swipe gesture higher in the view hierarchy, should be\n   *   rejected.\n   */\n  _handleResponderTerminationRequest                = () => {\n    return !this._observedScrollSinceBecomingResponder;\n  };\n\n  /**\n   * Invoke this from an `onScroll` event.\n   */\n  _handleScrollShouldSetResponder                = () => {\n    // Allow any event touch pass through if the default pan responder is disabled\n    if (this.props.disableScrollViewPanResponder === true) {\n      return false;\n    }\n    return this._isTouching;\n  };\n\n  /**\n   * Merely touch starting is not sufficient for a scroll view to become the\n   * responder. Being the \"responder\" means that the very next touch move/end\n   * event will result in an action/movement.\n   *\n   * Invoke this from an `onStartShouldSetResponder` event.\n   *\n   * `onStartShouldSetResponder` is used when the next move/end will trigger\n   * some UI movement/action, but when you want to yield priority to views\n   * nested inside of the view.\n   *\n   * There may be some cases where scroll views actually should return `true`\n   * from `onStartShouldSetResponder`: Any time we are detecting a standard tap\n   * that gives priority to nested views.\n   *\n   * - If a single tap on the scroll view triggers an action such as\n   *   recentering a map style view yet wants to give priority to interaction\n   *   views inside (such as dropped pins or labels), then we would return true\n   *   from this method when there is a single touch.\n   *\n   * - Similar to the previous case, if a two finger \"tap\" should trigger a\n   *   zoom, we would check the `touches` count, and if `>= 2`, we would return\n   *   true.\n   *\n   */\n  _handleStartShouldSetResponder                             = (\n    e            ,\n  ) => {\n    // Allow any event touch pass through if the default pan responder is disabled\n    if (this.props.disableScrollViewPanResponder === true) {\n      return false;\n    }\n\n    const currentlyFocusedInput = TextInputState.currentlyFocusedInput();\n    if (\n      this.props.keyboardShouldPersistTaps === 'handled' &&\n      this._keyboardIsDismissible() &&\n      e.target !== currentlyFocusedInput\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * There are times when the scroll view wants to become the responder\n   * (meaning respond to the next immediate `touchStart/touchEnd`), in a way\n   * that *doesn't* give priority to nested views (hence the capture phase):\n   *\n   * - Currently animating.\n   * - Tapping anywhere that is not a text input, while the keyboard is\n   *   up (which should dismiss the keyboard).\n   *\n   * Invoke this from an `onStartShouldSetResponderCapture` event.\n   */\n  _handleStartShouldSetResponderCapture                             = (\n    e            ,\n  ) => {\n    // The scroll view should receive taps instead of its descendants if:\n    // * it is already animating/decelerating\n    if (this._isAnimating()) {\n      return true;\n    }\n\n    // Allow any event touch pass through if the default pan responder is disabled\n    if (this.props.disableScrollViewPanResponder === true) {\n      return false;\n    }\n\n    // * the keyboard is up, keyboardShouldPersistTaps is 'never' (the default),\n    // and a new touch starts with a non-textinput target (in which case the\n    // first tap should be sent to the scroll view and dismiss the keyboard,\n    // then the second tap goes to the actual interior view)\n    const {keyboardShouldPersistTaps} = this.props;\n    const keyboardNeverPersistTaps =\n      !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n\n    if (typeof e.target === 'number') {\n      if (__DEV__) {\n        console.error(\n          'Did not expect event target to be a number. Should have been a native component',\n        );\n      }\n\n      return false;\n    }\n\n    // Let presses through if the soft keyboard is detached from the viewport\n    if (this._softKeyboardIsDetached()) {\n      return false;\n    }\n\n    if (\n      keyboardNeverPersistTaps &&\n      this._keyboardIsDismissible() &&\n      e.target != null &&\n      // $FlowFixMe[incompatible-call]\n      !TextInputState.isTextInput(e.target)\n    ) {\n      return true;\n    }\n\n    return false;\n  };\n\n  /**\n   * Do we consider there to be a dismissible soft-keyboard open?\n   */\n  _keyboardIsDismissible                = () => {\n    const currentlyFocusedInput = TextInputState.currentlyFocusedInput();\n\n    // We cannot dismiss the keyboard without an input to blur, even if a soft\n    // keyboard is open (e.g. when keyboard is open due to a native component\n    // not participating in TextInputState). It's also possible that the\n    // currently focused input isn't a TextInput (such as by calling ref.focus\n    // on a non-TextInput).\n    const hasFocusedTextInput =\n      currentlyFocusedInput != null &&\n      TextInputState.isTextInput(currentlyFocusedInput);\n\n    // Even if an input is focused, we may not have a keyboard to dismiss. E.g\n    // when using a physical keyboard. Ensure we have an event for an opened\n    // keyboard.\n    const softKeyboardMayBeOpen =\n      this._keyboardMetrics != null || this._keyboardEventsAreUnreliable();\n\n    return hasFocusedTextInput && softKeyboardMayBeOpen;\n  };\n\n  /**\n   * Whether an open soft keyboard is present which does not overlap the\n   * viewport. E.g. for a VR soft-keyboard which is detached from the app\n   * viewport.\n   */\n  _softKeyboardIsDetached                = () => {\n    return this._keyboardMetrics != null && this._keyboardMetrics.height === 0;\n  };\n\n  _keyboardEventsAreUnreliable                = () => {\n    // Android versions prior to API 30 rely on observing layout changes when\n    // `android:windowSoftInputMode` is set to `adjustResize` or `adjustPan`.\n    return Platform.OS === 'android' && Platform.Version < 30;\n  };\n\n  /**\n   * Invoke this from an `onTouchEnd` event.\n   *\n   * @param {PressEvent} e Event.\n   */\n  _handleTouchEnd                          = (e            ) => {\n    const nativeEvent = e.nativeEvent;\n    this._isTouching = nativeEvent.touches.length !== 0;\n\n    const {keyboardShouldPersistTaps} = this.props;\n    const keyboardNeverPersistsTaps =\n      !keyboardShouldPersistTaps || keyboardShouldPersistTaps === 'never';\n\n    // Dismiss the keyboard now if we didn't become responder in capture phase\n    // to eat presses, but still want to dismiss on interaction.\n    // Don't do anything if the target of the touch event is the current input.\n    const currentlyFocusedTextInput = TextInputState.currentlyFocusedInput();\n    if (\n      currentlyFocusedTextInput != null &&\n      e.target !== currentlyFocusedTextInput &&\n      this._softKeyboardIsDetached() &&\n      this._keyboardIsDismissible() &&\n      keyboardNeverPersistsTaps\n    ) {\n      TextInputState.blurTextInput(currentlyFocusedTextInput);\n    }\n\n    this.props.onTouchEnd && this.props.onTouchEnd(e);\n  };\n\n  /**\n   * Invoke this from an `onTouchCancel` event.\n   *\n   * @param {PressEvent} e Event.\n   */\n  _handleTouchCancel                          = (e            ) => {\n    this._isTouching = false;\n    this.props.onTouchCancel && this.props.onTouchCancel(e);\n  };\n\n  /**\n   * Invoke this from an `onTouchStart` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {PressEvent} e Touch Start event.\n   */\n  _handleTouchStart                          = (e            ) => {\n    this._isTouching = true;\n    this.props.onTouchStart && this.props.onTouchStart(e);\n  };\n\n  /**\n   * Invoke this from an `onTouchMove` event.\n   *\n   * Since we know that the `SimpleEventPlugin` occurs later in the plugin\n   * order, after `ResponderEventPlugin`, we can detect that we were *not*\n   * permitted to be the responder (presumably because a contained view became\n   * responder). The `onResponderReject` won't fire in that case - it only\n   * fires when a *current* responder rejects our request.\n   *\n   * @param {PressEvent} e Touch Start event.\n   */\n  _handleTouchMove                          = (e            ) => {\n    this.props.onTouchMove && this.props.onTouchMove(e);\n  };\n\n  render()             {\n    const horizontal = this.props.horizontal === true;\n\n    const NativeScrollView = horizontal\n      ? HScrollViewNativeComponent\n      : VScrollViewNativeComponent;\n\n    const NativeScrollContentView = horizontal\n      ? HScrollContentViewNativeComponent\n      : VScrollContentViewNativeComponent;\n\n    const contentContainerStyle = [\n      horizontal && styles.contentContainerHorizontal,\n      this.props.contentContainerStyle,\n    ];\n    if (__DEV__ && this.props.style !== undefined) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const style = flattenStyle(this.props.style);\n      const childLayoutProps = ['alignItems', 'justifyContent'].filter(\n        // $FlowFixMe[incompatible-use]\n        prop => style && style[prop] !== undefined,\n      );\n      invariant(\n        childLayoutProps.length === 0,\n        'ScrollView child layout (' +\n          JSON.stringify(childLayoutProps) +\n          ') must be applied through the contentContainerStyle prop.',\n      );\n    }\n\n    const contentSizeChangeProps =\n      this.props.onContentSizeChange == null\n        ? null\n        : {\n            onLayout: this._handleContentOnLayout,\n          };\n\n    const {stickyHeaderIndices} = this.props;\n    let children = this.props.children;\n    /**\n     * This function can cause unnecessary remount when nested in conditionals as it causes remap of children keys.\n     * https://react.dev/reference/react/Children#children-toarray-caveats\n     */\n    children = React.Children.toArray            (children);\n\n    if (stickyHeaderIndices != null && stickyHeaderIndices.length > 0) {\n      children = children.map((child, index) => {\n        const indexOfIndex = child ? stickyHeaderIndices.indexOf(index) : -1;\n        if (indexOfIndex > -1) {\n          const key = child.key;\n          const nextIndex = stickyHeaderIndices[indexOfIndex + 1];\n          const StickyHeaderComponent =\n            this.props.StickyHeaderComponent || ScrollViewStickyHeader;\n          return (\n            <StickyHeaderComponent\n              key={key}\n              ref={ref => this._setStickyHeaderRef(key, ref)}\n              nextHeaderLayoutY={this._headerLayoutYs.get(\n                this._getKeyForIndex(nextIndex, children),\n              )}\n              onLayout={event => this._onStickyHeaderLayout(index, event, key)}\n              scrollAnimatedValue={this._scrollAnimatedValue}\n              inverted={this.props.invertStickyHeaders}\n              hiddenOnScroll={this.props.stickyHeaderHiddenOnScroll}\n              scrollViewHeight={this.state.layoutHeight}>\n              {child}\n            </StickyHeaderComponent>\n          );\n        } else {\n          return child;\n        }\n      });\n    }\n    children = (\n      <ScrollViewContext.Provider value={horizontal ? HORIZONTAL : VERTICAL}>\n        {children}\n      </ScrollViewContext.Provider>\n    );\n\n    const hasStickyHeaders =\n      Array.isArray(stickyHeaderIndices) && stickyHeaderIndices.length > 0;\n\n    // Some ScrollView native component behaviors rely on using the metrics\n    // of mounted views for anchoring. Make sure not to flatten children if\n    // this is the case.\n    const preserveChildren =\n      this.props.maintainVisibleContentPosition != null ||\n      (Platform.OS === 'android' && this.props.snapToAlignment != null);\n\n    const contentContainer = (\n      <NativeScrollContentView\n        {...contentSizeChangeProps}\n        ref={this._innerView.getForwardingRef(this.props.innerViewRef)}\n        style={contentContainerStyle}\n        removeClippedSubviews={\n          // Subview clipping causes issues with sticky headers on Android and\n          // would be hard to fix properly in a performant way.\n          Platform.OS === 'android' && hasStickyHeaders\n            ? false\n            : this.props.removeClippedSubviews\n        }\n        collapsable={false}\n        collapsableChildren={!preserveChildren}>\n        {children}\n      </NativeScrollContentView>\n    );\n\n    const alwaysBounceHorizontal =\n      this.props.alwaysBounceHorizontal !== undefined\n        ? this.props.alwaysBounceHorizontal\n        : this.props.horizontal;\n\n    const alwaysBounceVertical =\n      this.props.alwaysBounceVertical !== undefined\n        ? this.props.alwaysBounceVertical\n        : !this.props.horizontal;\n\n    const baseStyle = horizontal ? styles.baseHorizontal : styles.baseVertical;\n\n    const {experimental_endDraggingSensitivityMultiplier, ...otherProps} =\n      this.props;\n    const props = {\n      ...otherProps,\n      alwaysBounceHorizontal,\n      alwaysBounceVertical,\n      style: StyleSheet.compose(baseStyle, this.props.style),\n      // Override the onContentSizeChange from props, since this event can\n      // bubble up from TextInputs\n      onContentSizeChange: null,\n      onLayout: this._handleLayout,\n      onMomentumScrollBegin: this._handleMomentumScrollBegin,\n      onMomentumScrollEnd: this._handleMomentumScrollEnd,\n      onResponderGrant: this._handleResponderGrant,\n      onResponderReject: this._handleResponderReject,\n      onResponderRelease: this._handleResponderRelease,\n      onResponderTerminationRequest: this._handleResponderTerminationRequest,\n      onScrollBeginDrag: this._handleScrollBeginDrag,\n      onScrollEndDrag: this._handleScrollEndDrag,\n      onScrollShouldSetResponder: this._handleScrollShouldSetResponder,\n      onStartShouldSetResponder: this._handleStartShouldSetResponder,\n      onStartShouldSetResponderCapture:\n        this._handleStartShouldSetResponderCapture,\n      onTouchEnd: this._handleTouchEnd,\n      onTouchMove: this._handleTouchMove,\n      onTouchStart: this._handleTouchStart,\n      onTouchCancel: this._handleTouchCancel,\n      onScroll: this._handleScroll,\n      endDraggingSensitivityMultiplier:\n        experimental_endDraggingSensitivityMultiplier,\n      scrollEventThrottle: hasStickyHeaders\n        ? 1\n        : this.props.scrollEventThrottle,\n      sendMomentumEvents:\n        this.props.onMomentumScrollBegin || this.props.onMomentumScrollEnd\n          ? true\n          : false,\n      // default to true\n      snapToStart: this.props.snapToStart !== false,\n      // default to true\n      snapToEnd: this.props.snapToEnd !== false,\n      // pagingEnabled is overridden by snapToInterval / snapToOffsets\n      pagingEnabled: Platform.select({\n        // on iOS, pagingEnabled must be set to false to have snapToInterval / snapToOffsets work\n        ios:\n          this.props.pagingEnabled === true &&\n          this.props.snapToInterval == null &&\n          this.props.snapToOffsets == null,\n        // on Android, pagingEnabled must be set to true to have snapToInterval / snapToOffsets work\n        android:\n          this.props.pagingEnabled === true ||\n          this.props.snapToInterval != null ||\n          this.props.snapToOffsets != null,\n      }),\n    };\n\n    const {decelerationRate} = this.props;\n    if (decelerationRate != null) {\n      props.decelerationRate = processDecelerationRate(decelerationRate);\n    }\n\n    const refreshControl = this.props.refreshControl;\n    const scrollViewRef = this._scrollView.getForwardingRef(\n      this.props.scrollViewRef,\n    );\n\n    if (refreshControl) {\n      if (Platform.OS === 'ios') {\n        // On iOS the RefreshControl is a child of the ScrollView.\n        return (\n          // $FlowFixMe[incompatible-type] - Flow only knows element refs.\n          <NativeScrollView {...props} ref={scrollViewRef}>\n            {refreshControl}\n            {contentContainer}\n          </NativeScrollView>\n        );\n      } else if (Platform.OS === 'android') {\n        // On Android wrap the ScrollView with a AndroidSwipeRefreshLayout.\n        // Since the ScrollView is wrapped add the style props to the\n        // AndroidSwipeRefreshLayout and use flex: 1 for the ScrollView.\n        // Note: we should split props.style on the inner and outer props\n        // however, the ScrollView still needs the baseStyle to be scrollable\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        // $FlowFixMe[incompatible-call]\n        const {outer, inner} = splitLayoutProps(flattenStyle(props.style));\n        return React.cloneElement(\n          refreshControl,\n          {style: StyleSheet.compose(baseStyle, outer)},\n          <NativeScrollView\n            {...props}\n            style={StyleSheet.compose(baseStyle, inner)}\n            // $FlowFixMe[incompatible-type] - Flow only knows element refs.\n            ref={scrollViewRef}>\n            {contentContainer}\n          </NativeScrollView>,\n        );\n      }\n    }\n    return (\n      // $FlowFixMe[incompatible-type] - Flow only knows element refs.\n      <NativeScrollView {...props} ref={scrollViewRef}>\n        {contentContainer}\n      </NativeScrollView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  baseVertical: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: 'column',\n    overflow: 'scroll',\n  },\n  baseHorizontal: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexDirection: 'row',\n    overflow: 'scroll',\n  },\n  contentContainerHorizontal: {\n    flexDirection: 'row',\n  },\n});\n\n                                                       \n                     \n                                      \n                                        \n                                         \n                                         \n  \n\n/**\n * Helper function that should be replaced with `useCallback` and `useMergeRefs`\n * once `ScrollView` is reimplemented as a functional component.\n */\nfunction createRefForwarder                                  (\n  mutator                                    ,\n)                                                 {\n  const state                                                 = {\n    getForwardingRef: memoize(forwardedRef => {\n      return (nativeInstance                        )       => {\n        const publicInstance =\n          nativeInstance == null ? null : mutator(nativeInstance);\n\n        state.nativeInstance = nativeInstance;\n        state.publicInstance = publicInstance;\n\n        if (forwardedRef != null) {\n          if (typeof forwardedRef === 'function') {\n            forwardedRef(publicInstance);\n          } else {\n            forwardedRef.current = publicInstance;\n          }\n        }\n      };\n    }),\n    nativeInstance: null,\n    publicInstance: null,\n  };\n\n  return state;\n}\n\n// TODO: After upgrading to React 19, remove `forwardRef` from this component.\n// NOTE: This wrapper component is necessary because `ScrollView` is a class\n// component and we need to map `ref` to a differently named prop. This can be\n// removed when `ScrollView` is a functional component.\nconst Wrapper            \n                                                 \n                 \n  = React.forwardRef(function Wrapper(\n  props       ,\n  ref                                            ,\n)             {\n  return ref == null ? (\n    <ScrollView {...props} />\n  ) : (\n    <ScrollView {...props} scrollViewRef={ref} />\n  );\n});\nWrapper.displayName = 'ScrollView';\n// $FlowExpectedError[prop-missing]\nWrapper.Context = ScrollViewContext;\n\nmodule.exports = ((Wrapper            )                  \n                            );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                         \n                                                     \n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport * as React from 'react';\n\n                                                          \n                          \n                           \n                                                             \n            \n              \n                                                             \n              \n              \n                      \n            \n                 \n                                                             \n                      \n            \n                \n                                                             \n            \n                \n                \n                    \n                     \n                         \n       \n                       \n            \n \n\nexport default (codegenNativeCommands                ({\n  supportedCommands: [\n    'flashScrollIndicators',\n    'scrollTo',\n    'scrollToEnd',\n    'zoomToRect',\n  ],\n})                );\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport * as React from 'react';\n\n                                          \n\nconst ScrollViewContext                       = React.createContext(null);\nif (__DEV__) {\n  ScrollViewContext.displayName = 'ScrollViewContext';\n}\nexport default ScrollViewContext;\n\n// $FlowFixMe[incompatible-type] frozen objects are readonly\nexport const HORIZONTAL        = Object.freeze({horizontal: true});\n// $FlowFixMe[incompatible-type] frozen objects are readonly\nexport const VERTICAL        = Object.freeze({horizontal: false});\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                            \n\nimport Animated from '../../Animated/Animated';\nimport {isPublicInstance as isFabricPublicInstance} from '../../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react';\n\n                               \n                                                      \n                             \n                                         \n                                      \n                                                                               \n                \n                     \n                                                                           \n                            \n                     \n                            \n   \n\n                 \n                                            \n                                 \n     \n  \n\nconst ScrollViewStickyHeaderWithForwardedRef            \n                                 \n                 \n  = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {\n  const {\n    inverted,\n    scrollViewHeight,\n    hiddenOnScroll,\n    scrollAnimatedValue,\n    nextHeaderLayoutY: _nextHeaderLayoutY,\n  } = props;\n\n  const [measured, setMeasured] = useState         (false);\n  const [layoutY, setLayoutY] = useState        (0);\n  const [layoutHeight, setLayoutHeight] = useState        (0);\n  const [translateY, setTranslateY] = useState         (null);\n  const [nextHeaderLayoutY, setNextHeaderLayoutY] =\n    useState         (_nextHeaderLayoutY);\n  const [isFabric, setIsFabric] = useState         (false);\n\n  const callbackRef = useCallback((ref                 )       => {\n    if (ref == null) {\n      return;\n    }\n    ref.setNextHeaderY = setNextHeaderLayoutY;\n    setIsFabric(isFabricPublicInstance(ref));\n  }, []);\n  const ref                                                          =\n    // $FlowFixMe[prop-missing] - Instance is mutated to have `setNextHeaderY`.\n    useMergeRefs          (callbackRef, forwardedRef);\n\n  const offset = useMemo(\n    () =>\n      hiddenOnScroll === true\n        ? Animated.diffClamp(\n            scrollAnimatedValue\n              .interpolate({\n                extrapolateLeft: 'clamp',\n                inputRange: [layoutY, layoutY + 1],\n                outputRange: ([0, 1]               ),\n              })\n              .interpolate({\n                inputRange: [0, 1],\n                outputRange: ([0, -1]               ),\n              }),\n            -layoutHeight,\n            0,\n          )\n        : null,\n    [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll],\n  );\n\n  const [animatedTranslateY, setAnimatedTranslateY] = useState               (\n    () => {\n      const inputRange                = [-1, 0];\n      const outputRange                = [0, 0];\n      const initialTranslateY = scrollAnimatedValue.interpolate({\n        inputRange,\n        outputRange,\n      });\n\n      if (offset != null) {\n        return Animated.add(initialTranslateY, offset);\n      }\n      return initialTranslateY;\n    },\n  );\n\n  const haveReceivedInitialZeroTranslateY = useRef         (true);\n  const translateYDebounceTimer = useRef            (null);\n\n  useEffect(() => {\n    if (translateY !== 0 && translateY != null) {\n      haveReceivedInitialZeroTranslateY.current = false;\n    }\n  }, [translateY]);\n\n  // This is called whenever the (Interpolated) Animated Value\n  // updates, which is several times per frame during scrolling.\n  // To ensure that the Fabric ShadowTree has the most recent\n  // translate style of this node, we debounce the value and then\n  // pass it through to the underlying node during render.\n  // This is:\n  // 1. Only an issue in Fabric.\n  // 2. Worse in Android than iOS. In Android, but not iOS, you\n  //    can touch and move your finger slightly and still trigger\n  //    a \"tap\" event. In iOS, moving will cancel the tap in\n  //    both Fabric and non-Fabric. On Android when you move\n  //    your finger, the hit-detection moves from the Android\n  //    platform to JS, so we need the ShadowTree to have knowledge\n  //    of the current position.\n  const animatedValueListener = useCallback(({value}            ) => {\n    const debounceTimeout         = Platform.OS === 'android' ? 15 : 64;\n    // When the AnimatedInterpolation is recreated, it always initializes\n    // to a value of zero and emits a value change of 0 to its listeners.\n    if (value === 0 && !haveReceivedInitialZeroTranslateY.current) {\n      haveReceivedInitialZeroTranslateY.current = true;\n      return;\n    }\n    if (translateYDebounceTimer.current != null) {\n      clearTimeout(translateYDebounceTimer.current);\n    }\n    translateYDebounceTimer.current = setTimeout(\n      () => setTranslateY(value),\n      debounceTimeout,\n    );\n  }, []);\n\n  useEffect(() => {\n    const inputRange                = [-1, 0];\n    const outputRange                = [0, 0];\n\n    if (measured) {\n      if (inverted === true) {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - `stickStartPoint` is the point at which the header will start sticking.\n        //   It is calculated using the ScrollView viewport height so it is a the bottom.\n        // - Headers that are in the initial viewport will never stick, `stickStartPoint`\n        //   will be negative.\n        // - From 0 to `stickStartPoint` no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From `stickStartPoint` to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        if (scrollViewHeight != null) {\n          const stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n          if (stickStartPoint > 0) {\n            inputRange.push(stickStartPoint);\n            outputRange.push(0);\n            inputRange.push(stickStartPoint + 1);\n            outputRange.push(1);\n            // If the next sticky header has not loaded yet (probably windowing) or is the last\n            // we can just keep it sticked forever.\n            const collisionPoint =\n              (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n            if (collisionPoint > stickStartPoint) {\n              inputRange.push(collisionPoint, collisionPoint + 1);\n              outputRange.push(\n                collisionPoint - stickStartPoint,\n                collisionPoint - stickStartPoint,\n              );\n            }\n          }\n        }\n      } else {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - From 0 to the y of the header: no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From header y to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        inputRange.push(layoutY);\n        outputRange.push(0);\n        // If the next sticky header has not loaded yet (probably windowing) or is the last\n        // we can just keep it sticked forever.\n        const collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n        if (collisionPoint >= layoutY) {\n          inputRange.push(collisionPoint, collisionPoint + 1);\n          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);\n        } else {\n          inputRange.push(layoutY + 1);\n          outputRange.push(1);\n        }\n      }\n    }\n\n    let newAnimatedTranslateY                = scrollAnimatedValue.interpolate({\n      inputRange,\n      outputRange,\n    });\n\n    if (offset != null) {\n      newAnimatedTranslateY = Animated.add(newAnimatedTranslateY, offset);\n    }\n\n    // add the event listener\n    let animatedListenerId;\n    if (isFabric) {\n      animatedListenerId = newAnimatedTranslateY.addListener(\n        animatedValueListener,\n      );\n    }\n\n    setAnimatedTranslateY(newAnimatedTranslateY);\n\n    // clean up the event listener and timer\n    return () => {\n      if (animatedListenerId) {\n        newAnimatedTranslateY.removeListener(animatedListenerId);\n      }\n      if (translateYDebounceTimer.current != null) {\n        clearTimeout(translateYDebounceTimer.current);\n      }\n    };\n  }, [\n    nextHeaderLayoutY,\n    measured,\n    layoutHeight,\n    layoutY,\n    scrollViewHeight,\n    scrollAnimatedValue,\n    inverted,\n    offset,\n    animatedValueListener,\n    isFabric,\n  ]);\n\n  const _onLayout = (event             ) => {\n    setLayoutY(event.nativeEvent.layout.y);\n    setLayoutHeight(event.nativeEvent.layout.height);\n    setMeasured(true);\n\n    props.onLayout(event);\n    const child = React.Children.only            (props.children);\n    if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n\n  const child = React.Children.only            (props.children);\n\n  const passthroughAnimatedPropExplicitValues =\n    isFabric && translateY != null\n      ? {\n          style: {transform: [{translateY: translateY}]},\n        }\n      : null;\n\n  return (\n    <Animated.View\n      collapsable={false}\n      nativeID={props.nativeID}\n      onLayout={_onLayout}\n      /* $FlowFixMe[prop-missing] passthroughAnimatedPropExplicitValues isn't properly\n         included in the Animated.View flow type. */\n      ref={ref}\n      style={[\n        child.props.style,\n        styles.header,\n        {transform: [{translateY: animatedTranslateY}]},\n      ]}\n      passthroughAnimatedPropExplicitValues={\n        passthroughAnimatedPropExplicitValues\n      }>\n      {React.cloneElement(child, {\n        style: styles.fill, // We transfer the child style to the wrapper.\n        onLayout: undefined, // we call this manually through our this._onLayout\n      })}\n    </Animated.View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n  },\n  fill: {\n    flex: 1,\n  },\n});\n\nexport default ScrollViewStickyHeaderWithForwardedRef;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport Platform from '../../Utilities/Platform';\n\nfunction processDecelerationRate(\n  decelerationRate                            ,\n)         {\n  if (decelerationRate === 'normal') {\n    return Platform.select({\n      ios: 0.998,\n      android: 0.985,\n    });\n  } else if (decelerationRate === 'fast') {\n    return Platform.select({\n      ios: 0.99,\n      android: 0.9,\n    });\n  }\n  return decelerationRate;\n}\n\nmodule.exports = processDecelerationRate;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\nimport NativeSoundManager from './NativeSoundManager';\n\nconst SoundManager = {\n  playTouchSound: function ()       {\n    if (NativeSoundManager) {\n      NativeSoundManager.playTouchSound();\n    }\n  },\n};\n\nmodule.exports = SoundManager;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                               \n                                                                         \n\nimport Animated from '../../Animated/Animated';\nimport Easing from '../../Animated/Easing';\nimport Pressability, {\n                          \n} from '../../Pressability/Pressability';\nimport {PressabilityDebugView} from '../../Pressability/PressabilityDebug';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport Platform from '../../Utilities/Platform';\nimport * as React from 'react';\n\n                           \n                                 \n                          \n                             \n                          \n                           \n                        \n    \n\n                         \n                                                   \n             \n\n                          \n                         \n\n                                                                     \n    \n\n                         \n                       \n                             \n    \n\n/**\n * A wrapper for making views respond properly to touches.\n * On press down, the opacity of the wrapped view is decreased, dimming it.\n *\n * Opacity is controlled by wrapping the children in an Animated.View, which is\n * added to the view hierarchy.  Be aware that this can affect layout.\n *\n * Example:\n *\n * ```\n * renderButton: function() {\n *   return (\n *     <TouchableOpacity onPress={this._onPressButton}>\n *       <Image\n *         style={styles.button}\n *         source={require('./myButton.png')}\n *       />\n *     </TouchableOpacity>\n *   );\n * },\n * ```\n * ### Example\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react'\n * import {\n *   AppRegistry,\n *   StyleSheet,\n *   TouchableOpacity,\n *   Text,\n *   View,\n * } from 'react-native'\n *\n * class App extends Component {\n *   state = { count: 0 }\n *\n *   onPress = () => {\n *     this.setState(state => ({\n *       count: state.count + 1\n *     }));\n *   };\n *\n *  render() {\n *    return (\n *      <View style={styles.container}>\n *        <TouchableOpacity\n *          style={styles.button}\n *          onPress={this.onPress}>\n *          <Text> Touch Here </Text>\n *        </TouchableOpacity>\n *        <View style={[styles.countContainer]}>\n *          <Text style={[styles.countText]}>\n *             { this.state.count !== 0 ? this.state.count: null}\n *           </Text>\n *         </View>\n *       </View>\n *     )\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'center',\n *     paddingHorizontal: 10\n *   },\n *   button: {\n *     alignItems: 'center',\n *     backgroundColor: '#DDDDDD',\n *     padding: 10\n *   },\n *   countContainer: {\n *     alignItems: 'center',\n *     padding: 10\n *   },\n *   countText: {\n *     color: '#FF00FF'\n *   }\n * })\n *\n * AppRegistry.registerComponent('App', () => App)\n * ```\n *\n */\nclass TouchableOpacity extends React.Component               {\n  state        = {\n    anim: new Animated.Value(this._getChildStyleOpacityWithDefault()),\n    pressability: new Pressability(this._createPressabilityConfig()),\n  };\n\n  _createPressabilityConfig()                     {\n    return {\n      cancelable: !this.props.rejectResponderTermination,\n      disabled:\n        this.props.disabled ??\n        this.props['aria-disabled'] ??\n        this.props.accessibilityState?.disabled,\n      hitSlop: this.props.hitSlop,\n      delayLongPress: this.props.delayLongPress,\n      delayPressIn: this.props.delayPressIn,\n      delayPressOut: this.props.delayPressOut,\n      minPressDuration: 0,\n      pressRectOffset: this.props.pressRetentionOffset,\n      onBlur: event => {\n        if (Platform.isTV) {\n          this._opacityInactive(250);\n        }\n        if (this.props.onBlur != null) {\n          this.props.onBlur(event);\n        }\n      },\n      onFocus: event => {\n        if (Platform.isTV) {\n          this._opacityActive(150);\n        }\n        if (this.props.onFocus != null) {\n          this.props.onFocus(event);\n        }\n      },\n      onLongPress: this.props.onLongPress,\n      onPress: this.props.onPress,\n      onPressIn: event => {\n        this._opacityActive(\n          event.dispatchConfig.registrationName === 'onResponderGrant'\n            ? 0\n            : 150,\n        );\n        if (this.props.onPressIn != null) {\n          this.props.onPressIn(event);\n        }\n      },\n      onPressOut: event => {\n        this._opacityInactive(250);\n        if (this.props.onPressOut != null) {\n          this.props.onPressOut(event);\n        }\n      },\n    };\n  }\n\n  /**\n   * Animate the touchable to a new opacity.\n   */\n  _setOpacityTo(toValue        , duration        )       {\n    Animated.timing(this.state.anim, {\n      toValue,\n      duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: true,\n    }).start();\n  }\n\n  _opacityActive(duration        )       {\n    this._setOpacityTo(this.props.activeOpacity ?? 0.2, duration);\n  }\n\n  _opacityInactive(duration        )       {\n    this._setOpacityTo(this._getChildStyleOpacityWithDefault(), duration);\n  }\n\n  _getChildStyleOpacityWithDefault()         {\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    // $FlowFixMe[prop-missing]\n    const opacity = flattenStyle(this.props.style)?.opacity;\n    return typeof opacity === 'number' ? opacity : 1;\n  }\n\n  render()             {\n    // BACKWARD-COMPATIBILITY: Focus and blur events were never supported before\n    // adopting `Pressability`, so preserve that behavior.\n    const {onBlur, onFocus, ...eventHandlersWithoutBlurAndFocus} =\n      this.state.pressability.getEventHandlers();\n\n    let _accessibilityState = {\n      busy: this.props['aria-busy'] ?? this.props.accessibilityState?.busy,\n      checked:\n        this.props['aria-checked'] ?? this.props.accessibilityState?.checked,\n      disabled:\n        this.props['aria-disabled'] ?? this.props.accessibilityState?.disabled,\n      expanded:\n        this.props['aria-expanded'] ?? this.props.accessibilityState?.expanded,\n      selected:\n        this.props['aria-selected'] ?? this.props.accessibilityState?.selected,\n    };\n\n    _accessibilityState =\n      this.props.disabled != null\n        ? {\n            ..._accessibilityState,\n            disabled: this.props.disabled,\n          }\n        : _accessibilityState;\n\n    const accessibilityValue = {\n      max: this.props['aria-valuemax'] ?? this.props.accessibilityValue?.max,\n      min: this.props['aria-valuemin'] ?? this.props.accessibilityValue?.min,\n      now: this.props['aria-valuenow'] ?? this.props.accessibilityValue?.now,\n      text: this.props['aria-valuetext'] ?? this.props.accessibilityValue?.text,\n    };\n\n    const accessibilityLiveRegion =\n      this.props['aria-live'] === 'off'\n        ? 'none'\n        : this.props['aria-live'] ?? this.props.accessibilityLiveRegion;\n\n    const accessibilityLabel =\n      this.props['aria-label'] ?? this.props.accessibilityLabel;\n    return (\n      <Animated.View\n        accessible={this.props.accessible !== false}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityLanguage={this.props.accessibilityLanguage}\n        accessibilityRole={this.props.accessibilityRole}\n        accessibilityState={_accessibilityState}\n        accessibilityActions={this.props.accessibilityActions}\n        onAccessibilityAction={this.props.onAccessibilityAction}\n        accessibilityValue={accessibilityValue}\n        importantForAccessibility={\n          this.props['aria-hidden'] === true\n            ? 'no-hide-descendants'\n            : this.props.importantForAccessibility\n        }\n        accessibilityViewIsModal={\n          this.props['aria-modal'] ?? this.props.accessibilityViewIsModal\n        }\n        accessibilityLiveRegion={accessibilityLiveRegion}\n        accessibilityElementsHidden={\n          this.props['aria-hidden'] ?? this.props.accessibilityElementsHidden\n        }\n        style={[this.props.style, {opacity: this.state.anim}]}\n        nativeID={this.props.id ?? this.props.nativeID}\n        testID={this.props.testID}\n        onLayout={this.props.onLayout}\n        nextFocusDown={this.props.nextFocusDown}\n        nextFocusForward={this.props.nextFocusForward}\n        nextFocusLeft={this.props.nextFocusLeft}\n        nextFocusRight={this.props.nextFocusRight}\n        nextFocusUp={this.props.nextFocusUp}\n        hasTVPreferredFocus={this.props.hasTVPreferredFocus}\n        hitSlop={this.props.hitSlop}\n        focusable={\n          this.props.focusable !== false &&\n          this.props.onPress !== undefined &&\n          !this.props.disabled\n        }\n        // $FlowFixMe[prop-missing]\n        ref={this.props.hostRef}\n        {...eventHandlersWithoutBlurAndFocus}>\n        {this.props.children}\n        {__DEV__ ? (\n          <PressabilityDebugView color=\"cyan\" hitSlop={this.props.hitSlop} />\n        ) : null}\n      </Animated.View>\n    );\n  }\n\n  componentDidUpdate(prevProps       , prevState       ) {\n    this.state.pressability.configure(this._createPressabilityConfig());\n    if (\n      this.props.disabled !== prevProps.disabled ||\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      // $FlowFixMe[prop-missing]\n      flattenStyle(prevProps.style)?.opacity !==\n        // $FlowFixMe[underconstrained-implicit-instantiation]\n        // $FlowFixMe[prop-missing]\n        flattenStyle(this.props.style)?.opacity\n    ) {\n      this._opacityInactive(250);\n    }\n  }\n\n  componentDidMount()       {\n    this.state.pressability.configure(this._createPressabilityConfig());\n  }\n\n  componentWillUnmount()       {\n    this.state.pressability.reset();\n    this.state.anim.resetAnimation();\n  }\n}\n\nconst Touchable            \n                                                               \n                 \n  = React.forwardRef((props, ref) => (\n  <TouchableOpacity {...props} hostRef={ref} />\n));\n\nTouchable.displayName = 'TouchableOpacity';\n\nmodule.exports = Touchable;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                               \n\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\n                              \n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View            \n                                                                     \n                     \n  = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      tabIndex,\n      ...otherProps\n    }           ,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                             \n                                                   \n                                                                          \n\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport TextAncestor from '../Text/TextAncestor';\nimport ImageAnalyticsTagContext from './ImageAnalyticsTagContext';\nimport {\n  unstable_getImageComponentDecorator,\n  useWrapRefWithImageAttachedCallbacks,\n} from './ImageInjection';\nimport {getImageSourcesFromImageProps} from './ImageSourceUtils';\nimport {convertObjectFitToResizeMode} from './ImageUtils';\nimport ImageViewNativeComponent from './ImageViewNativeComponent';\nimport NativeImageLoaderAndroid, {\n                 \n} from './NativeImageLoaderAndroid';\nimport resolveAssetSource from './resolveAssetSource';\nimport TextInlineImageNativeComponent from './TextInlineImageNativeComponent';\nimport * as React from 'react';\n\nlet _requestId = 1;\nfunction generateRequestId() {\n  return _requestId++;\n}\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n *\n * See https://reactnative.dev/docs/image#getsize\n */\nfunction getSize(\n  url        ,\n  success                                          ,\n  failure                         ,\n)                            {\n  const promise = NativeImageLoaderAndroid.getSize(url);\n  if (typeof success !== 'function') {\n    return promise;\n  }\n  promise\n    .then(sizes => success(sizes.width, sizes.height))\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image: ' + url);\n        },\n    );\n}\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request\n *\n * See https://reactnative.dev/docs/image#getsizewithheaders\n */\nfunction getSizeWithHeaders(\n  url        ,\n  headers                         ,\n  success                                          ,\n  failure                         ,\n)                            {\n  const promise = NativeImageLoaderAndroid.getSizeWithHeaders(url, headers);\n  if (typeof success !== 'function') {\n    return promise;\n  }\n  promise\n    .then(sizes => success(sizes.width, sizes.height))\n    .catch(\n      failure ||\n        function () {\n          console.warn('Failed to get size for image: ' + url);\n        },\n    );\n}\n\nfunction prefetchWithMetadata(\n  url        ,\n  queryRootName        ,\n  rootTag           ,\n  callback                              ,\n)                   {\n  // TODO: T79192300 Log queryRootName and rootTag\n  return prefetch(url, callback);\n}\n\nfunction prefetch(\n  url        ,\n  callback                              ,\n)                   {\n  const requestId = generateRequestId();\n  callback && callback(requestId);\n  return NativeImageLoaderAndroid.prefetchImage(url, requestId);\n}\n\nfunction abortPrefetch(requestId        )       {\n  NativeImageLoaderAndroid.abortRequest(requestId);\n}\n\n/**\n * Perform cache interrogation.\n *\n * See https://reactnative.dev/docs/image#querycache\n */\nasync function queryCache(\n  urls               ,\n)                                                              {\n  return NativeImageLoaderAndroid.queryCache(urls);\n}\n\n/**\n * A React component for displaying different types of images,\n * including network images, static resources, temporary local images, and\n * images from local disk, such as the camera roll.\n *\n * See https://reactnative.dev/docs/image\n */\nlet BaseImage                       = React.forwardRef(\n  (props, forwardedRef) => {\n    let source = getImageSourcesFromImageProps(props) || {\n      uri: undefined,\n      width: undefined,\n      height: undefined,\n    };\n    const defaultSource = resolveAssetSource(props.defaultSource);\n    const loadingIndicatorSource = resolveAssetSource(\n      props.loadingIndicatorSource,\n    );\n\n    if (props.children) {\n      throw new Error(\n        'The <Image> component cannot contain children. If you want to render content on top of the image, consider using the <ImageBackground> component or absolute positioning.',\n      );\n    }\n\n    if (props.defaultSource != null && props.loadingIndicatorSource != null) {\n      throw new Error(\n        'The <Image> component cannot have defaultSource and loadingIndicatorSource at the same time. Please use either defaultSource or loadingIndicatorSource.',\n      );\n    }\n\n    let style                ;\n    let sources;\n    if (Array.isArray(source)) {\n      style = [styles.base, props.style];\n      sources = source;\n    } else {\n      const {uri} = source;\n      if (uri === '') {\n        console.warn('source.uri should not be an empty string');\n      }\n      const width = source.width ?? props.width;\n      const height = source.height ?? props.height;\n      style = [{width, height}, styles.base, props.style];\n      sources = [source];\n    }\n\n    const {onLoadStart, onLoad, onLoadEnd, onError} = props;\n    const nativeProps = {\n      ...props,\n      style,\n      shouldNotifyLoadEvents: !!(onLoadStart || onLoad || onLoadEnd || onError),\n      // Both iOS and C++ sides expect to have \"source\" prop, whereas on Android it's \"src\"\n      // (for historical reasons). So in the latter case we populate both \"src\" and \"source\",\n      // in order to have a better alignment between platforms in the future.\n      src: sources,\n      source: sources,\n      /* $FlowFixMe(>=0.78.0 site=react_native_android_fb) This issue was found\n       * when making Flow check .android.js files. */\n      headers: (source?.[0]?.headers || source?.headers                     ),\n      defaultSource: defaultSource ? defaultSource.uri : null,\n      loadingIndicatorSrc: loadingIndicatorSource\n        ? loadingIndicatorSource.uri\n        : null,\n      accessibilityLabel:\n        props['aria-label'] ?? props.accessibilityLabel ?? props.alt,\n      accessibilityLabelledBy:\n        props?.['aria-labelledby'] ?? props?.accessibilityLabelledBy,\n      accessible: props.alt !== undefined ? true : props.accessible,\n      accessibilityState: {\n        busy: props['aria-busy'] ?? props.accessibilityState?.busy,\n        checked: props['aria-checked'] ?? props.accessibilityState?.checked,\n        disabled: props['aria-disabled'] ?? props.accessibilityState?.disabled,\n        expanded: props['aria-expanded'] ?? props.accessibilityState?.expanded,\n        selected: props['aria-selected'] ?? props.accessibilityState?.selected,\n      },\n    };\n\n    const flattenedStyle = flattenStyle                (style);\n    const objectFit = convertObjectFitToResizeMode(flattenedStyle?.objectFit);\n    const resizeMode =\n      objectFit || props.resizeMode || flattenedStyle?.resizeMode || 'cover';\n\n    const actualRef = useWrapRefWithImageAttachedCallbacks(forwardedRef);\n\n    return (\n      <ImageAnalyticsTagContext.Consumer>\n        {analyticTag => {\n          const nativePropsWithAnalytics =\n            analyticTag !== null\n              ? {\n                  ...nativeProps,\n                  internal_analyticTag: analyticTag,\n                }\n              : nativeProps;\n          return (\n            <TextAncestor.Consumer>\n              {hasTextAncestor => {\n                if (hasTextAncestor) {\n                  return (\n                    <TextInlineImageNativeComponent\n                      // $FlowFixMe[incompatible-type]\n                      style={style}\n                      resizeMode={resizeMode}\n                      headers={nativeProps.headers}\n                      src={sources}\n                      ref={actualRef}\n                    />\n                  );\n                }\n\n                return (\n                  <ImageViewNativeComponent\n                    {...nativePropsWithAnalytics}\n                    resizeMode={resizeMode}\n                    ref={actualRef}\n                  />\n                );\n              }}\n            </TextAncestor.Consumer>\n          );\n        }}\n      </ImageAnalyticsTagContext.Consumer>\n    );\n  },\n);\n\nconst imageComponentDecorator = unstable_getImageComponentDecorator();\nif (imageComponentDecorator != null) {\n  BaseImage = imageComponentDecorator(BaseImage);\n}\n\n// $FlowExpectedError[incompatible-type] Eventually we need to move these functions from statics of the component to exports in the module.\nconst Image               = BaseImage;\n\nImage.displayName = 'Image';\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n *\n * See https://reactnative.dev/docs/image#getsize\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.getSize = getSize;\n\n/**\n * Retrieve the width and height (in pixels) of an image prior to displaying it\n * with the ability to provide the headers for the request\n *\n * See https://reactnative.dev/docs/image#getsizewithheaders\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.getSizeWithHeaders = getSizeWithHeaders;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.prefetch = prefetch;\n\n/**\n * Prefetches a remote image for later use by downloading it to the disk\n * cache, and adds metadata for queryRootName and rootTag.\n *\n * See https://reactnative.dev/docs/image#prefetch\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.prefetchWithMetadata = prefetchWithMetadata;\n\n/**\n * Abort prefetch request.\n *\n * See https://reactnative.dev/docs/image#abortprefetch\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.abortPrefetch = abortPrefetch;\n\n/**\n * Perform cache interrogation.\n *\n * See https://reactnative.dev/docs/image#querycache\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.queryCache = queryCache;\n\n/**\n * Resolves an asset reference into an object.\n *\n * See https://reactnative.dev/docs/image#resolveassetsource\n */\n// $FlowFixMe[incompatible-use] This property isn't writable but we're actually defining it here for the first time.\nImage.resolveAssetSource = resolveAssetSource;\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nmodule.exports = Image;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport * as React from 'react';\n\n                           \n\nconst Context                             =\n  React.createContext             (null);\n\nif (__DEV__) {\n  Context.displayName = 'ImageAnalyticsTagContext';\n}\n\nexport default Context;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                     \n                                                       \n\nimport View from '../Components/View/View';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport StyleSheet from '../StyleSheet/StyleSheet';\nimport Image from './Image';\nimport * as React from 'react';\n\n/**\n * Very simple drop-in replacement for <Image> which supports nesting views.\n *\n * ```ReactNativeWebPlayer\n * import React, { Component } from 'react';\n * import { AppRegistry, View, ImageBackground, Text } from 'react-native';\n *\n * class DisplayAnImageBackground extends Component {\n *   render() {\n *     return (\n *       <ImageBackground\n *         style={{width: 50, height: 50}}\n *         source={{uri: 'https://reactnative.dev/img/opengraph.png'}}\n *       >\n *         <Text>React</Text>\n *       </ImageBackground>\n *     );\n *   }\n * }\n *\n * // App registration and rendering\n * AppRegistry.registerComponent('DisplayAnImageBackground', () => DisplayAnImageBackground);\n * ```\n */\nclass ImageBackground extends React.Component                       {\n  setNativeProps(props       ) {\n    // Work-around flow\n    const viewRef = this._viewRef;\n    if (viewRef) {\n      viewRef.setNativeProps(props);\n    }\n  }\n\n  _viewRef                                 = null;\n\n  _captureRef = (ref                     ) => {\n    this._viewRef = ref;\n  };\n\n  render()             {\n    const {\n      children,\n      style,\n      imageStyle,\n      imageRef,\n      importantForAccessibility,\n      ...props\n    } = this.props;\n\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    const flattenedStyle = flattenStyle(style);\n    return (\n      <View\n        accessibilityIgnoresInvertColors={true}\n        importantForAccessibility={importantForAccessibility}\n        style={style}\n        ref={this._captureRef}>\n        {/* $FlowFixMe[incompatible-use] */}\n        <Image\n          {...props}\n          importantForAccessibility={importantForAccessibility}\n          style={[\n            StyleSheet.absoluteFill,\n            {\n              // Temporary Workaround:\n              // Current (imperfect yet) implementation of <Image> overwrites width and height styles\n              // (which is not quite correct), and these styles conflict with explicitly set styles\n              // of <ImageBackground> and with our internal layout model here.\n              // So, we have to proxy/reapply these styles explicitly for actual <Image> component.\n              // This workaround should be removed after implementing proper support of\n              // intrinsic content size of the <Image>.\n              // $FlowFixMe[prop-missing]\n              width: flattenedStyle?.width,\n              // $FlowFixMe[prop-missing]\n              height: flattenedStyle?.height,\n            },\n            imageStyle,\n          ]}\n          ref={imageRef}\n        />\n        {children}\n      </View>\n    );\n  }\n}\n\nmodule.exports = ImageBackground;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n             \n                       \n                   \n                          \n                           \n\nimport useMergeRefs from '../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport {useRef} from 'react';\n\n                                                                               \n                                         \n\nlet injectedImageComponentDecorator                          ;\n\nexport function unstable_setImageComponentDecorator(\n  imageComponentDecorator                          ,\n)       {\n  injectedImageComponentDecorator = imageComponentDecorator;\n}\n\nexport function unstable_getImageComponentDecorator()                           {\n  return injectedImageComponentDecorator;\n}\n\n                                                      \n\n                              \n                               \n                         \n\nconst imageAttachedCallbacks = new Set                       ();\n\nexport function unstable_registerImageAttachedCallback(\n  callback                       ,\n)       {\n  imageAttachedCallbacks.add(callback);\n}\n\nexport function unstable_unregisterImageAttachedCallback(\n  callback                       ,\n)       {\n  imageAttachedCallbacks.delete(callback);\n}\n\nexport function useWrapRefWithImageAttachedCallbacks(\n  forwardedRef                                ,\n)                                 {\n  const pendingCleanupCallbacks = useRef                   ([]);\n\n  const imageAttachedCallbacksRef =\n    useRef                                       (null);\n\n  if (imageAttachedCallbacksRef.current == null) {\n    imageAttachedCallbacksRef.current = (node                      )       => {\n      if (node == null) {\n        if (pendingCleanupCallbacks.current.length > 0) {\n          pendingCleanupCallbacks.current.forEach(cb => cb());\n          pendingCleanupCallbacks.current = [];\n        }\n      } else {\n        imageAttachedCallbacks.forEach(imageAttachedCallback => {\n          const maybeCleanupCallback = imageAttachedCallback(node);\n          if (maybeCleanupCallback != null) {\n            pendingCleanupCallbacks.current.push(maybeCleanupCallback);\n          }\n        });\n      }\n    };\n  }\n\n  // `useMergeRefs` returns a stable ref if its arguments don't change.\n  return useMergeRefs               (\n    forwardedRef,\n    imageAttachedCallbacksRef.current,\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n                                                               \n                                             \n\nimport resolveAssetSource from './resolveAssetSource';\n\n/**\n * A function which returns the appropriate value for image source\n * by resolving the `source`, `src` and `srcSet` props.\n */\nexport function getImageSourcesFromImageProps(\n  imageProps            ,\n)                                                            {\n  let source = resolveAssetSource(imageProps.source);\n\n  let sources;\n\n  const {crossOrigin, referrerPolicy, src, srcSet, width, height} = imageProps;\n\n  const headers                     = {};\n  if (crossOrigin === 'use-credentials') {\n    headers['Access-Control-Allow-Credentials'] = 'true';\n  }\n  if (referrerPolicy != null) {\n    headers['Referrer-Policy'] = referrerPolicy;\n  }\n  if (srcSet != null) {\n    const sourceList = [];\n    const srcSetList = srcSet.split(', ');\n    // `src` prop should be used with default scale if `srcSet` does not have 1x scale.\n    let shouldUseSrcForDefaultScale = true;\n    srcSetList.forEach(imageSrc => {\n      const [uri, xScale = '1x'] = imageSrc.split(' ');\n      if (!xScale.endsWith('x')) {\n        console.warn(\n          'The provided format for scale is not supported yet. Please use scales like 1x, 2x, etc.',\n        );\n      } else {\n        const scale = parseInt(xScale.split('x')[0], 10);\n        if (!isNaN(scale)) {\n          // 1x scale is provided in `srcSet` prop so ignore the `src` prop if provided.\n          shouldUseSrcForDefaultScale =\n            scale === 1 ? false : shouldUseSrcForDefaultScale;\n          sourceList.push({headers: headers, scale, uri, width, height});\n        }\n      }\n    });\n\n    if (shouldUseSrcForDefaultScale && src != null) {\n      sourceList.push({\n        headers: headers,\n        scale: 1,\n        uri: src,\n        width,\n        height,\n      });\n    }\n    if (sourceList.length === 0) {\n      console.warn('The provided value for srcSet is not valid.');\n    }\n\n    sources = sourceList;\n  } else if (src != null) {\n    sources = [{uri: src, headers: headers, width, height}];\n  } else {\n    sources = source;\n  }\n  return sources;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                       \n\nconst objectFitMap                              = {\n  contain: 'contain',\n  cover: 'cover',\n  fill: 'stretch',\n  'scale-down': 'contain',\n  none: 'none',\n};\n\nexport function convertObjectFitToResizeMode(\n  objectFit         ,\n)                   {\n  return objectFit != null ? objectFitMap[objectFit] : undefined;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\nimport NativeFrameRateLogger from './NativeFrameRateLogger';\n\nconst invariant = require('invariant');\n\n/**\n * Flow API for native FrameRateLogger module. If the native module is not installed, function calls\n * are just no-ops.\n *\n * Typical behavior is that `setContext` is called when a new screen is loaded (e.g. via a\n * navigation integration), and then `beginScroll` is called by `ScrollResponder` at which point the\n * native module then begins tracking frame drops. When `ScrollResponder` calls `endScroll`, the\n * native module gathers up all it's frame drop data and reports it via an analytics pipeline for\n * analysis.\n *\n * Note that `beginScroll` may be called multiple times by `ScrollResponder` - unclear if that's a\n * bug, but the native module should be robust to that.\n *\n * In the future we may add support for tracking frame drops in other types of interactions beyond\n * scrolling.\n */\nconst FrameRateLogger = {\n  /**\n   * Enable `debug` to see local logs of what's going on.\n   */\n  setGlobalOptions: function (options                        ) {\n    if (options.debug !== undefined) {\n      invariant(\n        NativeFrameRateLogger,\n        'Trying to debug FrameRateLogger without the native module!',\n      );\n    }\n    NativeFrameRateLogger?.setGlobalOptions({\n      debug: !!options.debug,\n    });\n  },\n\n  /**\n   * Must call `setContext` before any events can be properly tracked, which is done automatically\n   * in `AppRegistry`, but navigation is also a common place to hook in.\n   */\n  setContext: function (context        ) {\n    NativeFrameRateLogger?.setContext(context);\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  beginScroll() {\n    NativeFrameRateLogger?.beginScroll();\n  },\n\n  /**\n   * Called in `ScrollResponder` so any component that uses that module will handle this\n   * automatically.\n   */\n  endScroll() {\n    NativeFrameRateLogger?.endScroll();\n  },\n};\n\nmodule.exports = FrameRateLogger;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                      \n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\n\nconst BatchedBridge = require('../BatchedBridge/BatchedBridge');\nconst infoLog = require('../Utilities/infoLog');\nconst TaskQueue = require('./TaskQueue');\nconst invariant = require('invariant');\n\n                            \n\nconst _emitter = new EventEmitter  \n                          \n                       \n  ();\n\nconst DEBUG_DELAY    = 0;\nconst DEBUG        = false;\n\n/**\n * InteractionManager allows long-running work to be scheduled after any\n * interactions/animations have completed. In particular, this allows JavaScript\n * animations to run smoothly.\n *\n * Applications can schedule tasks to run after interactions with the following:\n *\n * ```\n * InteractionManager.runAfterInteractions(() => {\n *   // ...long-running synchronous task...\n * });\n * ```\n *\n * Compare this to other scheduling alternatives:\n *\n * - requestAnimationFrame(): for code that animates a view over time.\n * - setImmediate/setTimeout(): run code later, note this may delay animations.\n * - runAfterInteractions(): run code later, without delaying active animations.\n *\n * The touch handling system considers one or more active touches to be an\n * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n * touches have ended or been cancelled.\n *\n * InteractionManager also allows applications to register animations by\n * creating an interaction 'handle' on animation start, and clearing it upon\n * completion:\n *\n * ```\n * var handle = InteractionManager.createInteractionHandle();\n * // run animation... (`runAfterInteractions` tasks are queued)\n * // later, on animation completion:\n * InteractionManager.clearInteractionHandle(handle);\n * // queued tasks run if all handles were cleared\n * ```\n *\n * `runAfterInteractions` takes either a plain callback function, or a\n * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n * dependencies that also schedule more tasks via `runAfterInteractions`) before\n * starting on the next task that might have been queued up synchronously\n * earlier.\n *\n * By default, queued tasks are executed together in a loop in one\n * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n * tasks will only be executed until the deadline (in terms of js event loop run\n * time) approaches, at which point execution will yield via setTimeout,\n * allowing events such as touches to start interactions and block queued tasks\n * from executing, making apps more responsive.\n */\nconst InteractionManager = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete',\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed. Returns a cancellable\n   * \"promise\".\n   */\n  runAfterInteractions(task       )   \n              \n                                               \n                                                      \n                    \n                       \n       \n    {\n    const tasks              = [];\n    const promise = new Promise((resolve            ) => {\n      _scheduleUpdate();\n      if (task) {\n        tasks.push(task);\n      }\n      tasks.push({\n        run: resolve,\n        name: 'resolve ' + ((task && task.name) || '?'),\n      });\n      _taskQueue.enqueueTasks(tasks);\n    });\n    return {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      then: promise.then.bind(promise),\n      cancel: function () {\n        _taskQueue.cancelTasks(tasks);\n      },\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   */\n  createInteractionHandle()         {\n    DEBUG && infoLog('InteractionManager: create interaction handle');\n    _scheduleUpdate();\n    const handle = ++_inc;\n    _addInteractionSet.add(handle);\n    return handle;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   */\n  clearInteractionHandle(handle        ) {\n    DEBUG && infoLog('InteractionManager: clear interaction handle');\n    invariant(!!handle, 'InteractionManager: Must provide a handle to clear.');\n    _scheduleUpdate();\n    _addInteractionSet.delete(handle);\n    _deleteInteractionSet.add(handle);\n  },\n\n  // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n  addListener: (_emitter.addListener.bind(_emitter)            ),\n\n  /**\n   * A positive number will use setTimeout to schedule any tasks after the\n   * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n   * executed in one setImmediate batch (default).\n   */\n  setDeadline(deadline        ) {\n    _deadline = deadline;\n  },\n};\n\nconst _interactionSet = new Set                 ();\nconst _addInteractionSet = new Set                 ();\nconst _deleteInteractionSet = new Set        ();\nconst _taskQueue = new TaskQueue({onMoreTasks: _scheduleUpdate});\nlet _nextUpdateHandle                         = 0;\nlet _inc = 0;\nlet _deadline = -1;\n\n/**\n * Schedule an asynchronous update to the interaction state.\n */\nfunction _scheduleUpdate() {\n  if (!_nextUpdateHandle) {\n    if (_deadline > 0) {\n      _nextUpdateHandle = setTimeout(_processUpdate, 0 + DEBUG_DELAY);\n    } else {\n      _nextUpdateHandle = setImmediate(_processUpdate);\n    }\n  }\n}\n\n/**\n * Notify listeners, process queue, etc\n */\nfunction _processUpdate() {\n  _nextUpdateHandle = 0;\n\n  const interactionCount = _interactionSet.size;\n  _addInteractionSet.forEach(handle => _interactionSet.add(handle));\n  _deleteInteractionSet.forEach(handle => _interactionSet.delete(handle));\n  const nextInteractionCount = _interactionSet.size;\n\n  if (interactionCount !== 0 && nextInteractionCount === 0) {\n    // transition from 1+ --> 0 interactions\n    _emitter.emit(InteractionManager.Events.interactionComplete);\n  } else if (interactionCount === 0 && nextInteractionCount !== 0) {\n    // transition from 0 --> 1+ interactions\n    _emitter.emit(InteractionManager.Events.interactionStart);\n  }\n\n  // process the queue regardless of a transition\n  if (nextInteractionCount === 0) {\n    while (_taskQueue.hasTasksToProcess()) {\n      _taskQueue.processNext();\n      if (\n        _deadline > 0 &&\n        BatchedBridge.getEventLoopRunningTime() >= _deadline\n      ) {\n        // Hit deadline before processing all tasks, so process more later.\n        _scheduleUpdate();\n        break;\n      }\n    }\n  }\n  _addInteractionSet.clear();\n  _deleteInteractionSet.clear();\n}\n\nmodule.exports = (\n  ReactNativeFeatureFlags.disableInteractionManager()\n    ? require('./InteractionManagerStub')\n    : InteractionManager\n)                             ;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                                                                      \n\nconst invariant = require('invariant');\n\n                            \n\n           \n     \n                   \n                      \n     \n     \n                   \n                               \n     \n                 \n\n/**\n * InteractionManager allows long-running work to be scheduled after any\n * interactions/animations have completed. In particular, this allows JavaScript\n * animations to run smoothly.\n *\n * Applications can schedule tasks to run after interactions with the following:\n *\n * ```\n * InteractionManager.runAfterInteractions(() => {\n *   // ...long-running synchronous task...\n * });\n * ```\n *\n * Compare this to other scheduling alternatives:\n *\n * - requestAnimationFrame(): for code that animates a view over time.\n * - setImmediate/setTimeout(): run code later, note this may delay animations.\n * - runAfterInteractions(): run code later, without delaying active animations.\n *\n * The touch handling system considers one or more active touches to be an\n * 'interaction' and will delay `runAfterInteractions()` callbacks until all\n * touches have ended or been cancelled.\n *\n * InteractionManager also allows applications to register animations by\n * creating an interaction 'handle' on animation start, and clearing it upon\n * completion:\n *\n * ```\n * var handle = InteractionManager.createInteractionHandle();\n * // run animation... (`runAfterInteractions` tasks are queued)\n * // later, on animation completion:\n * InteractionManager.clearInteractionHandle(handle);\n * // queued tasks run if all handles were cleared\n * ```\n *\n * `runAfterInteractions` takes either a plain callback function, or a\n * `PromiseTask` object with a `gen` method that returns a `Promise`.  If a\n * `PromiseTask` is supplied, then it is fully resolved (including asynchronous\n * dependencies that also schedule more tasks via `runAfterInteractions`) before\n * starting on the next task that might have been queued up synchronously\n * earlier.\n *\n * By default, queued tasks are executed together in a loop in one\n * `setImmediate` batch. If `setDeadline` is called with a positive number, then\n * tasks will only be executed until the deadline (in terms of js event loop run\n * time) approaches, at which point execution will yield via setTimeout,\n * allowing events such as touches to start interactions and block queued tasks\n * from executing, making apps more responsive.\n *\n * @deprecated\n */\nconst InteractionManagerStub = {\n  Events: {\n    interactionStart: 'interactionStart',\n    interactionComplete: 'interactionComplete',\n  },\n\n  /**\n   * Schedule a function to run after all interactions have completed. Returns a cancellable\n   * \"promise\".\n   *\n   * @deprecated\n   */\n  runAfterInteractions(task       )   \n              \n                                               \n                                                      \n                    \n                       \n       \n    {\n    let immediateID             ;\n    const promise = new Promise((resolve, reject) => {\n      immediateID = setImmediate(() => {\n        if (typeof task === 'object' && task !== null) {\n          if (typeof task.gen === 'function') {\n            task.gen().then(resolve, reject);\n          } else if (typeof task.run === 'function') {\n            try {\n              task.run();\n              resolve();\n            } catch (error) {\n              reject(error);\n            }\n          } else {\n            reject(new TypeError(`Task \"${task.name}\" missing gen or run.`));\n          }\n        } else if (typeof task === 'function') {\n          try {\n            task();\n            resolve();\n          } catch (error) {\n            reject(error);\n          }\n        } else {\n          reject(new TypeError('Invalid task of type: ' + typeof task));\n        }\n      });\n    });\n\n    return {\n      // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n      then: promise.then.bind(promise),\n      cancel() {\n        clearImmediate(immediateID);\n      },\n    };\n  },\n\n  /**\n   * Notify manager that an interaction has started.\n   *\n   * @deprecated\n   */\n  createInteractionHandle()         {\n    return -1;\n  },\n\n  /**\n   * Notify manager that an interaction has completed.\n   *\n   * @deprecated\n   */\n  clearInteractionHandle(handle        ) {\n    invariant(!!handle, 'InteractionManager: Must provide a handle to clear.');\n  },\n\n  /**\n   * @deprecated\n   */\n  addListener()                    {\n    return {\n      remove() {},\n    };\n  },\n\n  /**\n   * A positive number will use setTimeout to schedule any tasks after the\n   * eventLoopRunningTime hits the deadline value, otherwise all tasks will be\n   * executed in one setImmediate batch (default).\n   *\n   * @deprecated\n   */\n  setDeadline(deadline        ) {\n    // Do nothing.\n  },\n};\n\nmodule.exports = InteractionManagerStub;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\n\n                   \n               \n                  \n  \n                    \n               \n                           \n  \n                                                           \n\nconst DEBUG        = false;\n\n/**\n * TaskQueue - A system for queueing and executing a mix of simple callbacks and\n * trees of dependent tasks based on Promises. No tasks are executed unless\n * `processNext` is called.\n *\n * `enqueue` takes a Task object with either a simple `run` callback, or a\n * `gen` function that returns a `Promise` and puts it in the queue.  If a gen\n * function is supplied, then the promise it returns will block execution of\n * tasks already in the queue until it resolves. This can be used to make sure\n * the first task is fully resolved (including asynchronous dependencies that\n * also schedule more tasks via `enqueue`) before starting on the next task.\n * The `onMoreTasks` constructor argument is used to inform the owner that an\n * async task has resolved and that the queue should be processed again.\n *\n * Note: Tasks are only actually executed with explicit calls to `processNext`.\n */\nclass TaskQueue {\n  /**\n   * TaskQueue instances are self contained and independent, so multiple tasks\n   * of varying semantics and priority can operate together.\n   *\n   * `onMoreTasks` is invoked when `PromiseTask`s resolve if there are more\n   * tasks to process.\n   */\n  constructor({onMoreTasks}                                ) {\n    this._onMoreTasks = onMoreTasks;\n    this._queueStack = [{tasks: [], popable: false}];\n  }\n\n  /**\n   * Add a task to the queue.  It is recommended to name your tasks for easier\n   * async debugging. Tasks will not be executed until `processNext` is called\n   * explicitly.\n   */\n  enqueue(task      )       {\n    this._getCurrentQueue().push(task);\n  }\n\n  enqueueTasks(tasks             )       {\n    tasks.forEach(task => this.enqueue(task));\n  }\n\n  cancelTasks(tasksToCancel             )       {\n    // search through all tasks and remove them.\n    this._queueStack = this._queueStack\n      .map(queue => ({\n        ...queue,\n        tasks: queue.tasks.filter(task => tasksToCancel.indexOf(task) === -1),\n      }))\n      .filter((queue, idx) => queue.tasks.length > 0 || idx === 0);\n  }\n\n  /**\n   * Check to see if `processNext` should be called.\n   *\n   * @returns {boolean} Returns true if there are tasks that are ready to be\n   * processed with `processNext`, or returns false if there are no more tasks\n   * to be processed right now, although there may be tasks in the queue that\n   * are blocked by earlier `PromiseTask`s that haven't resolved yet.\n   * `onMoreTasks` will be called after each `PromiseTask` resolves if there are\n   * tasks ready to run at that point.\n   */\n  hasTasksToProcess()          {\n    return this._getCurrentQueue().length > 0;\n  }\n\n  /**\n   * Executes the next task in the queue.\n   */\n  processNext()       {\n    const queue = this._getCurrentQueue();\n    if (queue.length) {\n      const task = queue.shift();\n      try {\n        if (typeof task === 'object' && task.gen) {\n          DEBUG && infoLog('TaskQueue: genPromise for task ' + task.name);\n          this._genPromise(task);\n        } else if (typeof task === 'object' && task.run) {\n          DEBUG && infoLog('TaskQueue: run task ' + task.name);\n          task.run();\n        } else {\n          invariant(\n            typeof task === 'function',\n            'Expected Function, SimpleTask, or PromiseTask, but got:\\n' +\n              JSON.stringify(task, null, 2),\n          );\n          DEBUG && infoLog('TaskQueue: run anonymous task');\n          task();\n        }\n      } catch (e) {\n        e.message =\n          // $FlowFixMe[incompatible-type]\n          'TaskQueue: Error with task ' + (task.name || '') + ': ' + e.message;\n        throw e;\n      }\n    }\n  }\n\n  _queueStack         \n                       \n                     \n       \n    ;\n  _onMoreTasks            ;\n\n  _getCurrentQueue()              {\n    const stackIdx = this._queueStack.length - 1;\n    const queue = this._queueStack[stackIdx];\n    if (\n      queue.popable &&\n      queue.tasks.length === 0 &&\n      this._queueStack.length > 1\n    ) {\n      this._queueStack.pop();\n      DEBUG &&\n        infoLog('TaskQueue: popped queue: ', {\n          stackIdx,\n          queueStackSize: this._queueStack.length,\n        });\n      return this._getCurrentQueue();\n    } else {\n      return queue.tasks;\n    }\n  }\n\n  _genPromise(task             ) {\n    // Each async task pushes it's own queue onto the queue stack. This\n    // effectively defers execution of previously queued tasks until the promise\n    // resolves, at which point we allow the new queue to be popped, which\n    // happens once it is fully processed.\n    this._queueStack.push({tasks: [], popable: false});\n    const stackIdx = this._queueStack.length - 1;\n    const stackItem = this._queueStack[stackIdx];\n    DEBUG && infoLog('TaskQueue: push new queue: ', {stackIdx});\n    DEBUG && infoLog('TaskQueue: exec gen task ' + task.name);\n    task\n      .gen()\n      .then(() => {\n        DEBUG &&\n          infoLog('TaskQueue: onThen for gen task ' + task.name, {\n            stackIdx,\n            queueStackSize: this._queueStack.length,\n          });\n        stackItem.popable = true;\n        this.hasTasksToProcess() && this._onMoreTasks();\n      })\n      .catch(ex => {\n        setTimeout(() => {\n          ex.message = `TaskQueue: Error resolving Promise in task ${task.name}: ${ex.message}`;\n          throw ex;\n        }, 0);\n      });\n  }\n}\n\nmodule.exports = TaskQueue;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n'use strict';\n\n             \n                                                  \n                          \n                      \n                                            \n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {getFabricUIManager} from '../ReactNative/FabricUIManager';\nimport Platform from '../Utilities/Platform';\n\nconst UIManager = require('../ReactNative/UIManager');\n\n// Reexport type\n                                                           \n\n                                            \n                                             \n\nlet isLayoutAnimationEnabled          =\n  ReactNativeFeatureFlags.isLayoutAnimationEnabled();\n\nfunction setEnabled(value         ) {\n  isLayoutAnimationEnabled = isLayoutAnimationEnabled;\n}\n\n/**\n * Configures the next commit to be animated.\n *\n * onAnimationDidEnd is guaranteed to be called when the animation completes.\n * onAnimationDidFail is *never* called in the classic, pre-Fabric renderer,\n * and never has been. In the new renderer (Fabric) it is called only if configuration\n * parsing fails.\n */\nfunction configureNext(\n  config                       ,\n  onAnimationDidEnd                            ,\n  onAnimationDidFail                             ,\n) {\n  if (Platform.isDisableAnimations) {\n    return;\n  }\n\n  if (!isLayoutAnimationEnabled) {\n    return;\n  }\n\n  // Since LayoutAnimations may possibly be disabled for now on iOS (Fabric),\n  // or Android (non-Fabric) we race a setTimeout with animation completion,\n  // in case onComplete is never called\n  // from native. Once LayoutAnimations+Fabric unconditionally ship everywhere, we can\n  // delete this mechanism at least in the Fabric branch.\n  let animationCompletionHasRun = false;\n  const onAnimationComplete = () => {\n    if (animationCompletionHasRun) {\n      return;\n    }\n    animationCompletionHasRun = true;\n    clearTimeout(raceWithAnimationId);\n    onAnimationDidEnd?.();\n  };\n  const raceWithAnimationId = setTimeout(\n    onAnimationComplete,\n    (config.duration ?? 0) + 17 /* one frame + 1ms */,\n  );\n\n  // In Fabric, LayoutAnimations are unconditionally enabled for Android, and\n  // conditionally enabled on iOS (pending fully shipping; this is a temporary state).\n  const FabricUIManager = getFabricUIManager();\n  if (FabricUIManager?.configureNextLayoutAnimation) {\n    global?.nativeFabricUIManager?.configureNextLayoutAnimation(\n      config,\n      onAnimationComplete,\n      onAnimationDidFail ??\n        function () {} /* this will only be called if configuration parsing fails */,\n    );\n    return;\n  }\n\n  // This will only run if Fabric is *not* installed.\n  // If you have Fabric + non-Fabric running in the same VM, non-Fabric LayoutAnimations\n  // will not work.\n  if (UIManager?.configureNextLayoutAnimation) {\n    UIManager.configureNextLayoutAnimation(\n      config,\n      onAnimationComplete ?? function () {},\n      onAnimationDidFail ??\n        function () {} /* this should never be called in Non-Fabric */,\n    );\n  }\n}\n\nfunction create(\n  duration        ,\n  type                     ,\n  property                         ,\n)                        {\n  return {\n    duration,\n    create: {type, property},\n    update: {type},\n    delete: {type, property},\n  };\n}\n\nconst Presets = {\n  easeInEaseOut: (create(\n    300,\n    'easeInEaseOut',\n    'opacity',\n  )                       ),\n  linear: (create(500, 'linear', 'opacity')                       ),\n  spring: ({\n    duration: 700,\n    create: {\n      type: 'linear',\n      property: 'opacity',\n    },\n    update: {\n      type: 'spring',\n      springDamping: 0.4,\n    },\n    delete: {\n      type: 'linear',\n      property: 'opacity',\n    },\n  }                       ),\n};\n\n/**\n * Automatically animates views to their new positions when the\n * next layout happens.\n *\n * A common way to use this API is to call it before calling `setState`.\n *\n * Note that in order to get this to work on **Android** you need to set the following flags via `UIManager`:\n *\n *     UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n */\nconst LayoutAnimation = {\n  /**\n   * Schedules an animation to happen on the next layout.\n   *\n   * @param config Specifies animation properties:\n   *\n   *   - `duration` in milliseconds\n   *   - `create`, `AnimationConfig` for animating in new views\n   *   - `update`, `AnimationConfig` for animating views that have been updated\n   *\n   * @param onAnimationDidEnd Called when the animation finished.\n   * Only supported on iOS.\n   * @param onError Called on error. Only supported on iOS.\n   */\n  configureNext,\n  /**\n   * Helper for creating a config for `configureNext`.\n   */\n  create,\n  Types: Object.freeze({\n    spring: 'spring',\n    linear: 'linear',\n    easeInEaseOut: 'easeInEaseOut',\n    easeIn: 'easeIn',\n    easeOut: 'easeOut',\n    keyboard: 'keyboard',\n  }),\n  Properties: Object.freeze({\n    opacity: 'opacity',\n    scaleX: 'scaleX',\n    scaleY: 'scaleY',\n    scaleXY: 'scaleXY',\n  }),\n  checkConfig(...args              ) {\n    console.error('LayoutAnimation.checkConfig(...) has been disabled.');\n  },\n  Presets,\n  easeInEaseOut: (configureNext.bind(null, Presets.easeInEaseOut)   \n                                                  \n           ),\n  linear: (configureNext.bind(null, Presets.linear)   \n                                                  \n           ),\n  spring: (configureNext.bind(null, Presets.spring)   \n                                                  \n           ),\n  setEnabled,\n};\n\nmodule.exports = LayoutAnimation;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n                                                                                                  \n                                                            \n             \n                  \n                 \n                                \n            \n                                         \n\nimport * as ReactNativeFeatureFlags from '../../src/private/featureflags/ReactNativeFeatureFlags';\nimport {                        } from '../Components/ScrollView/ScrollView';\nimport {\n  VirtualizedList,\n  keyExtractor as defaultKeyExtractor,\n} from '@react-native/virtualized-lists';\nimport memoizeOne from 'memoize-one';\n\nconst View = require('../Components/View/View');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst deepDiffer = require('../Utilities/differ/deepDiffer');\nconst Platform = require('../Utilities/Platform');\nconst invariant = require('invariant');\nconst React = require('react');\n\n                              \n     \n                                                                              \n                                                \n     \n                                      \n   \n                              \n     \n                                                                           \n    \n                  \n                                                                                    \n                                                                               \n             \n                                                       \n                                                \n                                \n                                                  \n                                                    \n                                                       \n                                                        \n                                          \n                      \n                                  \n             \n           \n    \n                                                                                        \n                                                                                                \n                                                                                            \n                                                                                                   \n                   \n     \n                                      \n\n     \n                                                                             \n     \n                                     \n     \n                                                                                                  \n                                                                                               \n                                                       \n     \n                  \n     \n                                                                                                    \n                                                                                                 \n                                                     \n    \n                                          \n                                                                    \n           \n    \n                                                                                                \n                                                                                             \n                                      \n     \n                   \n                                        \n                  \n        \n                   \n                   \n                  \n       \n    \n     \n                                                                                          \n     \n                        \n     \n                                                                                                    \n                                                                                                   \n                                                               \n     \n                               \n     \n                                                                                            \n                                                                                              \n                                                                                               \n                                       \n     \n                               \n     \n                                                                   \n     \n                      \n     \n                                                                                                  \n                                                                                                  \n                                                    \n     \n                                                         \n     \n                                                                                            \n                                                                                                \n    \n                            \n     \n                      \n     \n                                                                                        \n    \n                                                         \n    \n                                           \n     \n                                  \n     \n                                                              \n     \n                             \n     \n                                                                                          \n     \n                       \n   \n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// removeClippedSubviewsOrDefault(this.props.removeClippedSubviews)\nfunction removeClippedSubviewsOrDefault(removeClippedSubviews          ) {\n  if (ReactNativeFeatureFlags.shouldUseRemoveClippedSubviewsAsDefaultOnIOS()) {\n    return removeClippedSubviews ?? true;\n  } else {\n    return removeClippedSubviews ?? Platform.OS === 'android';\n  }\n}\n\n// numColumnsOrDefault(this.props.numColumns)\nfunction numColumnsOrDefault(numColumns         ) {\n  return numColumns ?? 1;\n}\n\nfunction isArrayLike(data       )          {\n  // $FlowExpectedError[incompatible-use]\n  return typeof Object(data).length === 'number';\n}\n\n                              \n                          \n                          \n   \n\n                                                                        \n\n                            \n           \n                         \n     \n                                                              \n                                                                        \n                                                                          \n                                                                    \n                                                                        \n         \n      \n    \n                          \n     \n  \n\n/**\n * A performant interface for rendering simple, flat lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Optional horizontal mode.\n *  - Configurable viewability callbacks.\n *  - Header support.\n *  - Footer support.\n *  - Separator support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *  - ScrollToIndex support.\n *\n * If you need section support, use [`<SectionList>`](docs/sectionlist.html).\n *\n * Minimal Example:\n *\n *     <FlatList\n *       data={[{key: 'a'}, {key: 'b'}]}\n *       renderItem={({item}) => <Text>{item.key}</Text>}\n *     />\n *\n * More complex, multi-select example demonstrating `PureComponent` usage for perf optimization and avoiding bugs.\n *\n * - By binding the `onPressItem` handler, the props will remain `===` and `PureComponent` will\n *   prevent wasteful re-renders unless the actual `id`, `selected`, or `title` props change, even\n *   if the components rendered in `MyListItem` did not have such optimizations.\n * - By passing `extraData={this.state}` to `FlatList` we make sure `FlatList` itself will re-render\n *   when the `state.selected` changes. Without setting this prop, `FlatList` would not know it\n *   needs to re-render any items because it is also a `PureComponent` and the prop comparison will\n *   not show any changes.\n * - `keyExtractor` tells the list to use the `id`s for the react keys instead of the default `key` property.\n *\n *\n *     class MyListItem extends React.PureComponent {\n *       _onPress = () => {\n *         this.props.onPressItem(this.props.id);\n *       };\n *\n *       render() {\n *         const textColor = this.props.selected ? \"red\" : \"black\";\n *         return (\n *           <TouchableOpacity onPress={this._onPress}>\n *             <View>\n *               <Text style={{ color: textColor }}>\n *                 {this.props.title}\n *               </Text>\n *             </View>\n *           </TouchableOpacity>\n *         );\n *       }\n *     }\n *\n *     class MultiSelectList extends React.PureComponent {\n *       state = {selected: (new Map(): Map<string, boolean>)};\n *\n *       _keyExtractor = (item, index) => item.id;\n *\n *       _onPressItem = (id: string) => {\n *         // updater functions are preferred for transactional updates\n *         this.setState((state) => {\n *           // copy the map rather than modifying state.\n *           const selected = new Map(state.selected);\n *           selected.set(id, !selected.get(id)); // toggle\n *           return {selected};\n *         });\n *       };\n *\n *       _renderItem = ({item}) => (\n *         <MyListItem\n *           id={item.id}\n *           onPressItem={this._onPressItem}\n *           selected={!!this.state.selected.get(item.id)}\n *           title={item.title}\n *         />\n *       );\n *\n *       render() {\n *         return (\n *           <FlatList\n *             data={this.props.data}\n *             extraData={this.state}\n *             keyExtractor={this._keyExtractor}\n *             renderItem={this._renderItem}\n *           />\n *         );\n *       }\n *     }\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist.html),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n * Also inherits [ScrollView Props](docs/scrollview.html#props), unless it is nested in another FlatList of same orientation.\n */\nclass FlatList        extends React.PureComponent                     {\n  /**\n   * Scrolls to the end of the content. May be janky without `getItemLayout` prop.\n   */\n  scrollToEnd(params                              ) {\n    if (this._listRef) {\n      this._listRef.scrollToEnd(params);\n    }\n  }\n\n  /**\n   * Scrolls to the item at the specified index such that it is positioned in the viewable area\n   * such that `viewPosition` 0 places it at the top, 1 at the bottom, and 0.5 centered in the\n   * middle. `viewOffset` is a fixed number of pixels to offset the final target position.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToIndex(params   \n                        \n                  \n                        \n                          \n       \n   ) {\n    if (this._listRef) {\n      this._listRef.scrollToIndex(params);\n    }\n  }\n\n  /**\n   * Requires linear scan through data - use `scrollToIndex` instead if possible.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToItem(params   \n                        \n                \n                        \n                          \n       \n   ) {\n    if (this._listRef) {\n      this._listRef.scrollToItem(params);\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Check out [scrollToOffset](docs/virtualizedlist.html#scrolltooffset) of VirtualizedList\n   */\n  scrollToOffset(params                                            ) {\n    if (this._listRef) {\n      this._listRef.scrollToOffset(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    if (this._listRef) {\n      this._listRef.recordInteraction();\n    }\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    if (this._listRef) {\n      this._listRef.flashScrollIndicators();\n    }\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder()                       {\n    if (this._listRef) {\n      return this._listRef.getScrollResponder();\n    }\n  }\n\n  /**\n   * Provides a reference to the underlying host component\n   */\n  getNativeScrollRef() \n                                    \n                                                   {\n    if (this._listRef) {\n      /* $FlowFixMe[incompatible-return] Suppresses errors found when fixing\n       * TextInput typing */\n      return this._listRef.getScrollRef();\n    }\n  }\n\n  getScrollableNode()      {\n    if (this._listRef) {\n      return this._listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props                        ) {\n    if (this._listRef) {\n      this._listRef.setNativeProps(props);\n    }\n  }\n\n  constructor(props              ) {\n    super(props);\n    this._checkProps(this.props);\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._virtualizedListPairs =\n        this.props.viewabilityConfigCallbackPairs.map(pair => ({\n          viewabilityConfig: pair.viewabilityConfig,\n          onViewableItemsChanged: this._createOnViewableItemsChanged(\n            pair.onViewableItemsChanged,\n          ),\n        }));\n    } else if (this.props.onViewableItemsChanged) {\n      this._virtualizedListPairs.push({\n        /* $FlowFixMe[incompatible-call] (>=0.63.0 site=react_native_fb) This\n         * comment suppresses an error found when Flow v0.63 was deployed. To\n         * see the error delete this comment and run Flow. */\n        viewabilityConfig: this.props.viewabilityConfig,\n        onViewableItemsChanged: this._createOnViewableItemsChanged(\n          // NOTE: we use a wrapper function to allow the actual callback to change\n          // while still keeping the function provided to native to be stable\n          (...args) => {\n            invariant(\n              this.props.onViewableItemsChanged,\n              'Changing the nullability of onViewableItemsChanged is not supported. ' +\n                'Once a function or null is supplied that cannot be changed.',\n            );\n            return this.props.onViewableItemsChanged(...args);\n          },\n        ),\n      });\n    }\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  componentDidUpdate(prevProps              ) {\n    invariant(\n      prevProps.numColumns === this.props.numColumns,\n      'Changing numColumns on the fly is not supported. Change the key prop on FlatList when ' +\n        'changing the number of columns to force a fresh render of the component.',\n    );\n    invariant(\n      (prevProps.onViewableItemsChanged == null) ===\n        (this.props.onViewableItemsChanged == null),\n      'Changing onViewableItemsChanged nullability on the fly is not supported',\n    );\n    invariant(\n      !deepDiffer(prevProps.viewabilityConfig, this.props.viewabilityConfig),\n      'Changing viewabilityConfig on the fly is not supported',\n    );\n    invariant(\n      prevProps.viewabilityConfigCallbackPairs ===\n        this.props.viewabilityConfigCallbackPairs,\n      'Changing viewabilityConfigCallbackPairs on the fly is not supported',\n    );\n\n    this._checkProps(this.props);\n  }\n\n  _listRef                  ;\n  _virtualizedListPairs                                       = [];\n\n  _captureRef = (ref                  ) => {\n    this._listRef = ref;\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _checkProps(props              ) {\n    const {\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItem,\n      // $FlowFixMe[prop-missing] this prop doesn't exist, is only used for an invariant\n      getItemCount,\n      horizontal,\n      columnWrapperStyle,\n      onViewableItemsChanged,\n      viewabilityConfigCallbackPairs,\n    } = props;\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    invariant(\n      !getItem && !getItemCount,\n      'FlatList does not support custom data formats.',\n    );\n    if (numColumns > 1) {\n      invariant(!horizontal, 'numColumns does not support horizontal.');\n    } else {\n      invariant(\n        !columnWrapperStyle,\n        'columnWrapperStyle not supported for single column lists',\n      );\n    }\n    invariant(\n      !(onViewableItemsChanged && viewabilityConfigCallbackPairs),\n      'FlatList does not support setting both onViewableItemsChanged and ' +\n        'viewabilityConfigCallbackPairs.',\n    );\n  }\n\n  _getItem = (\n    data                   ,\n    index        ,\n  )                                   => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    if (numColumns > 1) {\n      const ret = [];\n      for (let kk = 0; kk < numColumns; kk++) {\n        const itemIndex = index * numColumns + kk;\n        if (itemIndex < data.length) {\n          const item = data[itemIndex];\n          ret.push(item);\n        }\n      }\n      return ret;\n    } else {\n      return data[index];\n    }\n  };\n\n  _getItemCount = (data                    )         => {\n    // Legacy behavior of FlatList was to forward \"undefined\" length if invalid\n    // data like a non-arraylike object is passed. VirtualizedList would then\n    // coerce this, and the math would work out to no-op. For compatibility, if\n    // invalid data is passed, we tell VirtualizedList there are zero items\n    // available to prevent it from trying to read from the invalid data\n    // (without propagating invalidly typed data).\n    if (data != null && isArrayLike(data)) {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      return numColumns > 1 ? Math.ceil(data.length / numColumns) : data.length;\n    } else {\n      return 0;\n    }\n  };\n\n  _keyExtractor = (items                      , index        )         => {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n\n    if (numColumns > 1) {\n      invariant(\n        Array.isArray(items),\n        'FlatList: Encountered internal consistency error, expected each item to consist of an ' +\n          'array with 1-%s columns; instead, received a single item.',\n        numColumns,\n      );\n      return items\n        .map((item, kk) =>\n          keyExtractor(((item            )       ), index * numColumns + kk),\n        )\n        .join(':');\n    }\n\n    // $FlowFixMe[incompatible-call] Can't call keyExtractor with an array\n    return keyExtractor(items, index);\n  };\n\n  _pushMultiColumnViewable(arr                  , v           )       {\n    const numColumns = numColumnsOrDefault(this.props.numColumns);\n    const keyExtractor = this.props.keyExtractor ?? defaultKeyExtractor;\n    v.item.forEach((item, ii) => {\n      invariant(v.index != null, 'Missing index!');\n      const index = v.index * numColumns + ii;\n      arr.push({...v, item, key: keyExtractor(item, index), index});\n    });\n  }\n\n  _createOnViewableItemsChanged(\n    onViewableItemsChanged           \n                                      \n                                \n         \n              ,\n    // $FlowFixMe[missing-local-annot]\n  ) {\n    return (info   \n                                      \n                                \n         \n     ) => {\n      const numColumns = numColumnsOrDefault(this.props.numColumns);\n      if (onViewableItemsChanged) {\n        if (numColumns > 1) {\n          const changed                   = [];\n          const viewableItems                   = [];\n          info.viewableItems.forEach(v =>\n            this._pushMultiColumnViewable(viewableItems, v),\n          );\n          info.changed.forEach(v => this._pushMultiColumnViewable(changed, v));\n          onViewableItemsChanged({viewableItems, changed});\n        } else {\n          onViewableItemsChanged(info);\n        }\n      }\n    };\n  }\n\n  _renderer = (\n    ListItemComponent                                                  ,\n    renderItem                        ,\n    columnWrapperStyle                ,\n    numColumns         ,\n    extraData      ,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const cols = numColumnsOrDefault(numColumns);\n\n    const render = (props                        )             => {\n      if (ListItemComponent) {\n        // $FlowFixMe[not-a-component] Component isn't valid\n        // $FlowFixMe[incompatible-type-arg] Component isn't valid\n        // $FlowFixMe[incompatible-return] Component isn't valid\n        return <ListItemComponent {...props} />;\n      } else if (renderItem) {\n        // $FlowFixMe[incompatible-call]\n        return renderItem(props);\n      } else {\n        return null;\n      }\n    };\n\n    const renderProp = (info                        ) => {\n      if (cols > 1) {\n        const {item, index} = info;\n        invariant(\n          Array.isArray(item),\n          'Expected array of items with numColumns > 1',\n        );\n        return (\n          <View style={StyleSheet.compose(styles.row, columnWrapperStyle)}>\n            {item.map((it, kk) => {\n              const element = render({\n                // $FlowFixMe[incompatible-call]\n                item: it,\n                index: index * cols + kk,\n                separators: info.separators,\n              });\n              return element != null ? (\n                <React.Fragment key={kk}>{element}</React.Fragment>\n              ) : null;\n            })}\n          </View>\n        );\n      } else {\n        return render(info);\n      }\n    };\n\n    return ListItemComponent\n      ? {ListItemComponent: renderProp}\n      : {renderItem: renderProp};\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _memoizedRenderer = memoizeOne(this._renderer);\n\n  render()             {\n    const {\n      numColumns,\n      columnWrapperStyle,\n      removeClippedSubviews: _removeClippedSubviews,\n      strictMode = false,\n      ...restProps\n    } = this.props;\n\n    const renderer = strictMode ? this._memoizedRenderer : this._renderer;\n\n    return (\n      // $FlowFixMe[incompatible-exact] - `restProps` (`Props`) is inexact.\n      <VirtualizedList\n        {...restProps}\n        getItem={this._getItem}\n        getItemCount={this._getItemCount}\n        keyExtractor={this._keyExtractor}\n        ref={this._captureRef}\n        viewabilityConfigCallbackPairs={this._virtualizedListPairs}\n        removeClippedSubviews={removeClippedSubviewsOrDefault(\n          _removeClippedSubviews,\n        )}\n        {...renderer(\n          this.props.ListItemComponent,\n          this.props.renderItem,\n          columnWrapperStyle,\n          numColumns,\n          this.props.extraData,\n        )}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  row: {flexDirection: 'row'},\n});\n\nmodule.exports = FlatList;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n                                                                             \n             \n                             \n                              \n                              \n                                         \n\nimport Platform from '../Utilities/Platform';\nimport {VirtualizedSectionList} from '@react-native/virtualized-lists';\nimport * as React from 'react';\n\n                \n\n                                                                   \n\n                                                   \n     \n                                                                                                                 \n    \n                   \n    \n                                   \n                                             \n                                                                          \n                                                                             \n           \n     \n                                     \n   \n\n                                                   \n     \n                                                                                                 \n     \n                       \n               \n                  \n                      \n                 \n                            \n                              \n                                                                              \n         \n      \n       \n                          \n     \n                                                                                                  \n                                                                                               \n                                                       \n     \n                  \n     \n                                                                                                    \n                                                                                                   \n                                                               \n     \n                               \n     \n                                                                   \n     \n                      \n     \n                                                                                                  \n                                                                                                \n                                                                                                \n                                                  \n     \n                                                        \n     \n                                                                                             \n             \n     \n                                                                 \n     \n                                                                                        \n    \n                                                         \n     \n                                  \n   \n\n                                \n           \n                                          \n     \n                                                                               \n                                  \n                                              \n                       \n        \n                                \n                                              \n                     \n        \n                                  \n                                              \n                       \n        \n         \n      \n    \n                             \n                             \n   \n\n/**\n * A performant interface for rendering sectioned lists, supporting the most handy features:\n *\n *  - Fully cross-platform.\n *  - Configurable viewability callbacks.\n *  - List header support.\n *  - List footer support.\n *  - Item separator support.\n *  - Section header support.\n *  - Section separator support.\n *  - Heterogeneous data and item rendering support.\n *  - Pull to Refresh.\n *  - Scroll loading.\n *\n * If you don't need section support and want a simpler interface, use\n * [`<FlatList>`](https://reactnative.dev/docs/flatlist).\n *\n * Simple Examples:\n *\n *     <SectionList\n *       renderItem={({item}) => <ListItem title={item} />}\n *       renderSectionHeader={({section}) => <Header title={section.title} />}\n *       sections={[ // homogeneous rendering between sections\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *         {data: [...], title: ...},\n *       ]}\n *     />\n *\n *     <SectionList\n *       sections={[ // heterogeneous rendering between sections\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *         {data: [...], renderItem: ...},\n *       ]}\n *     />\n *\n * This is a convenience wrapper around [`<VirtualizedList>`](docs/virtualizedlist),\n * and thus inherits its props (as well as those of `ScrollView`) that aren't explicitly listed\n * here, along with the following caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate and momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nexport default class SectionList \n                             \n  extends React.PureComponent                        {\n  props                 ;\n\n  /**\n   * Scrolls to the item at the specified `sectionIndex` and `itemIndex` (within the section)\n   * positioned in the viewable area such that `viewPosition` 0 places it at the top (and may be\n   * covered by a sticky header), 1 at the bottom, and 0.5 centered in the middle. `viewOffset` is a\n   * fixed number of pixels to offset the final target position, e.g. to compensate for sticky\n   * headers.\n   *\n   * Note: cannot scroll to locations outside the render window without specifying the\n   * `getItemLayout` prop.\n   */\n  scrollToLocation(params                            ) {\n    if (this._wrapperListRef != null) {\n      this._wrapperListRef.scrollToLocation(params);\n    }\n  }\n\n  /**\n   * Tells the list an interaction has occurred, which should trigger viewability calculations, e.g.\n   * if `waitForInteractions` is true and the user has not scrolled. This is typically called by\n   * taps on items or by navigation actions.\n   */\n  recordInteraction() {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.recordInteraction();\n  }\n\n  /**\n   * Displays the scroll indicators momentarily.\n   *\n   * @platform ios\n   */\n  flashScrollIndicators() {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    listRef && listRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   */\n  getScrollResponder()                       {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode()      {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      return listRef.getScrollableNode();\n    }\n  }\n\n  setNativeProps(props        ) {\n    const listRef = this._wrapperListRef && this._wrapperListRef.getListRef();\n    if (listRef) {\n      listRef.setNativeProps(props);\n    }\n  }\n\n  render()             {\n    const {\n      stickySectionHeadersEnabled: _stickySectionHeadersEnabled,\n      ...restProps\n    } = this.props;\n    const stickySectionHeadersEnabled =\n      _stickySectionHeadersEnabled ?? Platform.OS === 'ios';\n    return (\n      /* $FlowFixMe[incompatible-type] Error revealed after improved builtin\n       * React utility types */\n      /* $FlowFixMe[incompatible-type] Error revealed after improved builtin\n       * React utility types */\n      <VirtualizedSectionList\n        {...restProps}\n        stickySectionHeadersEnabled={stickySectionHeadersEnabled}\n        ref={this._captureRef}\n        // $FlowFixMe[missing-local-annot]\n        getItemCount={items => items.length}\n        // $FlowFixMe[missing-local-annot]\n        getItem={(items, index) => items[index]}\n      />\n    );\n  }\n\n  _wrapperListRef                                                  ;\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureRef = ref => {\n    this._wrapperListRef = ref;\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nlet isEnabled = false;\n\n/* $FlowFixMe[incompatible-type] Error found due to incomplete typing of\n * Platform.flow.js */\nif (Platform.OS === 'web') {\n  const canUseDOM = Boolean(\n    typeof window !== 'undefined' &&\n      window.document &&\n      window.document.createElement,\n  );\n\n  if (canUseDOM) {\n    /**\n     * Web browsers emulate mouse events (and hover states) after touch events.\n     * This code infers when the currently-in-use modality supports hover\n     * (including for multi-modality devices) and considers \"hover\" to be enabled\n     * if a mouse movement occurs more than 1 second after the last touch event.\n     * This threshold is long enough to account for longer delays between the\n     * browser firing touch and mouse events on low-powered devices.\n     */\n    const HOVER_THRESHOLD_MS = 1000;\n    let lastTouchTimestamp = 0;\n\n    const enableHover = () => {\n      if (isEnabled || Date.now() - lastTouchTimestamp < HOVER_THRESHOLD_MS) {\n        return;\n      }\n      isEnabled = true;\n    };\n\n    const disableHover = () => {\n      lastTouchTimestamp = Date.now();\n      if (isEnabled) {\n        isEnabled = false;\n      }\n    };\n\n    document.addEventListener('touchstart', disableHover, true);\n    document.addEventListener('touchmove', disableHover, true);\n    document.addEventListener('mousemove', enableHover, true);\n  }\n}\n\nexport function isHoverEnabled()          {\n  return isEnabled;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                                     \n             \n            \n             \n             \n             \n                                 \n\nimport SoundManager from '../Components/Sound/SoundManager';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport UIManager from '../ReactNative/UIManager';\nimport {                 normalizeRect} from '../StyleSheet/Rect';\nimport {                 } from '../Types/CoreEventTypes';\nimport Platform from '../Utilities/Platform';\nimport {isHoverEnabled} from './HoverState';\nimport PressabilityPerformanceEventEmitter from './PressabilityPerformanceEventEmitter.js';\nimport {                                           } from './PressabilityTypes.js';\nimport invariant from 'invariant';\n\n                                             \n     \n                                                                             \n                                    \n     \n                        \n\n     \n                                                            \n     \n                      \n\n     \n                                                              \n     \n                        \n\n     \n                                                             \n     \n                                \n\n     \n                                                                          \n      \n                                  \n\n     \n                                                                \n     \n                         \n\n     \n                                                                  \n     \n                          \n\n     \n                                                                            \n                                                                     \n     \n                           \n\n     \n                                                                  \n     \n                         \n\n     \n                                                                   \n     \n                          \n\n     \n                                                                           \n     \n                             \n\n     \n                                          \n     \n                                        \n\n     \n                                         \n     \n                                          \n\n     \n                                                                   \n     \n                                            \n\n     \n                                                                  \n     \n                                             \n\n     \n                                                         \n     \n                                              \n\n     \n                                                    \n     \n                                          \n\n     \n                                                                   \n     \n                                            \n\n     \n                                                                        \n     \n                                              \n\n     \n                                                                  \n     \n                                             \n\n     \n                                                                           \n                                       \n     \n                                  \n    \n\n                                        \n                                     \n                                       \n                                       \n                                             \n                                             \n                                                 \n                                                 \n                                                          \n                                               \n                                                  \n                                                    \n                                               \n                                           \n    \n\n                 \n                   \n                                 \n                                  \n                               \n                                \n                                    \n                                     \n            \n\nconst Transitions = Object.freeze({\n  NOT_RESPONDER: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'ERROR',\n    RESPONDER_TERMINATED: 'ERROR',\n    ENTER_PRESS_RECT: 'ERROR',\n    LEAVE_PRESS_RECT: 'ERROR',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_IN: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_IN',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_INACTIVE_PRESS_OUT: {\n    DELAY: 'RESPONDER_ACTIVE_PRESS_OUT',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_IN: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n  },\n  RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n    DELAY: 'ERROR',\n    RESPONDER_GRANT: 'ERROR',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    LEAVE_PRESS_RECT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    LONG_PRESS_DETECTED: 'ERROR',\n  },\n  ERROR: {\n    DELAY: 'NOT_RESPONDER',\n    RESPONDER_GRANT: 'RESPONDER_INACTIVE_PRESS_IN',\n    RESPONDER_RELEASE: 'NOT_RESPONDER',\n    RESPONDER_TERMINATED: 'NOT_RESPONDER',\n    ENTER_PRESS_RECT: 'NOT_RESPONDER',\n    LEAVE_PRESS_RECT: 'NOT_RESPONDER',\n    LONG_PRESS_DETECTED: 'NOT_RESPONDER',\n  },\n});\n\nconst isActiveSignal = (signal            ) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isActivationSignal = (signal            ) =>\n  signal === 'RESPONDER_ACTIVE_PRESS_OUT' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN';\n\nconst isPressInSignal = (signal            ) =>\n  signal === 'RESPONDER_INACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_PRESS_IN' ||\n  signal === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n\nconst isTerminalSignal = (signal             ) =>\n  signal === 'RESPONDER_TERMINATED' || signal === 'RESPONDER_RELEASE';\n\nconst DEFAULT_LONG_PRESS_DELAY_MS = 500;\nconst DEFAULT_PRESS_RECT_OFFSETS = {\n  bottom: 30,\n  left: 20,\n  right: 20,\n  top: 20,\n};\nconst DEFAULT_MIN_PRESS_DURATION = 130;\n\nconst DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE = 10;\nlet longPressDeactivationDistance = DEFAULT_LONG_PRESS_DEACTIVATION_DISTANCE;\n\n/**\n * Pressability implements press handling capabilities.\n *\n * =========================== Pressability Tutorial ===========================\n *\n * The `Pressability` class helps you create press interactions by analyzing the\n * geometry of elements and observing when another responder (e.g. ScrollView)\n * has stolen the touch lock. It offers hooks for your component to provide\n * interaction feedback to the user:\n *\n * - When a press has activated (e.g. highlight an element)\n * - When a press has deactivated (e.g. un-highlight an element)\n * - When a press should trigger an action, meaning it activated and deactivated\n *   while within the geometry of the element without the lock being stolen.\n *\n * A high quality interaction isn't as simple as you might think. There should\n * be a slight delay before activation. Moving your finger beyond an element's\n * bounds should trigger deactivation, but moving the same finger back within an\n * element's bounds should trigger reactivation.\n *\n * This should be consumed by functional components using `usePressability`. The\n * following steps are only relevant for using `Pressability` in classes:\n *\n * 1. Instantiate `Pressability` and store it on your component's state.\n *\n *    state = {\n *      pressability: new Pressability({\n *        // ...\n *      }),\n *    };\n *\n * 2. Choose the rendered component who should collect the press events. On that\n *    element, spread `pressability.getEventHandlers()` into its props.\n *\n *    return (\n *      <View {...this.state.pressability.getEventHandlers()} />\n *    );\n *\n * 3. Update `Pressability` when your component mounts, updates, and unmounts.\n *\n *    componentDidMount() {\n *      this.state.pressability.configure(...);\n *    }\n *\n *    componentDidUpdate() {\n *      this.state.pressability.configure(...);\n *    }\n *\n *    componentWillUnmount() {\n *      this.state.pressability.reset();\n *    }\n *\n * ==================== Pressability Implementation Details ====================\n *\n * `Pressability` only assumes that there exists a `HitRect` node. The `PressRect`\n * is an abstract box that is extended beyond the `HitRect`.\n *\n * # Geometry\n *\n *  ┌────────────────────────┐\n *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`, which\n *  │  │  ┌────────────┐  │  │   is expanded via the prop `hitSlop`.\n *  │  │  │ VisualRect │  │  │\n *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n *  │  │    HitRect       │  │   before letting up, `VisualRect` activates for\n *  │  └──────────────────┘  │   as long as the press stays within `PressRect`.\n *  │       PressRect    o   │\n *  └────────────────────│───┘\n *          Out Region   └────── `PressRect`, which is expanded via the prop\n *                               `pressRectOffset`, allows presses to move\n *                               beyond `HitRect` while maintaining activation\n *                               and being eligible for a \"press\".\n *\n * # State Machine\n *\n * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n * │ NOT_RESPONDER │\n * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n *     │\n *     │ RESPONDER_GRANT (HitRect)\n *     │\n *     ▼\n * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n * │ PRESS_IN            ├────────▶ │ PRESS_IN          ├────────────▶ │ LONG_PRESS_IN     │\n * └─┬───────────────────┘          └─┬─────────────────┘              └─┬─────────────────┘\n *   │           ▲                    │           ▲                      │           ▲\n *   │LEAVE_     │                    │LEAVE_     │                      │LEAVE_     │\n *   │PRESS_RECT │ENTER_              │PRESS_RECT │ENTER_                │PRESS_RECT │ENTER_\n *   │           │PRESS_RECT          │           │PRESS_RECT            │           │PRESS_RECT\n *   ▼           │                    ▼           │                      ▼           │\n * ┌─────────────┴───────┐          ┌─────────────┴─────┐              ┌─────────────┴─────┐\n * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │              │ RESPONDER_ACTIVE_ │\n * │ PRESS_OUT           ├────────▶ │ PRESS_OUT         │              │ LONG_PRESS_OUT    │\n * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n *\n * T + DELAY => LONG_PRESS_DELAY + DELAY\n *\n * Not drawn are the side effects of each transition. The most important side\n * effect is the invocation of `onPress` and `onLongPress` that occur when a\n * responder is release while in the \"press in\" states.\n */\nexport default class Pressability {\n  _config                    ;\n  _eventHandlers                 = null;\n  _hoverInDelayTimeout             = null;\n  _hoverOutDelayTimeout             = null;\n  _isHovered          = false;\n  _longPressDelayTimeout             = null;\n  _pressDelayTimeout             = null;\n  _pressOutDelayTimeout             = null;\n  _responderID                         = null;\n  _responderRegion               \n                   \n                 \n                  \n                \n      = null;\n  _touchActivatePosition               \n                  \n                  \n     ;\n  _touchActivateTime         ;\n  _touchState             = 'NOT_RESPONDER';\n\n  constructor(config                    ) {\n    this.configure(config);\n  }\n\n  configure(config                    )       {\n    this._config = config;\n  }\n\n  /**\n   * Resets any pending timers. This should be called on unmount.\n   */\n  reset()       {\n    this._cancelHoverInDelayTimeout();\n    this._cancelHoverOutDelayTimeout();\n    this._cancelLongPressDelayTimeout();\n    this._cancelPressDelayTimeout();\n    this._cancelPressOutDelayTimeout();\n\n    // Ensure that, if any async event handlers are fired after unmount\n    // due to a race, we don't call any configured callbacks.\n    this._config = Object.freeze({});\n  }\n\n  /**\n   * Returns a set of props to spread into the interactive element.\n   */\n  getEventHandlers()                {\n    if (this._eventHandlers == null) {\n      this._eventHandlers = this._createEventHandlers();\n    }\n    return this._eventHandlers;\n  }\n\n  static setLongPressDeactivationDistance(distance        )       {\n    longPressDeactivationDistance = distance;\n  }\n\n  _createEventHandlers()                {\n    const focusEventHandlers = {\n      onBlur: (event           )       => {\n        const {onBlur} = this._config;\n        if (onBlur != null) {\n          onBlur(event);\n        }\n      },\n      onFocus: (event            )       => {\n        const {onFocus} = this._config;\n        if (onFocus != null) {\n          onFocus(event);\n        }\n      },\n    };\n\n    const responderEventHandlers = {\n      onStartShouldSetResponder: ()          => {\n        const {disabled} = this._config;\n        return !disabled ?? true;\n      },\n\n      onResponderGrant: (event            )                 => {\n        event.persist();\n\n        this._cancelPressOutDelayTimeout();\n\n        this._responderID = event.currentTarget;\n        this._touchState = 'NOT_RESPONDER';\n        this._receiveSignal('RESPONDER_GRANT', event);\n\n        const delayPressIn = normalizeDelay(this._config.delayPressIn);\n        if (delayPressIn > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal('DELAY', event);\n          }, delayPressIn);\n        } else {\n          this._receiveSignal('DELAY', event);\n        }\n\n        const delayLongPress = normalizeDelay(\n          this._config.delayLongPress,\n          10,\n          DEFAULT_LONG_PRESS_DELAY_MS - delayPressIn,\n        );\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressIn);\n\n        return this._config.blockNativeResponder === true;\n      },\n\n      onResponderMove: (event            )       => {\n        const {onPressMove} = this._config;\n        if (onPressMove != null) {\n          onPressMove(event);\n        }\n\n        // Region may not have finished being measured, yet.\n        const responderRegion = this._responderRegion;\n        if (responderRegion == null) {\n          return;\n        }\n\n        const touch = getTouchFromPressEvent(event);\n        if (touch == null) {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n          return;\n        }\n\n        if (this._touchActivatePosition != null) {\n          const deltaX = this._touchActivatePosition.pageX - touch.pageX;\n          const deltaY = this._touchActivatePosition.pageY - touch.pageY;\n          if (Math.hypot(deltaX, deltaY) > longPressDeactivationDistance) {\n            this._cancelLongPressDelayTimeout();\n          }\n        }\n\n        if (this._isTouchWithinResponderRegion(touch, responderRegion)) {\n          this._receiveSignal('ENTER_PRESS_RECT', event);\n        } else {\n          this._cancelLongPressDelayTimeout();\n          this._receiveSignal('LEAVE_PRESS_RECT', event);\n        }\n      },\n\n      onResponderRelease: (event            )       => {\n        this._receiveSignal('RESPONDER_RELEASE', event);\n      },\n\n      onResponderTerminate: (event            )       => {\n        this._receiveSignal('RESPONDER_TERMINATED', event);\n      },\n\n      onResponderTerminationRequest: ()          => {\n        const {cancelable} = this._config;\n        return cancelable ?? true;\n      },\n\n      onClick: (event            )       => {\n        // If event has `pointerType`, it was emitted from a PointerEvent and\n        // we should ignore it to avoid triggering `onPress` twice.\n        if (event?.nativeEvent?.hasOwnProperty?.('pointerType')) {\n          return;\n        }\n\n        // for non-pointer click events (e.g. accessibility clicks), we should only dispatch when we're the \"real\" target\n        // in particular, we shouldn't respond to clicks from nested pressables\n        if (event?.currentTarget !== event?.target) {\n          event?.stopPropagation();\n          return;\n        }\n\n        const {onPress, disabled} = this._config;\n        if (onPress != null && disabled !== true) {\n          onPress(event);\n        }\n      },\n    };\n\n    if (process.env.NODE_ENV === 'test') {\n      // We are setting this in order to find this node in ReactNativeTestTools\n      // $FlowFixMe[prop-missing]\n      responderEventHandlers.onStartShouldSetResponder.testOnly_pressabilityConfig =\n        () => this._config;\n    }\n\n    if (\n      ReactNativeFeatureFlags.shouldPressibilityUseW3CPointerEventsForHover()\n    ) {\n      const hoverPointerEvents = {\n        onPointerEnter: (undefined                               ),\n        onPointerLeave: (undefined                               ),\n      };\n      const {onHoverIn, onHoverOut} = this._config;\n      if (onHoverIn != null) {\n        hoverPointerEvents.onPointerEnter = (event              ) => {\n          this._isHovered = true;\n          this._cancelHoverOutDelayTimeout();\n          if (onHoverIn != null) {\n            const delayHoverIn = normalizeDelay(this._config.delayHoverIn);\n            if (delayHoverIn > 0) {\n              event.persist();\n              this._hoverInDelayTimeout = setTimeout(() => {\n                onHoverIn(convertPointerEventToMouseEvent(event));\n              }, delayHoverIn);\n            } else {\n              onHoverIn(convertPointerEventToMouseEvent(event));\n            }\n          }\n        };\n      }\n      if (onHoverOut != null) {\n        hoverPointerEvents.onPointerLeave = (event              ) => {\n          if (this._isHovered) {\n            this._isHovered = false;\n            this._cancelHoverInDelayTimeout();\n            if (onHoverOut != null) {\n              const delayHoverOut = normalizeDelay(this._config.delayHoverOut);\n              if (delayHoverOut > 0) {\n                event.persist();\n                this._hoverOutDelayTimeout = setTimeout(() => {\n                  onHoverOut(convertPointerEventToMouseEvent(event));\n                }, delayHoverOut);\n              } else {\n                onHoverOut(convertPointerEventToMouseEvent(event));\n              }\n            }\n          }\n        };\n      }\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...hoverPointerEvents,\n      };\n    } else {\n      const mouseEventHandlers =\n        Platform.OS === 'ios' || Platform.OS === 'android'\n          ? null\n          : {\n              onMouseEnter: (event            )       => {\n                if (isHoverEnabled()) {\n                  this._isHovered = true;\n                  this._cancelHoverOutDelayTimeout();\n                  const {onHoverIn} = this._config;\n                  if (onHoverIn != null) {\n                    const delayHoverIn = normalizeDelay(\n                      this._config.delayHoverIn,\n                    );\n                    if (delayHoverIn > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverIn(event);\n                      }, delayHoverIn);\n                    } else {\n                      onHoverIn(event);\n                    }\n                  }\n                }\n              },\n\n              onMouseLeave: (event            )       => {\n                if (this._isHovered) {\n                  this._isHovered = false;\n                  this._cancelHoverInDelayTimeout();\n                  const {onHoverOut} = this._config;\n                  if (onHoverOut != null) {\n                    const delayHoverOut = normalizeDelay(\n                      this._config.delayHoverOut,\n                    );\n                    if (delayHoverOut > 0) {\n                      event.persist();\n                      this._hoverInDelayTimeout = setTimeout(() => {\n                        onHoverOut(event);\n                      }, delayHoverOut);\n                    } else {\n                      onHoverOut(event);\n                    }\n                  }\n                }\n              },\n            };\n      return {\n        ...focusEventHandlers,\n        ...responderEventHandlers,\n        ...mouseEventHandlers,\n      };\n    }\n  }\n\n  /**\n   * Receives a state machine signal, performs side effects of the transition\n   * and stores the new state. Validates the transition as well.\n   */\n  _receiveSignal(signal             , event            )       {\n    // Especially on iOS, not all events have timestamps associated.\n    // For telemetry purposes, this doesn't matter too much, as long as *some* do.\n    // Since the native timestamp is integral for logging telemetry, just skip\n    // events if they don't have a timestamp attached.\n    if (event.nativeEvent.timestamp != null) {\n      PressabilityPerformanceEventEmitter.emitEvent(() => {\n        return {\n          signal,\n          nativeTimestamp: event.nativeEvent.timestamp,\n        };\n      });\n    }\n\n    const prevState = this._touchState;\n    const nextState = Transitions[prevState]?.[signal];\n    if (this._responderID == null && signal === 'RESPONDER_RELEASE') {\n      return;\n    }\n    invariant(\n      nextState != null && nextState !== 'ERROR',\n      'Pressability: Invalid signal `%s` for state `%s` on responder: %s',\n      signal,\n      prevState,\n      typeof this._responderID === 'number'\n        ? this._responderID\n        : '<<host component>>',\n    );\n    if (prevState !== nextState) {\n      this._performTransitionSideEffects(prevState, nextState, signal, event);\n      this._touchState = nextState;\n    }\n  }\n\n  /**\n   * Performs a transition between touchable states and identify any activations\n   * or deactivations (and callback invocations).\n   */\n  _performTransitionSideEffects(\n    prevState            ,\n    nextState            ,\n    signal             ,\n    event            ,\n  )       {\n    if (isTerminalSignal(signal)) {\n      this._touchActivatePosition = null;\n      this._cancelLongPressDelayTimeout();\n    }\n\n    const isInitialTransition =\n      prevState === 'NOT_RESPONDER' &&\n      nextState === 'RESPONDER_INACTIVE_PRESS_IN';\n\n    const isActivationTransition =\n      !isActivationSignal(prevState) && isActivationSignal(nextState);\n\n    if (isInitialTransition || isActivationTransition) {\n      this._measureResponderRegion();\n    }\n\n    if (isPressInSignal(prevState) && signal === 'LONG_PRESS_DETECTED') {\n      const {onLongPress} = this._config;\n      if (onLongPress != null) {\n        onLongPress(event);\n      }\n    }\n\n    const isPrevActive = isActiveSignal(prevState);\n    const isNextActive = isActiveSignal(nextState);\n\n    if (!isPrevActive && isNextActive) {\n      this._activate(event);\n    } else if (isPrevActive && !isNextActive) {\n      this._deactivate(event);\n    }\n\n    if (isPressInSignal(prevState) && signal === 'RESPONDER_RELEASE') {\n      // If we never activated (due to delays), activate and deactivate now.\n      if (!isNextActive && !isPrevActive) {\n        this._activate(event);\n        this._deactivate(event);\n      }\n      const {onLongPress, onPress, android_disableSound} = this._config;\n      if (onPress != null) {\n        const isPressCanceledByLongPress =\n          onLongPress != null && prevState === 'RESPONDER_ACTIVE_LONG_PRESS_IN';\n        if (!isPressCanceledByLongPress) {\n          if (Platform.OS === 'android' && android_disableSound !== true) {\n            SoundManager.playTouchSound();\n          }\n          onPress(event);\n        }\n      }\n    }\n\n    this._cancelPressDelayTimeout();\n  }\n\n  _activate(event            )       {\n    const {onPressIn} = this._config;\n    const {pageX, pageY} = getTouchFromPressEvent(event);\n    this._touchActivatePosition = {pageX, pageY};\n    this._touchActivateTime = Date.now();\n    if (onPressIn != null) {\n      onPressIn(event);\n    }\n  }\n\n  _deactivate(event            )       {\n    const {onPressOut} = this._config;\n    if (onPressOut != null) {\n      const minPressDuration = normalizeDelay(\n        this._config.minPressDuration,\n        0,\n        DEFAULT_MIN_PRESS_DURATION,\n      );\n      const pressDuration = Date.now() - (this._touchActivateTime ?? 0);\n      const delayPressOut = Math.max(\n        minPressDuration - pressDuration,\n        normalizeDelay(this._config.delayPressOut),\n      );\n      if (delayPressOut > 0) {\n        event.persist();\n        this._pressOutDelayTimeout = setTimeout(() => {\n          onPressOut(event);\n        }, delayPressOut);\n      } else {\n        onPressOut(event);\n      }\n    }\n    this._touchActivateTime = null;\n  }\n\n  _measureResponderRegion()       {\n    if (this._responderID == null) {\n      return;\n    }\n\n    if (typeof this._responderID === 'number') {\n      UIManager.measure(this._responderID, this._measureCallback);\n    } else {\n      this._responderID.measure(this._measureCallback);\n    }\n  }\n\n  _measureCallback = (\n    left        ,\n    top        ,\n    width        ,\n    height        ,\n    pageX        ,\n    pageY        ,\n  ) => {\n    if (!left && !top && !width && !height && !pageX && !pageY) {\n      return;\n    }\n    this._responderRegion = {\n      bottom: pageY + height,\n      left: pageX,\n      right: pageX + width,\n      top: pageY,\n    };\n  };\n\n  _isTouchWithinResponderRegion(\n    touch                                          ,\n    responderRegion              \n                     \n                   \n                    \n                  \n       ,\n  )          {\n    const hitSlop = normalizeRect(this._config.hitSlop);\n    const pressRectOffset = normalizeRect(this._config.pressRectOffset);\n\n    let regionBottom = responderRegion.bottom;\n    let regionLeft = responderRegion.left;\n    let regionRight = responderRegion.right;\n    let regionTop = responderRegion.top;\n\n    if (hitSlop != null) {\n      if (hitSlop.bottom != null) {\n        regionBottom += hitSlop.bottom;\n      }\n      if (hitSlop.left != null) {\n        regionLeft -= hitSlop.left;\n      }\n      if (hitSlop.right != null) {\n        regionRight += hitSlop.right;\n      }\n      if (hitSlop.top != null) {\n        regionTop -= hitSlop.top;\n      }\n    }\n\n    regionBottom +=\n      pressRectOffset?.bottom ?? DEFAULT_PRESS_RECT_OFFSETS.bottom;\n    regionLeft -= pressRectOffset?.left ?? DEFAULT_PRESS_RECT_OFFSETS.left;\n    regionRight += pressRectOffset?.right ?? DEFAULT_PRESS_RECT_OFFSETS.right;\n    regionTop -= pressRectOffset?.top ?? DEFAULT_PRESS_RECT_OFFSETS.top;\n\n    return (\n      touch.pageX > regionLeft &&\n      touch.pageX < regionRight &&\n      touch.pageY > regionTop &&\n      touch.pageY < regionBottom\n    );\n  }\n\n  _handleLongPress(event            )       {\n    if (\n      this._touchState === 'RESPONDER_ACTIVE_PRESS_IN' ||\n      this._touchState === 'RESPONDER_ACTIVE_LONG_PRESS_IN'\n    ) {\n      this._receiveSignal('LONG_PRESS_DETECTED', event);\n    }\n  }\n\n  _cancelHoverInDelayTimeout()       {\n    if (this._hoverInDelayTimeout != null) {\n      clearTimeout(this._hoverInDelayTimeout);\n      this._hoverInDelayTimeout = null;\n    }\n  }\n\n  _cancelHoverOutDelayTimeout()       {\n    if (this._hoverOutDelayTimeout != null) {\n      clearTimeout(this._hoverOutDelayTimeout);\n      this._hoverOutDelayTimeout = null;\n    }\n  }\n\n  _cancelLongPressDelayTimeout()       {\n    if (this._longPressDelayTimeout != null) {\n      clearTimeout(this._longPressDelayTimeout);\n      this._longPressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressDelayTimeout()       {\n    if (this._pressDelayTimeout != null) {\n      clearTimeout(this._pressDelayTimeout);\n      this._pressDelayTimeout = null;\n    }\n  }\n\n  _cancelPressOutDelayTimeout()       {\n    if (this._pressOutDelayTimeout != null) {\n      clearTimeout(this._pressOutDelayTimeout);\n      this._pressOutDelayTimeout = null;\n    }\n  }\n}\n\nfunction normalizeDelay(\n  delay         ,\n  min         = 0,\n  fallback         = 0,\n)         {\n  return Math.max(min, delay ?? fallback);\n}\n\nconst getTouchFromPressEvent = (event            ) => {\n  const {changedTouches, touches} = event.nativeEvent;\n\n  if (touches != null && touches.length > 0) {\n    return touches[0];\n  }\n  if (changedTouches != null && changedTouches.length > 0) {\n    return changedTouches[0];\n  }\n  return event.nativeEvent;\n};\n\nfunction convertPointerEventToMouseEvent(input              )             {\n  const {clientX, clientY} = input.nativeEvent;\n  return {\n    ...input,\n    nativeEvent: {\n      clientX,\n      clientY,\n      pageX: clientX,\n      pageY: clientY,\n      timestamp: input.timeStamp,\n    },\n  };\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                         \n\nimport View from '../Components/View/View';\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport {                 normalizeRect} from '../StyleSheet/Rect';\nimport * as React from 'react';\n\n                         \n                    \n                       \n    \n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView(props       )             {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(props.color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n      const hitSlop = normalizeRect(props.hitSlop);\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={\n            // eslint-disable-next-line react-native/no-inline-styles\n            {\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              bottom: -(hitSlop?.bottom ?? 0),\n              left: -(hitSlop?.left ?? 0),\n              position: 'absolute',\n              right: -(hitSlop?.right ?? 0),\n              top: -(hitSlop?.top ?? 0),\n            }\n          }\n        />\n      );\n    }\n  }\n  return null;\n}\n\nlet isDebugEnabled = false;\n\nexport function isEnabled()          {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\n\nexport function setEnabled(value         )       {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nimport {                                           } from './PressabilityTypes.js';\n\n                                                       \n                      \n                          \n    \n                                                  \n                                       \n\nclass PressabilityPerformanceEventEmitter {\n  _listeners                                              = [];\n\n  constructor() {}\n\n  addListener(listener                                      )       {\n    this._listeners.push(listener);\n  }\n\n  removeListener(listener                                      )       {\n    const index = this._listeners.indexOf(listener);\n    if (index > -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  emitEvent(constructEvent                                    )       {\n    if (this._listeners.length === 0) {\n      return;\n    }\n\n    const event = constructEvent();\n    this._listeners.forEach(listener => listener(event));\n  }\n}\n\nconst PressabilityPerformanceEventEmitterSingleton                                      =\n  new PressabilityPerformanceEventEmitter();\n\nexport default PressabilityPerformanceEventEmitterSingleton;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\nimport Pressability, {\n                     \n                          \n} from './Pressability';\nimport {useEffect, useRef} from 'react';\n\n                                                                            \n                                                                            \n\n/**\n * Creates a persistent instance of `Pressability` that automatically configures\n * itself and resets. Accepts null `config` to support lazy initialization. Once\n * initialized, will not un-initialize until the component has been unmounted.\n *\n * In order to use `usePressability`, do the following:\n *\n *   const config = useMemo(...);\n *   const eventHandlers = usePressability(config);\n *   const pressableView = <View {...eventHandlers} />;\n *\n */\nexport default function usePressability(\n  config                     ,\n)                       {\n  const pressabilityRef = useRef               (null);\n  if (config != null && pressabilityRef.current == null) {\n    pressabilityRef.current = new Pressability(config);\n  }\n  const pressability = pressabilityRef.current;\n\n  // On the initial mount, this is a no-op. On updates, `pressability` will be\n  // re-configured to use the new configuration.\n  useEffect(() => {\n    if (config != null && pressability != null) {\n      pressability.configure(config);\n    }\n  }, [config, pressability]);\n\n  // On unmount, reset pending state and timers inside `pressability`. This is\n  // a separate effect because we do not want to reset when `config` changes.\n  useEffect(() => {\n    if (pressability != null) {\n      return () => {\n        pressability.reset();\n      };\n    }\n  }, [pressability]);\n\n  return pressability == null ? null : pressability.getEventHandlers();\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n/**\n * IMPORTANT!!\n *\n * This module cannot import `ReactFabric` (directly or indirectly)\n * because it can be used by apps only using the legacy renderer.\n * In that case `nativeFabricUIManager` isn't defined and `ReactFabric` throws.\n */\n\nexport function isPublicInstance(maybeInstance       )          {\n  return (\n    maybeInstance != null &&\n    // TODO: implement a better check when the instance is defined in the React Native repository.\n    (maybeInstance.__nativeTag != null ||\n      // TODO: remove this check when syncing the new version of the renderer from React to React Native.\n      isLegacyFabricInstance(maybeInstance))\n  );\n}\n\nfunction isLegacyFabricInstance(maybeInstance       )          {\n  /* eslint-disable dot-notation */\n  return (\n    maybeInstance != null &&\n    // $FlowExpectedError[incompatible-use]\n    maybeInstance['_internalInstanceHandle'] != null &&\n    maybeInstance['_internalInstanceHandle'].stateNode != null &&\n    maybeInstance['_internalInstanceHandle'].stateNode.canonical != null\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n                             \n     \n                                                                                  \n                                                                                \n                                          \n                                                       \n     \n                                            \n     \n                                                                                 \n                            \n     \n                                                               \n   \n\nconst ReactNativeFeatureFlags               = {\n  shouldEmitW3CPointerEvents: () => false,\n  shouldPressibilityUseW3CPointerEventsForHover: () => false,\n};\n\nmodule.exports = ReactNativeFeatureFlags;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noformat\n * @nolint\n *       strict-local\n * @generated SignedSource<<52163887de05f1cff05388145cf85b3b>>\n */\n\n'use strict';\n\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {               } from './ReactNativeTypes';\n\nconst {register} = ReactNativeViewConfigRegistry;\n\n/**\n * Creates a renderable ReactNative host component.\n * Use this method for view configs that are loaded from UIManager.\n * Use createReactNativeComponentClass() for view configs defined within JavaScript.\n *\n * @param {string} config iOS View configuration.\n * @private\n */\nconst createReactNativeComponentClass = function (\n  name        ,\n  callback                  ,\n)         {\n  return register(name, callback);\n};\n\nexport default createReactNativeComponentClass;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n                               \n                   \n                 \n                  \n                \n    \n\n                                       \n\nexport function createSquare(size        )       {\n  return {bottom: size, left: size, right: size, top: size};\n}\n\nexport function normalizeRect(rectOrSize             )        {\n  return typeof rectOrSize === 'number' ? createSquare(rectOrSize) : rectOrSize;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *      \n * @format\n */\n\n'use strict';\n\n             \n                          \n                                         \n                                             \n                          \n                              \n                      \n                         \n                             \n                         \n                             \n                           \n\nimport composeStyles from '../../src/private/styles/composeStyles';\n\nconst ReactNativeStyleAttributes = require('../Components/View/ReactNativeStyleAttributes');\nconst PixelRatio = require('../Utilities/PixelRatio').default;\nconst flatten = require('./flattenStyle');\n\n                                                        \n\n/**\n * This type should be used as the type for anything that is a color. It is\n * most useful when using DynamicColorIOS which can be a string or a dynamic\n * color object.\n *\n * type props = {backgroundColor: ColorValue};\n */\n                                                 \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <View>'s `style` prop. This ensures call sites of the component\n * can't pass styles that View doesn't support such as `fontSize`.`\n *\n * type Props = {style: ViewStyleProp}\n * const MyComponent = (props: Props) => <View style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to a <Text>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Text doesn't support such as `resizeMode`.`\n *\n * type Props = {style: TextStyleProp}\n * const MyComponent = (props: Props) => <Text style={props.style} />\n */\n                                                       \n\n/**\n * This type should be used as the type for a prop that is passed through\n * to an <Image>'s `style` prop. This ensures call sites of the component\n * can't pass styles that Image doesn't support such as `fontSize`.`\n *\n * type Props = {style: ImageStyleProp}\n * const MyComponent = (props: Props) => <Image style={props.style} />\n */\n                                                         \n\n/**\n * WARNING: You probably shouldn't be using this type. This type\n * is similar to the ones above except it allows styles that are accepted\n * by all of View, Text, or Image. It is therefore very unsafe to pass this\n * through to an underlying component. Using this is almost always a mistake\n * and using one of the other more restrictive types is likely the right choice.\n */\n                                           \n                                             \n\n/**\n * Utility type for getting the values for specific style keys.\n *\n * The following is bad because position is more restrictive than 'string':\n * ```\n * type Props = {position: string};\n * ```\n *\n * You should use the following instead:\n *\n * ```\n * type Props = {position: TypeForStyleKey<'position'>};\n * ```\n *\n * This will correctly give you the type 'absolute' | 'relative'\n */\n                            \n                                                      \n                                                              \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for View.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ViewStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a View that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Text.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using TextStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to a Text that can't be precomputed with\n * StyleSheet.create.\n */\n                                               \n\n/**\n * This type is an object of the different possible style\n * properties that can be specified for Image.\n *\n * Note that this isn't a safe way to type a style prop for a component as\n * results from StyleSheet.create return an internal identifier, not\n * an object of styles.\n *\n * If you want to type the style prop of a function,\n * consider using ImageStyleProp.\n *\n * A reasonable usage of this type is for helper functions that return an\n * object of styles to pass to an Image that can't be precomputed with\n * StyleSheet.create.\n */\n                                                 \n\n/**\n * WARNING: You probably shouldn't be using this type. This type is an object\n * with all possible style keys and their values. Note that this isn't\n * a safe way to type a style prop for a component as results from\n * StyleSheet.create return an internal identifier, not an object of styles.\n *\n * If you want to type the style prop of a function, consider using\n * ViewStyleProp, TextStyleProp, or ImageStyleProp.\n *\n * This should only be used by very core utilities that operate on an object\n * containing any possible style value.\n */\n                                                                               \n\nlet hairlineWidth         = PixelRatio.roundToNearestPixel(0.4);\nif (hairlineWidth === 0) {\n  hairlineWidth = 1 / PixelRatio.get();\n}\n\nconst absoluteFill   \n             \n           \n                        \n            \n          \n  = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0,\n};\nif (__DEV__) {\n  Object.freeze(absoluteFill);\n}\n\n/**\n * A StyleSheet is an abstraction similar to CSS StyleSheets\n *\n * Create a new StyleSheet:\n *\n * ```\n * const styles = StyleSheet.create({\n *   container: {\n *     borderRadius: 4,\n *     borderWidth: 0.5,\n *     borderColor: '#d6d7da',\n *   },\n *   title: {\n *     fontSize: 19,\n *     fontWeight: 'bold',\n *   },\n *   activeTitle: {\n *     color: 'red',\n *   },\n * });\n * ```\n *\n * Use a StyleSheet:\n *\n * ```\n * <View style={styles.container}>\n *   <Text style={[styles.title, this.props.isActive && styles.activeTitle]} />\n * </View>\n * ```\n *\n * Code quality:\n *\n *  - By moving styles away from the render function, you're making the code\n *    easier to understand.\n *  - Naming the styles is a good way to add meaning to the low level components\n *  in the render function, and encourage reuse.\n *  - In most IDEs, using `StyleSheet.create()` will offer static type checking\n *  and suggestions to help you write valid styles.\n *\n */\nmodule.exports = {\n  /**\n   * This is defined as the width of a thin line on the platform. It can be\n   * used as the thickness of a border or division between two elements.\n   * Example:\n   * ```\n   *   {\n   *     borderBottomColor: '#bbb',\n   *     borderBottomWidth: StyleSheet.hairlineWidth\n   *   }\n   * ```\n   *\n   * This constant will always be a round number of pixels (so a line defined\n   * by it look crisp) and will try to match the standard width of a thin line\n   * on the underlying platform. However, you should not rely on it being a\n   * constant size, because on different platforms and screen densities its\n   * value may be calculated differently.\n   *\n   * A line with hairline width may not be visible if your simulator is downscaled.\n   */\n  hairlineWidth,\n\n  /**\n   * A very common pattern is to create overlays with position absolute and zero positioning,\n   * so `absoluteFill` can be used for convenience and to reduce duplication of these repeated\n   * styles.\n   */\n  absoluteFill: (absoluteFill     ), // TODO: This should be updated after we fix downstream Flow sites.\n\n  /**\n   * Sometimes you may want `absoluteFill` but with a couple tweaks - `absoluteFillObject` can be\n   * used to create a customized entry in a `StyleSheet`, e.g.:\n   *\n   *   const styles = StyleSheet.create({\n   *     wrapper: {\n   *       ...StyleSheet.absoluteFillObject,\n   *       top: 10,\n   *       backgroundColor: 'transparent',\n   *     },\n   *   });\n   */\n  absoluteFillObject: absoluteFill,\n\n  /**\n   * Combines two styles such that `style2` will override any styles in `style1`.\n   * If either style is falsy, the other one is returned without allocating an\n   * array, saving allocations and maintaining reference equality for\n   * PureComponent checks.\n   */\n  compose: composeStyles,\n\n  /**\n   * Flattens an array of style objects, into one aggregated style object.\n   *\n   * Example:\n   * ```\n   * const styles = StyleSheet.create({\n   *   listItem: {\n   *     flex: 1,\n   *     fontSize: 16,\n   *     color: 'white'\n   *   },\n   *   selectedListItem: {\n   *     color: 'green'\n   *   }\n   * });\n   *\n   * StyleSheet.flatten([styles.listItem, styles.selectedListItem])\n   * // returns { flex: 1, fontSize: 16, color: 'green' }\n   * ```\n   */\n  flatten,\n\n  /**\n   * WARNING: EXPERIMENTAL. Breaking changes will probably happen a lot and will\n   * not be reliably announced. The whole thing might be deleted, who knows? Use\n   * at your own risk.\n   *\n   * Sets a function to use to pre-process a style property value. This is used\n   * internally to process color and transform values. You should not use this\n   * unless you really know what you are doing and have exhausted other options.\n   */\n  setStyleAttributePreprocessor(\n    property        ,\n    process                            ,\n  ) {\n    let value;\n\n    if (ReactNativeStyleAttributes[property] === true) {\n      value = {process};\n    } else if (typeof ReactNativeStyleAttributes[property] === 'object') {\n      value = {...ReactNativeStyleAttributes[property], process};\n    } else {\n      console.error(`${property} is not a valid style attribute`);\n      return;\n    }\n\n    if (\n      __DEV__ &&\n      typeof value.process === 'function' &&\n      typeof ReactNativeStyleAttributes[property]?.process === 'function' &&\n      value.process !== ReactNativeStyleAttributes[property]?.process\n    ) {\n      console.warn(`Overwriting ${property} style attribute preprocessor`);\n    }\n\n    ReactNativeStyleAttributes[property] = value;\n  },\n\n  /**\n   * An identity function for creating style sheets.\n   */\n  // $FlowFixMe[unsupported-variance-annotation]\n  create                         (obj   )               {\n    // TODO: This should return S as the return type. But first,\n    // we need to codemod all the callsites that are typing this\n    // return value as a number (even though it was opaque).\n    if (__DEV__) {\n      for (const key in obj) {\n        if (obj[key]) {\n          Object.freeze(obj[key]);\n        }\n      }\n    }\n    return obj;\n  },\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                              \n\nexport default function splitLayoutProps(props                         )   \n                                 \n                                 \n  {\n  let outer                          = null;\n  let inner                          = null;\n\n  if (props != null) {\n    // $FlowIgnore[incompatible-exact] Will contain a subset of keys from `props`.\n    outer = {};\n    // $FlowIgnore[incompatible-exact] Will contain a subset of keys from `props`.\n    inner = {};\n\n    for (const prop of Object.keys(props)) {\n      switch (prop) {\n        case 'margin':\n        case 'marginHorizontal':\n        case 'marginVertical':\n        case 'marginBottom':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginRight':\n        case 'flex':\n        case 'flexGrow':\n        case 'flexShrink':\n        case 'flexBasis':\n        case 'alignSelf':\n        case 'height':\n        case 'minHeight':\n        case 'maxHeight':\n        case 'width':\n        case 'minWidth':\n        case 'maxWidth':\n        case 'position':\n        case 'left':\n        case 'right':\n        case 'bottom':\n        case 'top':\n        case 'transform':\n        case 'transformOrigin':\n        case 'rowGap':\n        case 'columnGap':\n        case 'gap':\n          // $FlowFixMe[cannot-write]\n          // $FlowFixMe[incompatible-use]\n          // $FlowFixMe[prop-missing]\n          outer[prop] = props[prop];\n          break;\n        default:\n          // $FlowFixMe[cannot-write]\n          // $FlowFixMe[incompatible-use]\n          // $FlowFixMe[prop-missing]\n          inner[prop] = props[prop];\n          break;\n      }\n    }\n  }\n\n  return {outer, inner};\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n                                                            \n                                                                                               \n                                                        \n                                                           \n                                                                 \n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n                                       \n                                               \n  \n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text            \n                                       \n                     \n  = React.forwardRef(\n  (\n    {\n      accessible,\n      accessibilityLabel,\n      accessibilityState,\n      allowFontScaling,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-label': ariaLabel,\n      'aria-selected': ariaSelected,\n      children,\n      ellipsizeMode,\n      disabled,\n      id,\n      nativeID,\n      numberOfLines,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      pressRetentionOffset,\n      selectable,\n      selectionColor,\n      suppressHighlighting,\n      style,\n      ...restProps\n    }           ,\n    forwardedRef,\n  ) => {\n    const _accessibilityLabel = ariaLabel ?? accessibilityLabel;\n\n    let _accessibilityState                                   =\n      accessibilityState;\n    if (\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      if (_accessibilityState != null) {\n        _accessibilityState = {\n          busy: ariaBusy ?? _accessibilityState.busy,\n          checked: ariaChecked ?? _accessibilityState.checked,\n          disabled: ariaDisabled ?? _accessibilityState.disabled,\n          expanded: ariaExpanded ?? _accessibilityState.expanded,\n          selected: ariaSelected ?? _accessibilityState.selected,\n        };\n      } else {\n        _accessibilityState = {\n          busy: ariaBusy,\n          checked: ariaChecked,\n          disabled: ariaDisabled,\n          expanded: ariaExpanded,\n          selected: ariaSelected,\n        };\n      }\n    }\n\n    const _accessibilityStateDisabled = _accessibilityState?.disabled;\n    const _disabled = disabled ?? _accessibilityStateDisabled;\n\n    const isPressable =\n      (onPress != null ||\n        onLongPress != null ||\n        onStartShouldSetResponder != null) &&\n      _disabled !== true;\n\n    // TODO: Move this processing to the view configuration.\n    const _selectionColor =\n      selectionColor != null ? processColor(selectionColor) : undefined;\n\n    let _style = style;\n    if (__DEV__) {\n      if (PressabilityDebug.isEnabled() && onPress != null) {\n        _style = [style, {color: 'magenta'}];\n      }\n    }\n\n    let _numberOfLines = numberOfLines;\n    if (_numberOfLines != null && !(_numberOfLines >= 0)) {\n      if (__DEV__) {\n        console.error(\n          `'numberOfLines' in <Text> must be a non-negative number, received: ${_numberOfLines}. The value will be set to 0.`,\n        );\n      }\n      _numberOfLines = 0;\n    }\n\n    let _selectable = selectable;\n\n    let processedStyle = flattenStyle               (_style);\n    if (processedStyle != null) {\n      let overrides                          = null;\n      if (typeof processedStyle.fontWeight === 'number') {\n        overrides = overrides || ({}                        );\n        overrides.fontWeight =\n          // $FlowFixMe[incompatible-cast]\n          (processedStyle.fontWeight.toString()                                 );\n      }\n\n      if (processedStyle.userSelect != null) {\n        _selectable = userSelectToSelectableMap[processedStyle.userSelect];\n        overrides = overrides || ({}                        );\n        overrides.userSelect = undefined;\n      }\n\n      if (processedStyle.verticalAlign != null) {\n        overrides = overrides || ({}                        );\n        overrides.textAlignVertical =\n          verticalAlignToTextAlignVerticalMap[processedStyle.verticalAlign];\n        overrides.verticalAlign = undefined;\n      }\n\n      if (overrides != null) {\n        // $FlowFixMe[incompatible-type]\n        _style = [_style, overrides];\n      }\n    }\n\n    const _nativeID = id ?? nativeID;\n\n    const hasTextAncestor = useContext(TextAncestor);\n    if (hasTextAncestor) {\n      if (isPressable) {\n        return (\n          <NativePressableVirtualText\n            ref={forwardedRef}\n            textProps={{\n              ...restProps,\n              accessibilityLabel: _accessibilityLabel,\n              accessibilityState: _accessibilityState,\n              nativeID: _nativeID,\n              numberOfLines: _numberOfLines,\n              selectable: _selectable,\n              selectionColor: _selectionColor,\n              style: _style,\n              disabled: disabled,\n              children,\n            }}\n            textPressabilityProps={{\n              onLongPress,\n              onPress,\n              onPressIn,\n              onPressOut,\n              onResponderGrant,\n              onResponderMove,\n              onResponderRelease,\n              onResponderTerminate,\n              onResponderTerminationRequest,\n              onStartShouldSetResponder,\n              pressRetentionOffset,\n              suppressHighlighting,\n            }}\n          />\n        );\n      }\n\n      return (\n        <NativeVirtualText\n          {...restProps}\n          accessibilityLabel={_accessibilityLabel}\n          accessibilityState={_accessibilityState}\n          nativeID={_nativeID}\n          numberOfLines={_numberOfLines}\n          ref={forwardedRef}\n          selectable={_selectable}\n          selectionColor={_selectionColor}\n          style={_style}\n          disabled={disabled}>\n          {children}\n        </NativeVirtualText>\n      );\n    }\n\n    // If the disabled prop and accessibilityState.disabled are out of sync but not both in\n    // falsy states we need to update the accessibilityState object to use the disabled prop.\n    if (\n      _disabled !== _accessibilityStateDisabled &&\n      ((_disabled != null && _disabled !== false) ||\n        (_accessibilityStateDisabled != null &&\n          _accessibilityStateDisabled !== false))\n    ) {\n      _accessibilityState = {..._accessibilityState, disabled: _disabled};\n    }\n\n    const _accessible = Platform.select({\n      ios: accessible !== false,\n      android:\n        accessible == null\n          ? onPress != null || onLongPress != null\n          : accessible,\n      default: accessible,\n    });\n\n    let nativeText = null;\n    if (isPressable) {\n      nativeText = (\n        <NativePressableText\n          ref={forwardedRef}\n          textProps={{\n            ...restProps,\n            accessibilityLabel: _accessibilityLabel,\n            accessibilityState: _accessibilityState,\n            accessible: _accessible,\n            allowFontScaling: allowFontScaling !== false,\n            disabled: _disabled,\n            ellipsizeMode: ellipsizeMode ?? 'tail',\n            nativeID: _nativeID,\n            numberOfLines: _numberOfLines,\n            selectable: _selectable,\n            selectionColor: _selectionColor,\n            style: _style,\n            children,\n          }}\n          textPressabilityProps={{\n            onLongPress,\n            onPress,\n            onPressIn,\n            onPressOut,\n            onResponderGrant,\n            onResponderMove,\n            onResponderRelease,\n            onResponderTerminate,\n            onResponderTerminationRequest,\n            onStartShouldSetResponder,\n            pressRetentionOffset,\n            suppressHighlighting,\n          }}\n        />\n      );\n    } else {\n      nativeText = (\n        <NativeText\n          {...restProps}\n          accessibilityLabel={_accessibilityLabel}\n          accessibilityState={_accessibilityState}\n          accessible={_accessible}\n          allowFontScaling={allowFontScaling !== false}\n          disabled={_disabled}\n          ellipsizeMode={ellipsizeMode ?? 'tail'}\n          nativeID={_nativeID}\n          numberOfLines={_numberOfLines}\n          ref={forwardedRef}\n          selectable={_selectable}\n          selectionColor={_selectionColor}\n          style={_style}>\n          {children}\n        </NativeText>\n      );\n    }\n\n    if (children == null) {\n      return nativeText;\n    }\n\n    // If the children do not contain a JSX element it would not be possible to have a\n    // nested `Text` component so we can skip adding the `TextAncestor` context wrapper\n    // which has a performance overhead. Since we do this for performance reasons we need\n    // to keep the check simple to avoid regressing overall perf. For this reason the\n    // `children.length` constant is set to `3`, this should be a reasonable tradeoff\n    // to capture the majority of `Text` uses but also not make this check too expensive.\n    if (Array.isArray(children) && children.length <= 3) {\n      let hasNonTextChild = false;\n      for (let child of children) {\n        if (child != null && typeof child === 'object') {\n          hasNonTextChild = true;\n          break;\n        }\n      }\n      if (!hasNonTextChild) {\n        return nativeText;\n      }\n    } else if (typeof children !== 'object') {\n      return nativeText;\n    }\n\n    return (\n      <TextAncestor.Provider value={true}>{nativeText}</TextAncestor.Provider>\n    );\n  },\n);\n\nText.displayName = 'Text';\n\n                                        \n                                              \n                                          \n                                            \n                                             \n                                                  \n                                                 \n                                                    \n                                                      \n                                                 \n                                             \n                                               \n                                  \n   \n\n/**\n * Hook that handles setting up Pressability of Text components.\n *\n * NOTE: This hook is relatively expensive so it should only be used absolutely necessary.\n */\nfunction useTextPressability({\n  onLongPress,\n  onPress,\n  onPressIn,\n  onPressOut,\n  onResponderGrant,\n  onResponderMove,\n  onResponderRelease,\n  onResponderTerminate,\n  onResponderTerminationRequest,\n  onStartShouldSetResponder,\n  pressRetentionOffset,\n  suppressHighlighting,\n}                       ) {\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  // Setup pressability config and wrap callbacks needs to track the highlight state.\n  const config = useMemo(() => {\n    let _onPressIn = onPressIn;\n    let _onPressOut = onPressOut;\n\n    // Updating isHighlighted causes unnecessary re-renders for platforms that don't use it\n    // in the best case, and cause issues with text selection in the worst case. Forcing\n    // the isHighlighted prop to false on all platforms except iOS.\n    if (Platform.OS === 'ios') {\n      _onPressIn = (event            ) => {\n        setHighlighted(suppressHighlighting == null || !suppressHighlighting);\n        onPressIn?.(event);\n      };\n\n      _onPressOut = (event            ) => {\n        setHighlighted(false);\n        onPressOut?.(event);\n      };\n    }\n\n    return {\n      disabled: false,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn: _onPressIn,\n      onPressOut: _onPressOut,\n    };\n  }, [\n    pressRetentionOffset,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    suppressHighlighting,\n  ]);\n\n  // Init the pressability class\n  const eventHandlers = usePressability(config);\n\n  // Create NativeText event handlers which proxy events to pressability\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event            ) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event            ) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event            ) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event            ) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              onResponderTerminationRequest != null\n                ? onResponderTerminationRequest\n                : eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder:\n              onStartShouldSetResponder != null\n                ? onStartShouldSetResponder\n                : eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n    ],\n  );\n\n  // Return the highlight state and NativeText event handlers\n  return useMemo(\n    () => [isHighlighted, eventHandlersForText],\n    [isHighlighted, eventHandlersForText],\n  );\n}\n\n                                           \n                             \n                                               \n   \n\n/**\n * Wrap the NativeVirtualText component and initialize pressability.\n *\n * This logic is split out from the main Text component to enable the more\n * expensive pressability logic to be only initialized when needed.\n */\nconst NativePressableVirtualText            \n                                       \n                                    \n  = React.forwardRef(({textProps, textPressabilityProps}, forwardedRef) => {\n  const [isHighlighted, eventHandlersForText] = useTextPressability(\n    textPressabilityProps,\n  );\n\n  return (\n    <NativeVirtualText\n      {...textProps}\n      {...eventHandlersForText}\n      isHighlighted={isHighlighted}\n      isPressable={true}\n      ref={forwardedRef}\n    />\n  );\n});\n\n/**\n * Wrap the NativeText component and initialize pressability.\n *\n * This logic is split out from the main Text component to enable the more\n * expensive pressability logic to be only initialized when needed.\n */\nconst NativePressableText            \n                                       \n                                    \n  = React.forwardRef(({textProps, textPressabilityProps}, forwardedRef) => {\n  const [isHighlighted, eventHandlersForText] = useTextPressability(\n    textPressabilityProps,\n  );\n\n  return (\n    <NativeText\n      {...textProps}\n      {...eventHandlersForText}\n      isHighlighted={isHighlighted}\n      isPressable={true}\n      ref={forwardedRef}\n    />\n  );\n});\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\n/**\n * Whether the current element is the descendant of a <Text> element.\n */\nconst TextAncestorContext                            =\n  React.createContext(false);\nif (__DEV__) {\n  TextAncestorContext.displayName = 'TextAncestorContext';\n}\nmodule.exports = TextAncestorContext;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n                                                                      \n                                                                               \n                                                          \n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport EventEmitter from '../vendor/emitter/EventEmitter';\nimport {isAsyncDebugging} from './DebugEnvironment';\nimport invariant from 'invariant';\n\n                   \n                                \n  \n\nlet lazyState    \n                                       \n                                                                             \n                                                                   \n                          \n                                                                            \n                                                                            \n                                                 \n                                                      \n ;\n\n/**\n * Ensures that all state and listeners are lazily initialized correctly.\n */\nfunction getState()                                  {\n  if (lazyState != null) {\n    return lazyState;\n  }\n  const eventEmitter = new EventEmitter                        ();\n  // NOTE: Avoid initializing `NativeAppearance` until it is actually used.\n  const NativeAppearance = require('./NativeAppearance').default;\n  if (NativeAppearance == null) {\n    // Assign `null` to avoid re-initializing on subsequent invocations.\n    lazyState = {\n      NativeAppearance: null,\n      appearance: null,\n      eventEmitter,\n    };\n  } else {\n    const state                                  = {\n      NativeAppearance,\n      appearance: null,\n      eventEmitter,\n    };\n    new NativeEventEmitter  \n                                                 \n      (NativeAppearance).addListener('appearanceChanged', newAppearance => {\n      state.appearance = {\n        colorScheme: toColorScheme(newAppearance.colorScheme),\n      };\n      eventEmitter.emit('change', state.appearance);\n    });\n    lazyState = state;\n  }\n  return lazyState;\n}\n\n/**\n * Returns the current color scheme preference. This value may change, so the\n * value should not be cached without either listening to changes or using\n * the `useColorScheme` hook.\n */\nexport function getColorScheme()                   {\n  if (__DEV__) {\n    if (isAsyncDebugging) {\n      // Hard code light theme when using the async debugger as\n      // sync calls aren't supported\n      return 'light';\n    }\n  }\n  let colorScheme = null;\n  const state = getState();\n  const {NativeAppearance} = state;\n  if (NativeAppearance != null) {\n    if (state.appearance == null) {\n      // Lazily initialize `state.appearance`. This should only\n      // happen once because we never reassign a null value to it.\n      state.appearance = {\n        colorScheme: toColorScheme(NativeAppearance.getColorScheme()),\n      };\n    }\n    colorScheme = state.appearance.colorScheme;\n  }\n  return colorScheme;\n}\n\n/**\n * Updates the current color scheme to the supplied value.\n */\nexport function setColorScheme(colorScheme                  )       {\n  const state = getState();\n  const {NativeAppearance} = state;\n  if (NativeAppearance != null) {\n    NativeAppearance.setColorScheme(colorScheme ?? 'unspecified');\n    state.appearance = {\n      colorScheme: toColorScheme(NativeAppearance.getColorScheme()),\n    };\n  }\n}\n\n/**\n * Add an event handler that is fired when appearance preferences change.\n */\nexport function addChangeListener(\n  listener                                           ,\n)                    {\n  const {eventEmitter} = getState();\n  return eventEmitter.addListener('change', listener);\n}\n\n/**\n * TODO: (hramos) T52919652 Use ?ColorSchemeName once codegen supports union\n */\nfunction toColorScheme(colorScheme         )                   {\n  invariant(\n    colorScheme === 'dark' || colorScheme === 'light' || colorScheme == null,\n    \"Unrecognized color scheme. Did you mean 'dark', 'light' or null?\",\n  );\n  return colorScheme;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\nexport let isAsyncDebugging          = false;\n\nif (__DEV__) {\n  // These native interfaces don't exist in asynchronous debugging environments.\n  isAsyncDebugging = !global.nativeCallSyncHook && !global.RN$Bridgeless;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n */\n\n// This function dismisses the currently-open keyboard, if any.\n\n'use strict';\n\nconst TextInputState = require('../Components/TextInput/TextInputState');\n\nfunction dismissKeyboard() {\n  TextInputState.blurTextInput(TextInputState.currentlyFocusedInput());\n}\n\nmodule.exports = dismissKeyboard;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n'use strict';\n\n/**\n * Intentional info-level logging for clear separation from ad-hoc console debug logging.\n */\nfunction infoLog(...args              )       {\n  return console.log(...args);\n}\n\nmodule.exports = infoLog;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict-local\n */\n\n'use strict';\n\n                                                        \n\nimport {addChangeListener, getColorScheme} from './Appearance';\nimport {useSyncExternalStore} from 'react';\n\nconst subscribe = (onStoreChange            ) => {\n  const appearanceSubscription = addChangeListener(onStoreChange);\n  return () => appearanceSubscription.remove();\n};\n\nexport default function useColorScheme()                   {\n  return useSyncExternalStore(subscribe, getColorScheme);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport useRefEffect from './useRefEffect';\nimport * as React from 'react';\nimport {useCallback} from 'react';\n\n/**\n * Constructs a new ref that forwards new values to each of the given refs. The\n * given refs will always be invoked in the order that they are supplied.\n *\n * WARNING: A known problem of merging refs using this approach is that if any\n * of the given refs change, the returned callback ref will also be changed. If\n * the returned callback ref is supplied as a `ref` to a React element, this may\n * lead to problems with the given refs being invoked more times than desired.\n */\nexport default function useMergeRefs          (\n  ...refs                                            \n)                            {\n  const refEffect = useCallback(\n    (current          ) => {\n      const cleanups                                      = refs.map(ref => {\n        if (ref == null) {\n          return undefined;\n        } else {\n          if (typeof ref === 'function') {\n            // $FlowIssue[incompatible-type] - Flow does not understand ref cleanup.\n            const cleanup                      = ref(current);\n            return typeof cleanup === 'function'\n              ? cleanup\n              : () => {\n                  ref(null);\n                };\n          } else {\n            ref.current = current;\n            return () => {\n              ref.current = null;\n            };\n          }\n        }\n      });\n\n      return () => {\n        for (const cleanup of cleanups) {\n          cleanup?.();\n        }\n      };\n    },\n    [...refs], // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return useRefEffect(refEffect);\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport {useCallback, useRef} from 'react';\n\n                                 \n\n/**\n * Constructs a callback ref that provides similar semantics as `useEffect`. The\n * supplied `effect` callback will be called with non-null component instances.\n * The `effect` callback can also optionally return a cleanup function.\n *\n * When a component is updated or unmounted, the cleanup function is called. The\n * `effect` callback will then be called again, if applicable.\n *\n * When a new `effect` callback is supplied, the previously returned cleanup\n * function will be called before the new `effect` callback is called with the\n * same instance.\n *\n * WARNING: The `effect` callback should be stable (e.g. using `useCallback`).\n */\nexport default function useRefEffect           (\n  effect                                  ,\n)                                {\n  const cleanupRef = useRef                     (undefined);\n  return useCallback(\n    (instance                  ) => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (instance != null) {\n        cleanupRef.current = effect(instance);\n      }\n    },\n    [effect],\n  );\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react_native\n */\n\n                                                                                 \n                                                                                            \n                                                                                            \n\nimport {AnimatedEvent} from '../../../Libraries/Animated/AnimatedEvent';\nimport AnimatedNode from '../../../Libraries/Animated/nodes/AnimatedNode';\nimport {isPlainObject} from '../../../Libraries/Animated/nodes/AnimatedObject';\nimport flattenStyle from '../../../Libraries/StyleSheet/flattenStyle';\nimport nullthrows from 'nullthrows';\nimport {useMemo, useState} from 'react';\n\n                     \n                                            \n           \n                           \n                   \n                           \n                                   \n  \n\n                            \n                \n                                       \n                                      \n\n                                        \n                                                       \n           \n                                    \n                   \n                           \n                                   \n   \n\n                                     \n                \n                                                         \n                                                          \n\n/**\n * A hook that returns an `AnimatedProps` object that is memoized based on the\n * subset of `props` that are instances of `AnimatedNode` or `AnimatedEvent`.\n */\nexport function useAnimatedPropsMemo(\n  create                     ,\n  // TODO: Make this two separate arguments after the experiment is over. This\n  // is only an array-like structure to make it easier to experiment with this\n  // and `useMemo`.\n  [allowlist, props]                                              ,\n)                {\n  const compositeKey = useMemo(\n    () => createCompositeKeyForProps(props, allowlist),\n    [allowlist, props],\n  );\n\n  const [state, setState] = useState  \n                                       \n                                               \n                         \n    (() => ({\n    allowlist,\n    compositeKey,\n    value: create(),\n  }));\n\n  if (\n    state.allowlist !== allowlist ||\n    !areCompositeKeysEqual(state.compositeKey, compositeKey)\n  ) {\n    setState({\n      allowlist,\n      compositeKey,\n      value: create(),\n    });\n  }\n  return state.value;\n}\n\n/**\n * Creates a new composite key for a `props` object that can be used to detect\n * whether a new `AnimatedProps` instance must be created.\n *\n * - With an allowlist, those props are searched for `AnimatedNode` instances.\n * - Without an allowlist, `style` is searched for `AnimatedNode` instances,\n *   but all other objects and arrays are included (not searched). We do not\n *   search objects and arrays without an allowlist in case they are very large\n *   data structures. We safely traverse `style` becuase it is bounded.\n *\n * Any `AnimatedEvent` instances at the first depth are always included.\n *\n * If `props` contains no `AnimatedNode` or `AnimatedEvent` instances, this\n * returns null.\n */\nexport function createCompositeKeyForProps(\n  props                              ,\n  allowlist                         ,\n)                               {\n  let compositeKey                      = null;\n\n  const keys = Object.keys(props);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n    const value = props[key];\n\n    if (allowlist == null || hasOwn(allowlist, key)) {\n      let compositeKeyComponent;\n      if (key === 'style') {\n        // $FlowFixMe[incompatible-call] - `style` is a valid argument.\n        // $FlowFixMe[incompatible-type] - `flattenStyle` returns an object.\n        const flatStyle                     = flattenStyle(value);\n        if (flatStyle != null) {\n          compositeKeyComponent = createCompositeKeyForObject(\n            flatStyle,\n            allowlist?.style,\n          );\n        }\n      } else if (\n        value instanceof AnimatedNode ||\n        value instanceof AnimatedEvent\n      ) {\n        compositeKeyComponent = value;\n      } else if (Array.isArray(value)) {\n        compositeKeyComponent =\n          allowlist == null ? value : createCompositeKeyForArray(value);\n      } else if (isPlainObject(value)) {\n        compositeKeyComponent =\n          allowlist == null ? value : createCompositeKeyForObject(value);\n      }\n      if (compositeKeyComponent != null) {\n        if (compositeKey == null) {\n          compositeKey = {}                ;\n        }\n        compositeKey[key] = compositeKeyComponent;\n      }\n    }\n  }\n\n  return compositeKey;\n}\n\n/**\n * Creates a new composite key for an array that retains all values that are or\n * contain `AnimatedNode` instances, and `null` for the rest.\n *\n * If `array` contains no `AnimatedNode` instances, this returns null.\n */\nfunction createCompositeKeyForArray(\n  array                       ,\n)                                                               {\n  let compositeKey                                                      = null;\n\n  for (let ii = 0, length = array.length; ii < length; ii++) {\n    const value = array[ii];\n\n    let compositeKeyComponent;\n    if (value instanceof AnimatedNode) {\n      compositeKeyComponent = value;\n    } else if (Array.isArray(value)) {\n      compositeKeyComponent = createCompositeKeyForArray(value);\n    } else if (isPlainObject(value)) {\n      compositeKeyComponent = createCompositeKeyForObject(value);\n    }\n    if (compositeKeyComponent != null) {\n      if (compositeKey == null) {\n        compositeKey = new Array                                       (\n          array.length,\n        ).fill(null);\n      }\n      compositeKey[ii] = compositeKeyComponent;\n    }\n  }\n\n  return compositeKey;\n}\n\n/**\n * Creates a new composite key for an object that retains only properties that\n * are or contain `AnimatedNode` instances.\n *\n * When used to create composite keys for `style` props:\n *\n * - With an allowlist, those properties are searched.\n * - Without an allowlist, every property is searched.\n *\n * If `object` contains no `AnimatedNode` instances, this returns null.\n */\nfunction createCompositeKeyForObject(\n  object                              ,\n  allowlist                          ,\n)                                                               {\n  let compositeKey                                                    = null;\n\n  const keys = Object.keys(object);\n  for (let ii = 0, length = keys.length; ii < length; ii++) {\n    const key = keys[ii];\n\n    if (allowlist == null || hasOwn(allowlist, key)) {\n      const value = object[key];\n\n      let compositeKeyComponent;\n      if (value instanceof AnimatedNode) {\n        compositeKeyComponent = value;\n      } else if (Array.isArray(value)) {\n        compositeKeyComponent = createCompositeKeyForArray(value);\n      } else if (isPlainObject(value)) {\n        compositeKeyComponent = createCompositeKeyForObject(value);\n      }\n      if (compositeKeyComponent != null) {\n        if (compositeKey == null) {\n          compositeKey = {}                                              ;\n        }\n        compositeKey[key] = compositeKeyComponent;\n      }\n    }\n  }\n\n  return compositeKey;\n}\n\nexport function areCompositeKeysEqual(\n  maybePrev                              ,\n  maybeNext                              ,\n  allowlist                         ,\n)          {\n  if (maybePrev === maybeNext) {\n    return true;\n  }\n  if (maybePrev === null || maybeNext === null) {\n    return false;\n  }\n  // Help Flow retain the type refinements of these.\n  const prev = maybePrev;\n  const next = maybeNext;\n\n  const keys = Object.keys(prev);\n  const length = keys.length;\n  if (length !== Object.keys(next).length) {\n    return false;\n  }\n  for (let ii = 0; ii < length; ii++) {\n    const key = keys[ii];\n    if (!hasOwn(next, key)) {\n      return false;\n    }\n    const prevComponent = prev[key];\n    const nextComponent = next[key];\n\n    if (key === 'style') {\n      // We know style components are objects with non-mixed values.\n      if (\n        !areCompositeKeyComponentsEqual(\n          // $FlowIgnore[incompatible-cast]\n          prevComponent                                  ,\n          // $FlowIgnore[incompatible-cast]\n          nextComponent                                  ,\n        )\n      ) {\n        return false;\n      }\n    } else if (\n      prevComponent instanceof AnimatedNode ||\n      prevComponent instanceof AnimatedEvent\n    ) {\n      if (prevComponent !== nextComponent) {\n        return false;\n      }\n    } else {\n      // When `allowlist` is null, the components must be the same. Otherwise,\n      // we created the components using deep traversal, so deep compare them.\n      if (allowlist == null) {\n        if (prevComponent !== nextComponent) {\n          return false;\n        }\n      } else {\n        if (\n          !areCompositeKeyComponentsEqual(\n            // $FlowIgnore[incompatible-cast]\n            prevComponent                                  ,\n            // $FlowIgnore[incompatible-cast]\n            nextComponent                                  ,\n          )\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n\nfunction areCompositeKeyComponentsEqual(\n  prev                                       ,\n  next                                       ,\n)          {\n  if (prev === next) {\n    return true;\n  }\n  if (prev instanceof AnimatedNode) {\n    return prev === next;\n  }\n  if (Array.isArray(prev)) {\n    if (!Array.isArray(next)) {\n      return false;\n    }\n    const length = prev.length;\n    if (length !== next.length) {\n      return false;\n    }\n    for (let ii = 0; ii < length; ii++) {\n      if (!areCompositeKeyComponentsEqual(prev[ii], next[ii])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (isPlainObject(prev)) {\n    if (!isPlainObject(next)) {\n      return false;\n    }\n    const keys = Object.keys(prev);\n    const length = keys.length;\n    if (length !== Object.keys(next).length) {\n      return false;\n    }\n    for (let ii = 0; ii < length; ii++) {\n      const key = keys[ii];\n      if (\n        !hasOwn(nullthrows(next), key) ||\n        !areCompositeKeyComponentsEqual(prev[key], next[key])\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n// Supported versions of JSC do not implement the newer Object.hasOwn. Remove\n// this shim when they do.\n// $FlowIgnore[method-unbinding]\nconst _hasOwnProp = Object.prototype.hasOwnProperty;\nconst hasOwn                                                   =\n  // $FlowIgnore[method-unbinding]\n  Object.hasOwn ?? ((obj, prop) => _hasOwnProp.call(obj, prop));\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react_native\n */\n\n                                                                                                                  \n                                                                                \n                                                                                      \n\nimport AndroidHorizontalScrollViewNativeComponent from '../../../Libraries/Components/ScrollView/AndroidHorizontalScrollViewNativeComponent';\nimport ScrollContentViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollContentViewNativeComponent';\nimport ScrollViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollViewNativeComponent';\nimport Platform from '../../../Libraries/Utilities/Platform';\nimport AndroidHorizontalScrollContentViewNativeComponent from '../specs/components/AndroidHorizontalScrollContentViewNativeComponent';\n\nexport const HScrollViewNativeComponent                                       =\n  Platform.OS === 'android'\n    ? AndroidHorizontalScrollViewNativeComponent\n    : ScrollViewNativeComponent;\n\nexport const HScrollContentViewNativeComponent                           =\n  Platform.OS === 'android'\n    ? AndroidHorizontalScrollContentViewNativeComponent\n    : ScrollContentViewNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict-local\n * @format\n * @oncall react_native\n */\n\n                                                                                                                  \n                                                                                \n                                                                                      \n\nimport ScrollContentViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollContentViewNativeComponent';\nimport ScrollViewNativeComponent from '../../../Libraries/Components/ScrollView/ScrollViewNativeComponent';\nimport View from '../../../Libraries/Components/View/View';\nimport Platform from '../../../Libraries/Utilities/Platform';\n\nexport const VScrollViewNativeComponent                                       =\n  ScrollViewNativeComponent;\n\nexport const VScrollContentViewNativeComponent                           =\n  Platform.OS === 'android' ? View : ScrollContentViewNativeComponent;\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\n/**\n * Combines two styles such that `style2` will override any styles in `style1`.\n * If either style is null or undefined, the other one is returned without\n * allocating an array, saving allocations and enabling memoization.\n */\nexport default function composeStyles        (\n  style1     ,\n  style2     ,\n)                                       {\n  if (style1 == null) {\n    return style2;\n  }\n  if (style2 == null) {\n    return style1;\n  }\n  return [style1, style2];\n}\n"],"x_facebook_sources":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"x_hermes_function_offsets":{"0":[0,1509,1573,1624,1711,1765,1882,1905,2332,2352,2372,2392,2414,2436,2458,2480,2489,2498,2507,2516,2525,2534,2543,2552,2696,2705,2849,2858,3002,3011,3155,3164,3308,3317,3681,3690,3699,3708,3913,3922,3931,3940,4759,4768,4777,4786,4930,4939,5188,5197,5206,5218,5443,5452,5579,5787,5874,5942,6017,6110,6138,6874,6883,6892,6901,6910,7054,7063,7304,7313,7322,7331,7475,7484,7609,7618,7649,7672,8028,8037,8046,8072,8098,8198,8207,8362,8595,8604,9443,9545,9589,9661,9698,9818,9861,9954,10001,10126,10145,10164,10194,10300,10421,10430,10471,10499,10608,10667,10770,10894,11133,11162,11213,11238,11263,11292,11321,11371,11407,11431,11460,11489,11514,11539,11568,11597,11644,11669,11702,11735,11815,11990,12091,12184,12208,12289,12298,12307,12316,12524,12533,12542,12551,12984,12993,13002,13011,13020,13056,13488,13497,13506,13515,13524,13560,13737,13746,13923,13932,14063,14072,14203,14212,14344,14353,14484,14493,14624,14633,14936,14945,14972,14999,15026,15053,15080,15107,15421,15574,15809,15857,15895,15949,15958,15967,16117,16296,16339,16381,16406,16449,16465,16533,16592,16624,16711,16896,16927,17765,17825,17919,17962,17971,18011,18051,18091,18131,18171,18214,18260,18365,18782,18882,19048,19077,19097,19117,19186,19205,19305,19471,19545,19565,19585,19654,19673,19773,19853,19882,19902,19922,19991,20010,20074,20164,20296,20341,20375,20405,20439,20443,20545,20626,20685,20795,20823,20869,20897,20935,20969,20973,21040,21083,21137,21259,21363,21506,21532,21564,21598,21616,21676,22351,22367,22403,22503,22512,22516,22520,22524,22528,22532,22604,22660,22674,22753,22811,22890,22948,22957,22976,22995,23004,23023,23048,23312,23321,23338,23358,23363,23431,23440,23453,23469,23500,23553,23592,23633,23679,23783,23818,23857,24069,24114,24119,24135,24165,24181,24263,24419,24452,24478,24519,24735,24757,24780,24810,24921,25022,25133,25142,25151,25474,25483,25679,25935,26053,26262,26296,26424,26739,26865,26879,26951,26955,27202,27211,27356,27464,27533,27713,27731,27959,28079,28408,28417,28585,29284,29423,29692,29734,29772,30630,30769,31046,31105,31114,31259,31404,31572,31733,31869,31887,32140,32279,32491,32521,32547,32559,32624,32703,32825,32922,33158,33412,33496,33505,33668,33677,33840,33849,34289,34298,34508,34803,34918,35081,35090,35253,35262,35425,35434,35777,35799,35884,36099,36132,36141,36150,36422,36431,36622,36785,36885,36922,36962,37058,37154,37226,37600,37803,37887,37991,38000,38352,38730,38949,39120,39210,39273,39336,39421,39506,39623,39749,39875,39917,39998,40128,40237,40484,40493,40684,40794,40879,40919,41021,41102,41183,41249,41546,41555,41746,41974,42074,42166,42206,42302,42398,42470,42921,43071,43180,43393,43796,43944,43988,44004,44093,44109,44196,44215,44256,44354,44437,44504,44513,44727,44799,44896,44981,45050,45085,45166,45247,45423,45491,45738,45747,45938,46013,46098,46147,46187,46268,46349,46406,46678,46687,46878,47041,47141,47178,47218,47314,47410,47482,47727,47736,47768,48263,48402,48406,48482,48486,48500,48504,48508,48514,48557,48632,48678,48721,48763,48784,48847,48866,49023,49057,49067,49083,49097,49101,49502,49590,49810,50007,50046,50055,50064,50306,50432,50464,50478,50541,50577,50609,50623,50747,50871,50999,51058,51079,51146,51704,51962,51971,52300,52661,52834,53048,53142,53266,53458,53495,53675,53760,53906,54052,54104,54245,54271,54849,55156,55165,55407,55674,55878,56221,56315,56439,56563,56691,56832,56991,57017,57289,57298,57489,57652,57752,57789,57829,57925,58021,58093,58370,58379,58570,58708,58816,58835,58946,59027,59150,59328,59673,59788,59817,60072,60113,60122,60364,60490,60618,60651,60665,60720,60753,60772,60805,60819,60943,61067,61316,61411,61870,61940,62009,62023,62068,62270,62314,62428,62437,62446,62890,63199,63265,63463,63492,63511,63608,63725,63766,63818,63888,63958,64064,64138,64162,64202,64332,64360,64435,64472,64520,64612,64659,64938,64947,65345,65634,65684,65734,65769,65804,65847,65904,65961,66065,66102,66181,66224,66249,66289,66385,66481,66581,66854,66863,67031,67091,67256,67368,67524,67534,67673,67803,67854,67863,68251,68538,68550,68602,68644,68811,69083,69110,69211,69302,69431,69526,69546,69586,69610,69629,69704,69752,69881,69976,69996,70036,70060,70079,70154,70202,70263,70457,70466,70714,70887,71036,71056,71075,71103,71129,71149,71166,71197,71303,71579,71701,71787,71851,71871,71894,72090,72376,73238,73293,73309,73413,73673,74476,74485,74522,74560,74579,74599,74757,74832,74884,75080,75256,75369,75533,75548,75604,75709,75779,75784,75920,75980,76036,76096,76152,76231,76329,76462,76583,76659,76733,76737,76976,76994,77033,77140,77333,77425,77468,77520,77718,77774,77830,77878,78197,78292,78424,78450,78473,78614,78660,78867,80466,80718,80749,80785,80905,81079,81088,81323,81332,81341,81350,81689,81698,82489,82546,82711,82808,82847,83004,83027,83480,83555,83697,83791,83882,83983,84021,84418,84678,84830,85078,85169,85260,85348,85411,85520,85569,85601,85671,86915,87078,87117,87164,87235,87470,88251,88255,88844,88863,88956,88986,89023,89120,89150,89187,89210,89260,89290,89319,89369,89378,89417,90439,90560,90726,90856,90865,91197,91296,91371,91391,91420,91711,92011,92025,92034,92058,92082,92172,92272,92283,92330,92339,92348,92357,92366,92375,92516,92800,93025,93034,93135,93162,93171,93317,93430,93490,93546,93602,94074,94155,94428,94450,94472,94555,94678,94707,94747,94813,94827,94926,95001,95046,95408,95432,95440,95470,95485,95489,95493,95645,95841,95919,95949,95980,96003,96061,96130,96163,96194,96220,96470,96572,96699,96749,96783,96845,97293,97308,97579,97646,97650,97654,97658,97713,97745,98196,98255,98269,98305,98703,98981,99001,99107,99207,99365,99404,99487,99567,99730,99841,99884,99963,99997,100031,100065,100099,100129,100158,100189,100221,100252,100285,100453,100607,100708,100841,100864,101006,101037,101068,101334,101638,101647,101861,101928,101948,101985,102028,102070,102114,102158,102204,102371,102381,102393,102704,102713,102722,102779,102820,103413,103472,103566,103575,103599,103623,103658,103682,104113,104244,104327,104343,104426,104465,104787,104824,104861,104891,105131,105164,105193,105467,105496,105525,105553,105730,105871,105906,106062,106097,106251,106271,106425,106445,106670,106706,107069,107161,107355,107375,107472,107857,107908,107952,107998,108044,108090,108136,108150,108221,108488,108492,108496,108500,108509,108518,108527,108682,108691,108795,108837,108862,108918,108978,108997,109001,109142,109313,109357,109383,109403,109412,109508,109551,109619,109628,109665,109669,109673,109801,109810,109833,109971,109994,110027,110036,110045,110305,110463,110468,110555,110918,110927,111363,111694,111785,111849,111897,112029,112074,112119,112164,112209,112234,113762,113903,114044,114084,114088,114367,114553,114627,114711,114792,114831,114888,114897,114906,114915,114999,115008,115046,115082,115155,115205,115334,115371,115380,115416,115434,115611,115679,115721,115799,115817,115836,115898,115907,116012,116075,116145,116154,116534,116729,116757,116796,117163,117364,117596,117845,118177,118186,118195,118204,118230,118533,118542,118551,118812,118821,118830,118917,118951]}}