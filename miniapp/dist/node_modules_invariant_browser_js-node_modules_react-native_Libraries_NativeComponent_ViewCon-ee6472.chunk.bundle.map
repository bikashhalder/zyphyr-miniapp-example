{"version":3,"sources":["webpack://org-mini-app/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs","webpack://org-mini-app/node_modules/invariant/browser.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/NativePlatformConstantsAndroid.js","webpack://org-mini-app/node_modules/react-native/src/private/specs/modules/NativePlatformConstantsAndroid.js","webpack://org-mini-app/node_modules/react-native/Libraries/NativeComponent/ViewConfigIgnore.js","webpack://org-mini-app/node_modules/react-native/Libraries/Utilities/Platform.android.js"],"names":["WeakMap","cacheBabelInterop","cacheNodeInterop","_getRequireWildcardCache","nodeInterop","obj","Object","hasPropertyDescriptor","desc","args","argIndex","Error","_default","_NativePlatformConstantsAndroid","WeakSet","ignoredViewConfigProps","_Platform","ConditionallyIgnoredEventHandlers","DynamicallyInjectedByGestureHandler","isIgnored","spec"],"mappings":"A,I,M,M,K,G,I,M,K,I,Q,I,E,K,O,K,O,K,O,K,O,K,O,K,O,I,K,E,E,K,I,QAqCS,Q,EAnCT,IACQ,KAAA,OAAJ,IAE4BA,MAAAA,KAAAA,OAAAA,IAAAA,IAAxBC,IACuBD,MAAAA,KAAAA,OAAAA,IAAAA,IAAvBE,IAE+B,KAA3BC,GAAAA,SAER,KAFA,IALmC,EAMVD,MAAdE,GAAiCH,IAAjCG,EAAcF,IAArB,EAGR,MACI,GAAA,GAA2BG,KAA3B,GAA2C,IAC3C,OAAoB,OAApB,QAAA,OAEYF,GAAAA,MAAAA,KAEZ,GAAsB,KAAA,KAAtB,MAEa,KACeG,MAAAA,KAAAA,GAAyBA,MAAAA,KAErD,GAAA,MAAA,WAAA,SAAA,GACI,IAAyBA,MAAAA,KAAgB,KAAoB,KAAA,MAA7D,KACeC,GAAwBD,MAA+B,KAAA,MAClE,GAAaE,KAAb,GAAyBA,KAAzB,GACsB,IAAN,OADhB,EAAoCF,MAAqB,KAAA,UAAzD,EAKM,MAEd,GAAoB,KAAA,MAEpB,EAjB6C,KAAA,KAAhB,EAJoD,EAAA,IAAP,E,ECM9D,QA4BF,Q,EA5BE,UAOd,MAEE,OAMa,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,IAAPG,MACAC,MACQC,MACI,KAAC,cAAO,KAAR,MADJA,KAAAA,OAAAA,IAAAA,QAGF,MAXZ,IACcA,MAAAA,KAAAA,WAAAA,IAAAA,IADd,GAciB,MACjB,EAEJ,EARkDF,GAAAA,IAAKC,IAAAA,GAAAA,GAAAA,IAAD,IAAX,E,U,M,K,I,Q,O,M,KCpC3CE,EAAAA,I,KAAAA,Q,e,W,K,K,W,K,M,KAAeC,KAAfD,I,EAAAA,GAAAA,I,E,U,M,K,I,Q,O,M,KCwBAA,EAAAA,I,KAAAA,Q,e,K,W,K,KAAgD,SAAA,KAAhDA,I,EAAAA,GAAAA,I,E,Q,K,I,K,I,K,MClBC,MAAA,KAAA,IAAA,QAAA,O,EA4BgD,K,IAlBE,K,IA2B1B,K,O,Q,S,G,M,K,E,I,I,I,O,U,K,W,K,K,IAjCUE,MAAAA,KAAAA,OAAAA,IAAAA,IAA7BC,I,EAMC,GACLA,GAAAA,IAA0B,KAAA,KAC1B,EAmBIC,GAAAA,IAAAA,KAAQ,SAAZ,MAGA,KAFE,EAKG,GACD,OAAJ,MAAA,MAGA,EAFSD,GAAAA,IAA0B,KAAA,KAAjC,EAXYE,GAAAA,I,EAlBAC,GAAAA,I,EA2BAC,GAAAA,I,E,OCrCf,MAAA,KAAA,IAAA,WAAA,e,K,W,K,K,IAS8B,UAI7B,SAJ6B,MAS7B,SAT6B,MAqC7B,SArC6B,MA6C7B,SA7C6B,MAkD7B,SAlD6B,MAuD7B,SAvD6B,MA0DlB,KA1DkB,OAqEjB,M,EAjEZ,EAEa,KAAU,KAArB,EAGF,EAoBU,OAAR,IAEqBN,GAAAA,IAAAA,KAA2C,KAAA,IAA9C,MAGP,KAAX,EAGF,EAKE,EAGF,EAEa,KAAU,OAAd,IAA0C,KAAjD,EAGF,EAEa,KAAU,SAAd,IAAP,EAGF,EACE,EAES,OACT,IAAA,OAGI,IAAA,GAIEO,KAJF,EAEEA,KALN,EAEIA,KAFJ","sourcesContent":["\"use strict\";\n\nfunction _getRequireWildcardCache(nodeInterop) {\n    if (typeof WeakMap !== \"function\") return null;\n\n    var cacheBabelInterop = new WeakMap();\n    var cacheNodeInterop = new WeakMap();\n\n    return (_getRequireWildcardCache = function(nodeInterop) {\n        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n    })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n    if (!nodeInterop && obj && obj.__esModule) return obj;\n    if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") return { default: obj };\n\n    var cache = _getRequireWildcardCache(nodeInterop);\n\n    if (cache && cache.has(obj)) return cache.get(obj);\n\n    var newObj = { __proto__: null };\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n        if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);\n            else newObj[key] = obj[key];\n        }\n    }\n\n    newObj.default = obj;\n\n    if (cache) cache.set(obj, newObj);\n\n    return newObj;\n}\nexports._ = _interop_require_wildcard;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","export * from '../../src/private/specs/modules/NativePlatformConstantsAndroid';\nimport NativePlatformConstantsAndroid from '../../src/private/specs/modules/NativePlatformConstantsAndroid';\nexport default NativePlatformConstantsAndroid;","                                                                               \nimport * as TurboModuleRegistry from '../../../../Libraries/TurboModule/TurboModuleRegistry';\n                                          \n                \n                \n                \n                      \n   \n                                         \n                     \n                                \n                                                \n                  \n                  \n                 \n                      \n                \n                      \n                 \n                \n                       \n   \n                                           \n                                                \n                              \n \nexport default (TurboModuleRegistry.getEnforcing      ('PlatformConstants')      );","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n *       strict\n * @format\n */\n\nimport Platform from '../Utilities/Platform';\n\nconst ignoredViewConfigProps = new WeakSet       ();\n\n/**\n * Decorates ViewConfig values that are dynamically injected by the library,\n * react-native-gesture-handler. (T45765076)\n */\nexport function DynamicallyInjectedByGestureHandler          (object   )    {\n  ignoredViewConfigProps.add(object);\n  return object;\n}\n\n/**\n * On iOS, ViewManager event declarations generate {eventName}: true entries\n * in ViewConfig valueAttributes. These entries aren't generated for Android.\n * This annotation allows Static ViewConfigs to insert these entries into\n * iOS but not Android.\n *\n * In the future, we want to remove this platform-inconsistency. We want\n * to set RN$ViewConfigEventValidAttributesDisabled = true server-side,\n * so that iOS does not generate validAttributes from event props in iOS RCTViewManager,\n * since Android does not generate validAttributes from events props in Android ViewManager.\n *\n * TODO(T110872225): Remove this logic, after achieving platform-consistency\n */\nexport function ConditionallyIgnoredEventHandlers                           (\n  value   ,\n)           {\n  if (Platform.OS === 'ios') {\n    return value;\n  }\n  return undefined;\n}\n\nexport function isIgnored(value       )          {\n  if (typeof value === 'object' && value != null) {\n    return ignoredViewConfigProps.has(value);\n  }\n  return false;\n}\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *       strict\n */\n\n             \n                           \n                     \n                         \n\nimport NativePlatformConstantsAndroid from './NativePlatformConstantsAndroid';\n\nconst Platform               = {\n  __constants: null,\n  OS: 'android',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version()         {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.Version;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants()    \n                       \n                                  \n                          \n                    \n                    \n                    \n                          \n       \n                    \n                    \n                   \n                        \n                  \n                        \n                   \n                  \n                         \n     {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsAndroid.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting()          {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV()          {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.uiMode === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isVision()          {\n    return false;\n  },\n  select:    (spec                       )    =>\n    'android' in spec\n      ? // $FlowFixMe[incompatible-return]\n        spec.android\n      : 'native' in spec\n        ? // $FlowFixMe[incompatible-return]\n          spec.native\n        : // $FlowFixMe[incompatible-return]\n          spec.default,\n};\n\nmodule.exports = Platform;\n"],"x_facebook_sources":[null,null,null,null,null,null],"x_hermes_function_offsets":{"0":[0,140,169,277,298,599,619,813,840,984,993,1124,1133,1356,1378,1412,1455,1464,1473,1482,1680,1694,1741,1745,1770,1792,1796]}}